// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// APIPageInfo PageInfo represents both server-driven and client-driven pagination response.
// Server-driven pagination is a model in which the server returns some
// amount of data along with an token indicating there is more data
// and where subsequent queries can get the next page of data.
// Client-driven pagination is a model in which rows are addressable by
// offset and page size (limit).
//
// swagger:model apiPageInfo
type APIPageInfo struct {

	// The service may optionally include the offset of the next page of resources.
	// A null value indicates no more pages.
	Offset int32 `json:"offset,omitempty"`

	// The service response should contain a string to indicate
	// the next page of resources.
	// A null value indicates no more pages.
	PageToken string `json:"page_token,omitempty"`

	// The service may optionally include the total number of resources being paged.
	Size int32 `json:"size,omitempty"`
}

// Validate validates this api page info
func (m *APIPageInfo) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this api page info based on context it is used
func (m *APIPageInfo) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *APIPageInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *APIPageInfo) UnmarshalBinary(b []byte) error {
	var res APIPageInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
