// Code generated by go-swagger; DO NOT EDIT.

package network_lists

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NetworkListsDeleteSingleNetworkListsReader is a Reader for the NetworkListsDeleteSingleNetworkLists structure.
type NetworkListsDeleteSingleNetworkListsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *NetworkListsDeleteSingleNetworkListsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewNetworkListsDeleteSingleNetworkListsNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewNetworkListsDeleteSingleNetworkListsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewNetworkListsDeleteSingleNetworkListsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewNetworkListsDeleteSingleNetworkListsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /network_lists/{id}] network_listsDeleteSingleNetworkLists", response, response.Code())
	}
}

// NewNetworkListsDeleteSingleNetworkListsNoContent creates a NetworkListsDeleteSingleNetworkListsNoContent with default headers values
func NewNetworkListsDeleteSingleNetworkListsNoContent() *NetworkListsDeleteSingleNetworkListsNoContent {
	return &NetworkListsDeleteSingleNetworkListsNoContent{}
}

/*
NetworkListsDeleteSingleNetworkListsNoContent describes a response with status code 204, with default header values.

No Content
*/
type NetworkListsDeleteSingleNetworkListsNoContent struct {
}

// IsSuccess returns true when this network lists delete single network lists no content response has a 2xx status code
func (o *NetworkListsDeleteSingleNetworkListsNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this network lists delete single network lists no content response has a 3xx status code
func (o *NetworkListsDeleteSingleNetworkListsNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this network lists delete single network lists no content response has a 4xx status code
func (o *NetworkListsDeleteSingleNetworkListsNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this network lists delete single network lists no content response has a 5xx status code
func (o *NetworkListsDeleteSingleNetworkListsNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this network lists delete single network lists no content response a status code equal to that given
func (o *NetworkListsDeleteSingleNetworkListsNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the network lists delete single network lists no content response
func (o *NetworkListsDeleteSingleNetworkListsNoContent) Code() int {
	return 204
}

func (o *NetworkListsDeleteSingleNetworkListsNoContent) Error() string {
	return fmt.Sprintf("[DELETE /network_lists/{id}][%d] networkListsDeleteSingleNetworkListsNoContent ", 204)
}

func (o *NetworkListsDeleteSingleNetworkListsNoContent) String() string {
	return fmt.Sprintf("[DELETE /network_lists/{id}][%d] networkListsDeleteSingleNetworkListsNoContent ", 204)
}

func (o *NetworkListsDeleteSingleNetworkListsNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewNetworkListsDeleteSingleNetworkListsBadRequest creates a NetworkListsDeleteSingleNetworkListsBadRequest with default headers values
func NewNetworkListsDeleteSingleNetworkListsBadRequest() *NetworkListsDeleteSingleNetworkListsBadRequest {
	return &NetworkListsDeleteSingleNetworkListsBadRequest{}
}

/*
	NetworkListsDeleteSingleNetworkListsBadRequest describes a response with status code 400, with default header values.

- "invalid 'id': value must be greater than or equal to 0"
- network list that is assigned to a security policy cannot be deleted
*/
type NetworkListsDeleteSingleNetworkListsBadRequest struct {
	Payload *NetworkListsDeleteSingleNetworkListsBadRequestBody
}

// IsSuccess returns true when this network lists delete single network lists bad request response has a 2xx status code
func (o *NetworkListsDeleteSingleNetworkListsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this network lists delete single network lists bad request response has a 3xx status code
func (o *NetworkListsDeleteSingleNetworkListsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this network lists delete single network lists bad request response has a 4xx status code
func (o *NetworkListsDeleteSingleNetworkListsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this network lists delete single network lists bad request response has a 5xx status code
func (o *NetworkListsDeleteSingleNetworkListsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this network lists delete single network lists bad request response a status code equal to that given
func (o *NetworkListsDeleteSingleNetworkListsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the network lists delete single network lists bad request response
func (o *NetworkListsDeleteSingleNetworkListsBadRequest) Code() int {
	return 400
}

func (o *NetworkListsDeleteSingleNetworkListsBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /network_lists/{id}][%d] networkListsDeleteSingleNetworkListsBadRequest  %+v", 400, o.Payload)
}

func (o *NetworkListsDeleteSingleNetworkListsBadRequest) String() string {
	return fmt.Sprintf("[DELETE /network_lists/{id}][%d] networkListsDeleteSingleNetworkListsBadRequest  %+v", 400, o.Payload)
}

func (o *NetworkListsDeleteSingleNetworkListsBadRequest) GetPayload() *NetworkListsDeleteSingleNetworkListsBadRequestBody {
	return o.Payload
}

func (o *NetworkListsDeleteSingleNetworkListsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(NetworkListsDeleteSingleNetworkListsBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNetworkListsDeleteSingleNetworkListsNotFound creates a NetworkListsDeleteSingleNetworkListsNotFound with default headers values
func NewNetworkListsDeleteSingleNetworkListsNotFound() *NetworkListsDeleteSingleNetworkListsNotFound {
	return &NetworkListsDeleteSingleNetworkListsNotFound{}
}

/*
	NetworkListsDeleteSingleNetworkListsNotFound describes a response with status code 404, with default header values.

- 'id' value must contain existing network list identifiers
*/
type NetworkListsDeleteSingleNetworkListsNotFound struct {
	Payload *NetworkListsDeleteSingleNetworkListsNotFoundBody
}

// IsSuccess returns true when this network lists delete single network lists not found response has a 2xx status code
func (o *NetworkListsDeleteSingleNetworkListsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this network lists delete single network lists not found response has a 3xx status code
func (o *NetworkListsDeleteSingleNetworkListsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this network lists delete single network lists not found response has a 4xx status code
func (o *NetworkListsDeleteSingleNetworkListsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this network lists delete single network lists not found response has a 5xx status code
func (o *NetworkListsDeleteSingleNetworkListsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this network lists delete single network lists not found response a status code equal to that given
func (o *NetworkListsDeleteSingleNetworkListsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the network lists delete single network lists not found response
func (o *NetworkListsDeleteSingleNetworkListsNotFound) Code() int {
	return 404
}

func (o *NetworkListsDeleteSingleNetworkListsNotFound) Error() string {
	return fmt.Sprintf("[DELETE /network_lists/{id}][%d] networkListsDeleteSingleNetworkListsNotFound  %+v", 404, o.Payload)
}

func (o *NetworkListsDeleteSingleNetworkListsNotFound) String() string {
	return fmt.Sprintf("[DELETE /network_lists/{id}][%d] networkListsDeleteSingleNetworkListsNotFound  %+v", 404, o.Payload)
}

func (o *NetworkListsDeleteSingleNetworkListsNotFound) GetPayload() *NetworkListsDeleteSingleNetworkListsNotFoundBody {
	return o.Payload
}

func (o *NetworkListsDeleteSingleNetworkListsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(NetworkListsDeleteSingleNetworkListsNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNetworkListsDeleteSingleNetworkListsInternalServerError creates a NetworkListsDeleteSingleNetworkListsInternalServerError with default headers values
func NewNetworkListsDeleteSingleNetworkListsInternalServerError() *NetworkListsDeleteSingleNetworkListsInternalServerError {
	return &NetworkListsDeleteSingleNetworkListsInternalServerError{}
}

/*
	NetworkListsDeleteSingleNetworkListsInternalServerError describes a response with status code 500, with default header values.

- Internal server error occurred
*/
type NetworkListsDeleteSingleNetworkListsInternalServerError struct {
	Payload *NetworkListsDeleteSingleNetworkListsInternalServerErrorBody
}

// IsSuccess returns true when this network lists delete single network lists internal server error response has a 2xx status code
func (o *NetworkListsDeleteSingleNetworkListsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this network lists delete single network lists internal server error response has a 3xx status code
func (o *NetworkListsDeleteSingleNetworkListsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this network lists delete single network lists internal server error response has a 4xx status code
func (o *NetworkListsDeleteSingleNetworkListsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this network lists delete single network lists internal server error response has a 5xx status code
func (o *NetworkListsDeleteSingleNetworkListsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this network lists delete single network lists internal server error response a status code equal to that given
func (o *NetworkListsDeleteSingleNetworkListsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the network lists delete single network lists internal server error response
func (o *NetworkListsDeleteSingleNetworkListsInternalServerError) Code() int {
	return 500
}

func (o *NetworkListsDeleteSingleNetworkListsInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /network_lists/{id}][%d] networkListsDeleteSingleNetworkListsInternalServerError  %+v", 500, o.Payload)
}

func (o *NetworkListsDeleteSingleNetworkListsInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /network_lists/{id}][%d] networkListsDeleteSingleNetworkListsInternalServerError  %+v", 500, o.Payload)
}

func (o *NetworkListsDeleteSingleNetworkListsInternalServerError) GetPayload() *NetworkListsDeleteSingleNetworkListsInternalServerErrorBody {
	return o.Payload
}

func (o *NetworkListsDeleteSingleNetworkListsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(NetworkListsDeleteSingleNetworkListsInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
NetworkListsDeleteSingleNetworkListsBadRequestBody network lists delete single network lists bad request body
swagger:model NetworkListsDeleteSingleNetworkListsBadRequestBody
*/
type NetworkListsDeleteSingleNetworkListsBadRequestBody struct {

	// error
	Error *NetworkListsDeleteSingleNetworkListsBadRequestBodyError `json:"error,omitempty"`
}

// Validate validates this network lists delete single network lists bad request body
func (o *NetworkListsDeleteSingleNetworkListsBadRequestBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateError(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *NetworkListsDeleteSingleNetworkListsBadRequestBody) validateError(formats strfmt.Registry) error {
	if swag.IsZero(o.Error) { // not required
		return nil
	}

	if o.Error != nil {
		if err := o.Error.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("networkListsDeleteSingleNetworkListsBadRequest" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("networkListsDeleteSingleNetworkListsBadRequest" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this network lists delete single network lists bad request body based on the context it is used
func (o *NetworkListsDeleteSingleNetworkListsBadRequestBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateError(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *NetworkListsDeleteSingleNetworkListsBadRequestBody) contextValidateError(ctx context.Context, formats strfmt.Registry) error {

	if o.Error != nil {

		if swag.IsZero(o.Error) { // not required
			return nil
		}

		if err := o.Error.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("networkListsDeleteSingleNetworkListsBadRequest" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("networkListsDeleteSingleNetworkListsBadRequest" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *NetworkListsDeleteSingleNetworkListsBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *NetworkListsDeleteSingleNetworkListsBadRequestBody) UnmarshalBinary(b []byte) error {
	var res NetworkListsDeleteSingleNetworkListsBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
NetworkListsDeleteSingleNetworkListsBadRequestBodyError network lists delete single network lists bad request body error
swagger:model NetworkListsDeleteSingleNetworkListsBadRequestBodyError
*/
type NetworkListsDeleteSingleNetworkListsBadRequestBodyError struct {

	// code
	// Example: INVALID_ARGUMENT
	Code string `json:"code,omitempty"`

	// message
	// Example: invalid 'id': value must be greater than or equal to 0
	Message string `json:"message,omitempty"`

	// status
	// Example: 400
	Status string `json:"status,omitempty"`
}

// Validate validates this network lists delete single network lists bad request body error
func (o *NetworkListsDeleteSingleNetworkListsBadRequestBodyError) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this network lists delete single network lists bad request body error based on context it is used
func (o *NetworkListsDeleteSingleNetworkListsBadRequestBodyError) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *NetworkListsDeleteSingleNetworkListsBadRequestBodyError) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *NetworkListsDeleteSingleNetworkListsBadRequestBodyError) UnmarshalBinary(b []byte) error {
	var res NetworkListsDeleteSingleNetworkListsBadRequestBodyError
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
NetworkListsDeleteSingleNetworkListsInternalServerErrorBody network lists delete single network lists internal server error body
swagger:model NetworkListsDeleteSingleNetworkListsInternalServerErrorBody
*/
type NetworkListsDeleteSingleNetworkListsInternalServerErrorBody struct {

	// error
	Error *NetworkListsDeleteSingleNetworkListsInternalServerErrorBodyError `json:"error,omitempty"`
}

// Validate validates this network lists delete single network lists internal server error body
func (o *NetworkListsDeleteSingleNetworkListsInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateError(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *NetworkListsDeleteSingleNetworkListsInternalServerErrorBody) validateError(formats strfmt.Registry) error {
	if swag.IsZero(o.Error) { // not required
		return nil
	}

	if o.Error != nil {
		if err := o.Error.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("networkListsDeleteSingleNetworkListsInternalServerError" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("networkListsDeleteSingleNetworkListsInternalServerError" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this network lists delete single network lists internal server error body based on the context it is used
func (o *NetworkListsDeleteSingleNetworkListsInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateError(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *NetworkListsDeleteSingleNetworkListsInternalServerErrorBody) contextValidateError(ctx context.Context, formats strfmt.Registry) error {

	if o.Error != nil {

		if swag.IsZero(o.Error) { // not required
			return nil
		}

		if err := o.Error.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("networkListsDeleteSingleNetworkListsInternalServerError" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("networkListsDeleteSingleNetworkListsInternalServerError" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *NetworkListsDeleteSingleNetworkListsInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *NetworkListsDeleteSingleNetworkListsInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res NetworkListsDeleteSingleNetworkListsInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
NetworkListsDeleteSingleNetworkListsInternalServerErrorBodyError network lists delete single network lists internal server error body error
swagger:model NetworkListsDeleteSingleNetworkListsInternalServerErrorBodyError
*/
type NetworkListsDeleteSingleNetworkListsInternalServerErrorBodyError struct {

	// code
	// Example: INTERNAL
	Code string `json:"code,omitempty"`

	// message
	// Example: Internal Server Error
	Message string `json:"message,omitempty"`

	// status
	// Example: 500
	Status string `json:"status,omitempty"`
}

// Validate validates this network lists delete single network lists internal server error body error
func (o *NetworkListsDeleteSingleNetworkListsInternalServerErrorBodyError) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this network lists delete single network lists internal server error body error based on context it is used
func (o *NetworkListsDeleteSingleNetworkListsInternalServerErrorBodyError) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *NetworkListsDeleteSingleNetworkListsInternalServerErrorBodyError) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *NetworkListsDeleteSingleNetworkListsInternalServerErrorBodyError) UnmarshalBinary(b []byte) error {
	var res NetworkListsDeleteSingleNetworkListsInternalServerErrorBodyError
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
NetworkListsDeleteSingleNetworkListsNotFoundBody network lists delete single network lists not found body
swagger:model NetworkListsDeleteSingleNetworkListsNotFoundBody
*/
type NetworkListsDeleteSingleNetworkListsNotFoundBody struct {

	// error
	Error *NetworkListsDeleteSingleNetworkListsNotFoundBodyError `json:"error,omitempty"`
}

// Validate validates this network lists delete single network lists not found body
func (o *NetworkListsDeleteSingleNetworkListsNotFoundBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateError(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *NetworkListsDeleteSingleNetworkListsNotFoundBody) validateError(formats strfmt.Registry) error {
	if swag.IsZero(o.Error) { // not required
		return nil
	}

	if o.Error != nil {
		if err := o.Error.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("networkListsDeleteSingleNetworkListsNotFound" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("networkListsDeleteSingleNetworkListsNotFound" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this network lists delete single network lists not found body based on the context it is used
func (o *NetworkListsDeleteSingleNetworkListsNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateError(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *NetworkListsDeleteSingleNetworkListsNotFoundBody) contextValidateError(ctx context.Context, formats strfmt.Registry) error {

	if o.Error != nil {

		if swag.IsZero(o.Error) { // not required
			return nil
		}

		if err := o.Error.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("networkListsDeleteSingleNetworkListsNotFound" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("networkListsDeleteSingleNetworkListsNotFound" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *NetworkListsDeleteSingleNetworkListsNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *NetworkListsDeleteSingleNetworkListsNotFoundBody) UnmarshalBinary(b []byte) error {
	var res NetworkListsDeleteSingleNetworkListsNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
NetworkListsDeleteSingleNetworkListsNotFoundBodyError network lists delete single network lists not found body error
swagger:model NetworkListsDeleteSingleNetworkListsNotFoundBodyError
*/
type NetworkListsDeleteSingleNetworkListsNotFoundBodyError struct {

	// code
	// Example: NOT_FOUND
	Code string `json:"code,omitempty"`

	// message
	// Example: Network List does not exist
	Message string `json:"message,omitempty"`

	// status
	// Example: 404
	Status string `json:"status,omitempty"`
}

// Validate validates this network lists delete single network lists not found body error
func (o *NetworkListsDeleteSingleNetworkListsNotFoundBodyError) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this network lists delete single network lists not found body error based on context it is used
func (o *NetworkListsDeleteSingleNetworkListsNotFoundBodyError) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *NetworkListsDeleteSingleNetworkListsNotFoundBodyError) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *NetworkListsDeleteSingleNetworkListsNotFoundBodyError) UnmarshalBinary(b []byte) error {
	var res NetworkListsDeleteSingleNetworkListsNotFoundBodyError
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
