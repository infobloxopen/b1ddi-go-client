// Code generated by go-swagger; DO NOT EDIT.

package network_lists

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/infobloxopen/b1ddi-go-client/models"
)

// NetworkListsCreateNetworkListReader is a Reader for the NetworkListsCreateNetworkList structure.
type NetworkListsCreateNetworkListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *NetworkListsCreateNetworkListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewNetworkListsCreateNetworkListCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewNetworkListsCreateNetworkListBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewNetworkListsCreateNetworkListConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewNetworkListsCreateNetworkListInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /network_lists] network_listsCreateNetworkList", response, response.Code())
	}
}

// NewNetworkListsCreateNetworkListCreated creates a NetworkListsCreateNetworkListCreated with default headers values
func NewNetworkListsCreateNetworkListCreated() *NetworkListsCreateNetworkListCreated {
	return &NetworkListsCreateNetworkListCreated{}
}

/*
NetworkListsCreateNetworkListCreated describes a response with status code 201, with default header values.

POST operation response
*/
type NetworkListsCreateNetworkListCreated struct {
	Payload *models.AtcfwNetworkListCreateResponse
}

// IsSuccess returns true when this network lists create network list created response has a 2xx status code
func (o *NetworkListsCreateNetworkListCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this network lists create network list created response has a 3xx status code
func (o *NetworkListsCreateNetworkListCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this network lists create network list created response has a 4xx status code
func (o *NetworkListsCreateNetworkListCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this network lists create network list created response has a 5xx status code
func (o *NetworkListsCreateNetworkListCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this network lists create network list created response a status code equal to that given
func (o *NetworkListsCreateNetworkListCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the network lists create network list created response
func (o *NetworkListsCreateNetworkListCreated) Code() int {
	return 201
}

func (o *NetworkListsCreateNetworkListCreated) Error() string {
	return fmt.Sprintf("[POST /network_lists][%d] networkListsCreateNetworkListCreated  %+v", 201, o.Payload)
}

func (o *NetworkListsCreateNetworkListCreated) String() string {
	return fmt.Sprintf("[POST /network_lists][%d] networkListsCreateNetworkListCreated  %+v", 201, o.Payload)
}

func (o *NetworkListsCreateNetworkListCreated) GetPayload() *models.AtcfwNetworkListCreateResponse {
	return o.Payload
}

func (o *NetworkListsCreateNetworkListCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AtcfwNetworkListCreateResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNetworkListsCreateNetworkListBadRequest creates a NetworkListsCreateNetworkListBadRequest with default headers values
func NewNetworkListsCreateNetworkListBadRequest() *NetworkListsCreateNetworkListBadRequest {
	return &NetworkListsCreateNetworkListBadRequest{}
}

/*
	NetworkListsCreateNetworkListBadRequest describes a response with status code 400, with default header values.

- 'name' length cannot exceed 256 characters limit
- 'name' value cannot be equal to 'All BloxOne Endpoints (Default)', 'All Networks (Default)', 'All DNS Forwarder Proxies (Default)'
- 'description' length cannot exceed 256 characters limit
- 'items' value must not be empty
- 'items' value must contain valid CIDRs from range [24, 32]
- CIDRs in 'items' cannot overlap with each other and with existing items for all accounts
*/
type NetworkListsCreateNetworkListBadRequest struct {
	Payload *NetworkListsCreateNetworkListBadRequestBody
}

// IsSuccess returns true when this network lists create network list bad request response has a 2xx status code
func (o *NetworkListsCreateNetworkListBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this network lists create network list bad request response has a 3xx status code
func (o *NetworkListsCreateNetworkListBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this network lists create network list bad request response has a 4xx status code
func (o *NetworkListsCreateNetworkListBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this network lists create network list bad request response has a 5xx status code
func (o *NetworkListsCreateNetworkListBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this network lists create network list bad request response a status code equal to that given
func (o *NetworkListsCreateNetworkListBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the network lists create network list bad request response
func (o *NetworkListsCreateNetworkListBadRequest) Code() int {
	return 400
}

func (o *NetworkListsCreateNetworkListBadRequest) Error() string {
	return fmt.Sprintf("[POST /network_lists][%d] networkListsCreateNetworkListBadRequest  %+v", 400, o.Payload)
}

func (o *NetworkListsCreateNetworkListBadRequest) String() string {
	return fmt.Sprintf("[POST /network_lists][%d] networkListsCreateNetworkListBadRequest  %+v", 400, o.Payload)
}

func (o *NetworkListsCreateNetworkListBadRequest) GetPayload() *NetworkListsCreateNetworkListBadRequestBody {
	return o.Payload
}

func (o *NetworkListsCreateNetworkListBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(NetworkListsCreateNetworkListBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNetworkListsCreateNetworkListConflict creates a NetworkListsCreateNetworkListConflict with default headers values
func NewNetworkListsCreateNetworkListConflict() *NetworkListsCreateNetworkListConflict {
	return &NetworkListsCreateNetworkListConflict{}
}

/*
	NetworkListsCreateNetworkListConflict describes a response with status code 409, with default header values.

- 'name' value must be unique among network lists belonging to the same account
*/
type NetworkListsCreateNetworkListConflict struct {
	Payload *NetworkListsCreateNetworkListConflictBody
}

// IsSuccess returns true when this network lists create network list conflict response has a 2xx status code
func (o *NetworkListsCreateNetworkListConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this network lists create network list conflict response has a 3xx status code
func (o *NetworkListsCreateNetworkListConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this network lists create network list conflict response has a 4xx status code
func (o *NetworkListsCreateNetworkListConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this network lists create network list conflict response has a 5xx status code
func (o *NetworkListsCreateNetworkListConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this network lists create network list conflict response a status code equal to that given
func (o *NetworkListsCreateNetworkListConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the network lists create network list conflict response
func (o *NetworkListsCreateNetworkListConflict) Code() int {
	return 409
}

func (o *NetworkListsCreateNetworkListConflict) Error() string {
	return fmt.Sprintf("[POST /network_lists][%d] networkListsCreateNetworkListConflict  %+v", 409, o.Payload)
}

func (o *NetworkListsCreateNetworkListConflict) String() string {
	return fmt.Sprintf("[POST /network_lists][%d] networkListsCreateNetworkListConflict  %+v", 409, o.Payload)
}

func (o *NetworkListsCreateNetworkListConflict) GetPayload() *NetworkListsCreateNetworkListConflictBody {
	return o.Payload
}

func (o *NetworkListsCreateNetworkListConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(NetworkListsCreateNetworkListConflictBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNetworkListsCreateNetworkListInternalServerError creates a NetworkListsCreateNetworkListInternalServerError with default headers values
func NewNetworkListsCreateNetworkListInternalServerError() *NetworkListsCreateNetworkListInternalServerError {
	return &NetworkListsCreateNetworkListInternalServerError{}
}

/*
	NetworkListsCreateNetworkListInternalServerError describes a response with status code 500, with default header values.

- Internal server error occurred
*/
type NetworkListsCreateNetworkListInternalServerError struct {
	Payload *NetworkListsCreateNetworkListInternalServerErrorBody
}

// IsSuccess returns true when this network lists create network list internal server error response has a 2xx status code
func (o *NetworkListsCreateNetworkListInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this network lists create network list internal server error response has a 3xx status code
func (o *NetworkListsCreateNetworkListInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this network lists create network list internal server error response has a 4xx status code
func (o *NetworkListsCreateNetworkListInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this network lists create network list internal server error response has a 5xx status code
func (o *NetworkListsCreateNetworkListInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this network lists create network list internal server error response a status code equal to that given
func (o *NetworkListsCreateNetworkListInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the network lists create network list internal server error response
func (o *NetworkListsCreateNetworkListInternalServerError) Code() int {
	return 500
}

func (o *NetworkListsCreateNetworkListInternalServerError) Error() string {
	return fmt.Sprintf("[POST /network_lists][%d] networkListsCreateNetworkListInternalServerError  %+v", 500, o.Payload)
}

func (o *NetworkListsCreateNetworkListInternalServerError) String() string {
	return fmt.Sprintf("[POST /network_lists][%d] networkListsCreateNetworkListInternalServerError  %+v", 500, o.Payload)
}

func (o *NetworkListsCreateNetworkListInternalServerError) GetPayload() *NetworkListsCreateNetworkListInternalServerErrorBody {
	return o.Payload
}

func (o *NetworkListsCreateNetworkListInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(NetworkListsCreateNetworkListInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
NetworkListsCreateNetworkListBadRequestBody network lists create network list bad request body
swagger:model NetworkListsCreateNetworkListBadRequestBody
*/
type NetworkListsCreateNetworkListBadRequestBody struct {

	// error
	Error *NetworkListsCreateNetworkListBadRequestBodyError `json:"error,omitempty"`
}

// Validate validates this network lists create network list bad request body
func (o *NetworkListsCreateNetworkListBadRequestBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateError(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *NetworkListsCreateNetworkListBadRequestBody) validateError(formats strfmt.Registry) error {
	if swag.IsZero(o.Error) { // not required
		return nil
	}

	if o.Error != nil {
		if err := o.Error.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("networkListsCreateNetworkListBadRequest" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("networkListsCreateNetworkListBadRequest" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this network lists create network list bad request body based on the context it is used
func (o *NetworkListsCreateNetworkListBadRequestBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateError(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *NetworkListsCreateNetworkListBadRequestBody) contextValidateError(ctx context.Context, formats strfmt.Registry) error {

	if o.Error != nil {

		if swag.IsZero(o.Error) { // not required
			return nil
		}

		if err := o.Error.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("networkListsCreateNetworkListBadRequest" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("networkListsCreateNetworkListBadRequest" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *NetworkListsCreateNetworkListBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *NetworkListsCreateNetworkListBadRequestBody) UnmarshalBinary(b []byte) error {
	var res NetworkListsCreateNetworkListBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
NetworkListsCreateNetworkListBadRequestBodyError network lists create network list bad request body error
swagger:model NetworkListsCreateNetworkListBadRequestBodyError
*/
type NetworkListsCreateNetworkListBadRequestBodyError struct {

	// code
	// Example: INVALID_ARGUMENT
	Code string `json:"code,omitempty"`

	// message
	// Example: 'name' must not be empty
	Message string `json:"message,omitempty"`

	// status
	// Example: 400
	Status string `json:"status,omitempty"`
}

// Validate validates this network lists create network list bad request body error
func (o *NetworkListsCreateNetworkListBadRequestBodyError) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this network lists create network list bad request body error based on context it is used
func (o *NetworkListsCreateNetworkListBadRequestBodyError) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *NetworkListsCreateNetworkListBadRequestBodyError) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *NetworkListsCreateNetworkListBadRequestBodyError) UnmarshalBinary(b []byte) error {
	var res NetworkListsCreateNetworkListBadRequestBodyError
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
NetworkListsCreateNetworkListConflictBody network lists create network list conflict body
swagger:model NetworkListsCreateNetworkListConflictBody
*/
type NetworkListsCreateNetworkListConflictBody struct {

	// error
	Error *NetworkListsCreateNetworkListConflictBodyError `json:"error,omitempty"`
}

// Validate validates this network lists create network list conflict body
func (o *NetworkListsCreateNetworkListConflictBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateError(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *NetworkListsCreateNetworkListConflictBody) validateError(formats strfmt.Registry) error {
	if swag.IsZero(o.Error) { // not required
		return nil
	}

	if o.Error != nil {
		if err := o.Error.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("networkListsCreateNetworkListConflict" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("networkListsCreateNetworkListConflict" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this network lists create network list conflict body based on the context it is used
func (o *NetworkListsCreateNetworkListConflictBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateError(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *NetworkListsCreateNetworkListConflictBody) contextValidateError(ctx context.Context, formats strfmt.Registry) error {

	if o.Error != nil {

		if swag.IsZero(o.Error) { // not required
			return nil
		}

		if err := o.Error.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("networkListsCreateNetworkListConflict" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("networkListsCreateNetworkListConflict" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *NetworkListsCreateNetworkListConflictBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *NetworkListsCreateNetworkListConflictBody) UnmarshalBinary(b []byte) error {
	var res NetworkListsCreateNetworkListConflictBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
NetworkListsCreateNetworkListConflictBodyError network lists create network list conflict body error
swagger:model NetworkListsCreateNetworkListConflictBodyError
*/
type NetworkListsCreateNetworkListConflictBodyError struct {

	// code
	// Example: ALREADY_EXISTS
	Code string `json:"code,omitempty"`

	// message
	// Example: Cannot use duplicate name \"network_list_a\
	Message string `json:"message,omitempty"`

	// status
	// Example: 409
	Status string `json:"status,omitempty"`
}

// Validate validates this network lists create network list conflict body error
func (o *NetworkListsCreateNetworkListConflictBodyError) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this network lists create network list conflict body error based on context it is used
func (o *NetworkListsCreateNetworkListConflictBodyError) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *NetworkListsCreateNetworkListConflictBodyError) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *NetworkListsCreateNetworkListConflictBodyError) UnmarshalBinary(b []byte) error {
	var res NetworkListsCreateNetworkListConflictBodyError
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
NetworkListsCreateNetworkListInternalServerErrorBody network lists create network list internal server error body
swagger:model NetworkListsCreateNetworkListInternalServerErrorBody
*/
type NetworkListsCreateNetworkListInternalServerErrorBody struct {

	// error
	Error *NetworkListsCreateNetworkListInternalServerErrorBodyError `json:"error,omitempty"`
}

// Validate validates this network lists create network list internal server error body
func (o *NetworkListsCreateNetworkListInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateError(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *NetworkListsCreateNetworkListInternalServerErrorBody) validateError(formats strfmt.Registry) error {
	if swag.IsZero(o.Error) { // not required
		return nil
	}

	if o.Error != nil {
		if err := o.Error.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("networkListsCreateNetworkListInternalServerError" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("networkListsCreateNetworkListInternalServerError" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this network lists create network list internal server error body based on the context it is used
func (o *NetworkListsCreateNetworkListInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateError(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *NetworkListsCreateNetworkListInternalServerErrorBody) contextValidateError(ctx context.Context, formats strfmt.Registry) error {

	if o.Error != nil {

		if swag.IsZero(o.Error) { // not required
			return nil
		}

		if err := o.Error.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("networkListsCreateNetworkListInternalServerError" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("networkListsCreateNetworkListInternalServerError" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *NetworkListsCreateNetworkListInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *NetworkListsCreateNetworkListInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res NetworkListsCreateNetworkListInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
NetworkListsCreateNetworkListInternalServerErrorBodyError network lists create network list internal server error body error
swagger:model NetworkListsCreateNetworkListInternalServerErrorBodyError
*/
type NetworkListsCreateNetworkListInternalServerErrorBodyError struct {

	// code
	// Example: INTERNAL
	Code string `json:"code,omitempty"`

	// message
	// Example: Internal Server Error
	Message string `json:"message,omitempty"`

	// status
	// Example: 500
	Status string `json:"status,omitempty"`
}

// Validate validates this network lists create network list internal server error body error
func (o *NetworkListsCreateNetworkListInternalServerErrorBodyError) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this network lists create network list internal server error body error based on context it is used
func (o *NetworkListsCreateNetworkListInternalServerErrorBodyError) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *NetworkListsCreateNetworkListInternalServerErrorBodyError) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *NetworkListsCreateNetworkListInternalServerErrorBodyError) UnmarshalBinary(b []byte) error {
	var res NetworkListsCreateNetworkListInternalServerErrorBodyError
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
