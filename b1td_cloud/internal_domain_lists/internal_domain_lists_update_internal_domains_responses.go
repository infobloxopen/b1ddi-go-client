// Code generated by go-swagger; DO NOT EDIT.

package internal_domain_lists

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/infobloxopen/b1ddi-go-client/models"
)

// InternalDomainListsUpdateInternalDomainsReader is a Reader for the InternalDomainListsUpdateInternalDomains structure.
type InternalDomainListsUpdateInternalDomainsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *InternalDomainListsUpdateInternalDomainsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewInternalDomainListsUpdateInternalDomainsCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewInternalDomainListsUpdateInternalDomainsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewInternalDomainListsUpdateInternalDomainsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewInternalDomainListsUpdateInternalDomainsConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewInternalDomainListsUpdateInternalDomainsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /internal_domain_lists/{id}] internal_domain_listsUpdateInternalDomains", response, response.Code())
	}
}

// NewInternalDomainListsUpdateInternalDomainsCreated creates a InternalDomainListsUpdateInternalDomainsCreated with default headers values
func NewInternalDomainListsUpdateInternalDomainsCreated() *InternalDomainListsUpdateInternalDomainsCreated {
	return &InternalDomainListsUpdateInternalDomainsCreated{}
}

/*
InternalDomainListsUpdateInternalDomainsCreated describes a response with status code 201, with default header values.

PUT operation response
*/
type InternalDomainListsUpdateInternalDomainsCreated struct {
	Payload *models.AtcfwInternalDomainsUpdateResponse
}

// IsSuccess returns true when this internal domain lists update internal domains created response has a 2xx status code
func (o *InternalDomainListsUpdateInternalDomainsCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this internal domain lists update internal domains created response has a 3xx status code
func (o *InternalDomainListsUpdateInternalDomainsCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this internal domain lists update internal domains created response has a 4xx status code
func (o *InternalDomainListsUpdateInternalDomainsCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this internal domain lists update internal domains created response has a 5xx status code
func (o *InternalDomainListsUpdateInternalDomainsCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this internal domain lists update internal domains created response a status code equal to that given
func (o *InternalDomainListsUpdateInternalDomainsCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the internal domain lists update internal domains created response
func (o *InternalDomainListsUpdateInternalDomainsCreated) Code() int {
	return 201
}

func (o *InternalDomainListsUpdateInternalDomainsCreated) Error() string {
	return fmt.Sprintf("[PUT /internal_domain_lists/{id}][%d] internalDomainListsUpdateInternalDomainsCreated  %+v", 201, o.Payload)
}

func (o *InternalDomainListsUpdateInternalDomainsCreated) String() string {
	return fmt.Sprintf("[PUT /internal_domain_lists/{id}][%d] internalDomainListsUpdateInternalDomainsCreated  %+v", 201, o.Payload)
}

func (o *InternalDomainListsUpdateInternalDomainsCreated) GetPayload() *models.AtcfwInternalDomainsUpdateResponse {
	return o.Payload
}

func (o *InternalDomainListsUpdateInternalDomainsCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AtcfwInternalDomainsUpdateResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInternalDomainListsUpdateInternalDomainsBadRequest creates a InternalDomainListsUpdateInternalDomainsBadRequest with default headers values
func NewInternalDomainListsUpdateInternalDomainsBadRequest() *InternalDomainListsUpdateInternalDomainsBadRequest {
	return &InternalDomainListsUpdateInternalDomainsBadRequest{}
}

/*
	InternalDomainListsUpdateInternalDomainsBadRequest describes a response with status code 400, with default header values.

- 'name' length cannot exceed 256 characters limit
- 'description' length cannot exceed 256 characters limit
- 'internal_domains' must contain existing internal domain Lists
- 'internal_domains' values is not a domain, cidr, or ip
*/
type InternalDomainListsUpdateInternalDomainsBadRequest struct {
	Payload *InternalDomainListsUpdateInternalDomainsBadRequestBody
}

// IsSuccess returns true when this internal domain lists update internal domains bad request response has a 2xx status code
func (o *InternalDomainListsUpdateInternalDomainsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this internal domain lists update internal domains bad request response has a 3xx status code
func (o *InternalDomainListsUpdateInternalDomainsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this internal domain lists update internal domains bad request response has a 4xx status code
func (o *InternalDomainListsUpdateInternalDomainsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this internal domain lists update internal domains bad request response has a 5xx status code
func (o *InternalDomainListsUpdateInternalDomainsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this internal domain lists update internal domains bad request response a status code equal to that given
func (o *InternalDomainListsUpdateInternalDomainsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the internal domain lists update internal domains bad request response
func (o *InternalDomainListsUpdateInternalDomainsBadRequest) Code() int {
	return 400
}

func (o *InternalDomainListsUpdateInternalDomainsBadRequest) Error() string {
	return fmt.Sprintf("[PUT /internal_domain_lists/{id}][%d] internalDomainListsUpdateInternalDomainsBadRequest  %+v", 400, o.Payload)
}

func (o *InternalDomainListsUpdateInternalDomainsBadRequest) String() string {
	return fmt.Sprintf("[PUT /internal_domain_lists/{id}][%d] internalDomainListsUpdateInternalDomainsBadRequest  %+v", 400, o.Payload)
}

func (o *InternalDomainListsUpdateInternalDomainsBadRequest) GetPayload() *InternalDomainListsUpdateInternalDomainsBadRequestBody {
	return o.Payload
}

func (o *InternalDomainListsUpdateInternalDomainsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(InternalDomainListsUpdateInternalDomainsBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInternalDomainListsUpdateInternalDomainsNotFound creates a InternalDomainListsUpdateInternalDomainsNotFound with default headers values
func NewInternalDomainListsUpdateInternalDomainsNotFound() *InternalDomainListsUpdateInternalDomainsNotFound {
	return &InternalDomainListsUpdateInternalDomainsNotFound{}
}

/*
	InternalDomainListsUpdateInternalDomainsNotFound describes a response with status code 404, with default header values.

- 'id' value must contain existing internal domains list identifier
*/
type InternalDomainListsUpdateInternalDomainsNotFound struct {
	Payload *InternalDomainListsUpdateInternalDomainsNotFoundBody
}

// IsSuccess returns true when this internal domain lists update internal domains not found response has a 2xx status code
func (o *InternalDomainListsUpdateInternalDomainsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this internal domain lists update internal domains not found response has a 3xx status code
func (o *InternalDomainListsUpdateInternalDomainsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this internal domain lists update internal domains not found response has a 4xx status code
func (o *InternalDomainListsUpdateInternalDomainsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this internal domain lists update internal domains not found response has a 5xx status code
func (o *InternalDomainListsUpdateInternalDomainsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this internal domain lists update internal domains not found response a status code equal to that given
func (o *InternalDomainListsUpdateInternalDomainsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the internal domain lists update internal domains not found response
func (o *InternalDomainListsUpdateInternalDomainsNotFound) Code() int {
	return 404
}

func (o *InternalDomainListsUpdateInternalDomainsNotFound) Error() string {
	return fmt.Sprintf("[PUT /internal_domain_lists/{id}][%d] internalDomainListsUpdateInternalDomainsNotFound  %+v", 404, o.Payload)
}

func (o *InternalDomainListsUpdateInternalDomainsNotFound) String() string {
	return fmt.Sprintf("[PUT /internal_domain_lists/{id}][%d] internalDomainListsUpdateInternalDomainsNotFound  %+v", 404, o.Payload)
}

func (o *InternalDomainListsUpdateInternalDomainsNotFound) GetPayload() *InternalDomainListsUpdateInternalDomainsNotFoundBody {
	return o.Payload
}

func (o *InternalDomainListsUpdateInternalDomainsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(InternalDomainListsUpdateInternalDomainsNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInternalDomainListsUpdateInternalDomainsConflict creates a InternalDomainListsUpdateInternalDomainsConflict with default headers values
func NewInternalDomainListsUpdateInternalDomainsConflict() *InternalDomainListsUpdateInternalDomainsConflict {
	return &InternalDomainListsUpdateInternalDomainsConflict{}
}

/*
	InternalDomainListsUpdateInternalDomainsConflict describes a response with status code 409, with default header values.

- 'name' value must be unique among internal domains belonging to the same account
*/
type InternalDomainListsUpdateInternalDomainsConflict struct {
	Payload *InternalDomainListsUpdateInternalDomainsConflictBody
}

// IsSuccess returns true when this internal domain lists update internal domains conflict response has a 2xx status code
func (o *InternalDomainListsUpdateInternalDomainsConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this internal domain lists update internal domains conflict response has a 3xx status code
func (o *InternalDomainListsUpdateInternalDomainsConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this internal domain lists update internal domains conflict response has a 4xx status code
func (o *InternalDomainListsUpdateInternalDomainsConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this internal domain lists update internal domains conflict response has a 5xx status code
func (o *InternalDomainListsUpdateInternalDomainsConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this internal domain lists update internal domains conflict response a status code equal to that given
func (o *InternalDomainListsUpdateInternalDomainsConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the internal domain lists update internal domains conflict response
func (o *InternalDomainListsUpdateInternalDomainsConflict) Code() int {
	return 409
}

func (o *InternalDomainListsUpdateInternalDomainsConflict) Error() string {
	return fmt.Sprintf("[PUT /internal_domain_lists/{id}][%d] internalDomainListsUpdateInternalDomainsConflict  %+v", 409, o.Payload)
}

func (o *InternalDomainListsUpdateInternalDomainsConflict) String() string {
	return fmt.Sprintf("[PUT /internal_domain_lists/{id}][%d] internalDomainListsUpdateInternalDomainsConflict  %+v", 409, o.Payload)
}

func (o *InternalDomainListsUpdateInternalDomainsConflict) GetPayload() *InternalDomainListsUpdateInternalDomainsConflictBody {
	return o.Payload
}

func (o *InternalDomainListsUpdateInternalDomainsConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(InternalDomainListsUpdateInternalDomainsConflictBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInternalDomainListsUpdateInternalDomainsInternalServerError creates a InternalDomainListsUpdateInternalDomainsInternalServerError with default headers values
func NewInternalDomainListsUpdateInternalDomainsInternalServerError() *InternalDomainListsUpdateInternalDomainsInternalServerError {
	return &InternalDomainListsUpdateInternalDomainsInternalServerError{}
}

/*
	InternalDomainListsUpdateInternalDomainsInternalServerError describes a response with status code 500, with default header values.

- Internal server error occurred
*/
type InternalDomainListsUpdateInternalDomainsInternalServerError struct {
	Payload *InternalDomainListsUpdateInternalDomainsInternalServerErrorBody
}

// IsSuccess returns true when this internal domain lists update internal domains internal server error response has a 2xx status code
func (o *InternalDomainListsUpdateInternalDomainsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this internal domain lists update internal domains internal server error response has a 3xx status code
func (o *InternalDomainListsUpdateInternalDomainsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this internal domain lists update internal domains internal server error response has a 4xx status code
func (o *InternalDomainListsUpdateInternalDomainsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this internal domain lists update internal domains internal server error response has a 5xx status code
func (o *InternalDomainListsUpdateInternalDomainsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this internal domain lists update internal domains internal server error response a status code equal to that given
func (o *InternalDomainListsUpdateInternalDomainsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the internal domain lists update internal domains internal server error response
func (o *InternalDomainListsUpdateInternalDomainsInternalServerError) Code() int {
	return 500
}

func (o *InternalDomainListsUpdateInternalDomainsInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /internal_domain_lists/{id}][%d] internalDomainListsUpdateInternalDomainsInternalServerError  %+v", 500, o.Payload)
}

func (o *InternalDomainListsUpdateInternalDomainsInternalServerError) String() string {
	return fmt.Sprintf("[PUT /internal_domain_lists/{id}][%d] internalDomainListsUpdateInternalDomainsInternalServerError  %+v", 500, o.Payload)
}

func (o *InternalDomainListsUpdateInternalDomainsInternalServerError) GetPayload() *InternalDomainListsUpdateInternalDomainsInternalServerErrorBody {
	return o.Payload
}

func (o *InternalDomainListsUpdateInternalDomainsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(InternalDomainListsUpdateInternalDomainsInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
InternalDomainListsUpdateInternalDomainsBadRequestBody internal domain lists update internal domains bad request body
swagger:model InternalDomainListsUpdateInternalDomainsBadRequestBody
*/
type InternalDomainListsUpdateInternalDomainsBadRequestBody struct {

	// error
	Error *InternalDomainListsUpdateInternalDomainsBadRequestBodyError `json:"error,omitempty"`
}

// Validate validates this internal domain lists update internal domains bad request body
func (o *InternalDomainListsUpdateInternalDomainsBadRequestBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateError(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *InternalDomainListsUpdateInternalDomainsBadRequestBody) validateError(formats strfmt.Registry) error {
	if swag.IsZero(o.Error) { // not required
		return nil
	}

	if o.Error != nil {
		if err := o.Error.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("internalDomainListsUpdateInternalDomainsBadRequest" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("internalDomainListsUpdateInternalDomainsBadRequest" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this internal domain lists update internal domains bad request body based on the context it is used
func (o *InternalDomainListsUpdateInternalDomainsBadRequestBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateError(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *InternalDomainListsUpdateInternalDomainsBadRequestBody) contextValidateError(ctx context.Context, formats strfmt.Registry) error {

	if o.Error != nil {

		if swag.IsZero(o.Error) { // not required
			return nil
		}

		if err := o.Error.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("internalDomainListsUpdateInternalDomainsBadRequest" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("internalDomainListsUpdateInternalDomainsBadRequest" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *InternalDomainListsUpdateInternalDomainsBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *InternalDomainListsUpdateInternalDomainsBadRequestBody) UnmarshalBinary(b []byte) error {
	var res InternalDomainListsUpdateInternalDomainsBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
InternalDomainListsUpdateInternalDomainsBadRequestBodyError internal domain lists update internal domains bad request body error
swagger:model InternalDomainListsUpdateInternalDomainsBadRequestBodyError
*/
type InternalDomainListsUpdateInternalDomainsBadRequestBodyError struct {

	// code
	// Example: INVALID_ARGUMENT
	Code string `json:"code,omitempty"`

	// message
	// Example: name' must not be empty
	Message string `json:"message,omitempty"`

	// status
	// Example: 400
	Status string `json:"status,omitempty"`
}

// Validate validates this internal domain lists update internal domains bad request body error
func (o *InternalDomainListsUpdateInternalDomainsBadRequestBodyError) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this internal domain lists update internal domains bad request body error based on context it is used
func (o *InternalDomainListsUpdateInternalDomainsBadRequestBodyError) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *InternalDomainListsUpdateInternalDomainsBadRequestBodyError) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *InternalDomainListsUpdateInternalDomainsBadRequestBodyError) UnmarshalBinary(b []byte) error {
	var res InternalDomainListsUpdateInternalDomainsBadRequestBodyError
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
InternalDomainListsUpdateInternalDomainsConflictBody internal domain lists update internal domains conflict body
swagger:model InternalDomainListsUpdateInternalDomainsConflictBody
*/
type InternalDomainListsUpdateInternalDomainsConflictBody struct {

	// error
	Error *InternalDomainListsUpdateInternalDomainsConflictBodyError `json:"error,omitempty"`
}

// Validate validates this internal domain lists update internal domains conflict body
func (o *InternalDomainListsUpdateInternalDomainsConflictBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateError(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *InternalDomainListsUpdateInternalDomainsConflictBody) validateError(formats strfmt.Registry) error {
	if swag.IsZero(o.Error) { // not required
		return nil
	}

	if o.Error != nil {
		if err := o.Error.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("internalDomainListsUpdateInternalDomainsConflict" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("internalDomainListsUpdateInternalDomainsConflict" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this internal domain lists update internal domains conflict body based on the context it is used
func (o *InternalDomainListsUpdateInternalDomainsConflictBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateError(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *InternalDomainListsUpdateInternalDomainsConflictBody) contextValidateError(ctx context.Context, formats strfmt.Registry) error {

	if o.Error != nil {

		if swag.IsZero(o.Error) { // not required
			return nil
		}

		if err := o.Error.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("internalDomainListsUpdateInternalDomainsConflict" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("internalDomainListsUpdateInternalDomainsConflict" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *InternalDomainListsUpdateInternalDomainsConflictBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *InternalDomainListsUpdateInternalDomainsConflictBody) UnmarshalBinary(b []byte) error {
	var res InternalDomainListsUpdateInternalDomainsConflictBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
InternalDomainListsUpdateInternalDomainsConflictBodyError internal domain lists update internal domains conflict body error
swagger:model InternalDomainListsUpdateInternalDomainsConflictBodyError
*/
type InternalDomainListsUpdateInternalDomainsConflictBodyError struct {

	// code
	// Example: ALREADY_EXISTS
	Code string `json:"code,omitempty"`

	// message
	// Example: Cannot use duplicate name \u003cname\u003e
	Message string `json:"message,omitempty"`

	// status
	// Example: 409
	Status string `json:"status,omitempty"`
}

// Validate validates this internal domain lists update internal domains conflict body error
func (o *InternalDomainListsUpdateInternalDomainsConflictBodyError) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this internal domain lists update internal domains conflict body error based on context it is used
func (o *InternalDomainListsUpdateInternalDomainsConflictBodyError) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *InternalDomainListsUpdateInternalDomainsConflictBodyError) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *InternalDomainListsUpdateInternalDomainsConflictBodyError) UnmarshalBinary(b []byte) error {
	var res InternalDomainListsUpdateInternalDomainsConflictBodyError
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
InternalDomainListsUpdateInternalDomainsInternalServerErrorBody internal domain lists update internal domains internal server error body
swagger:model InternalDomainListsUpdateInternalDomainsInternalServerErrorBody
*/
type InternalDomainListsUpdateInternalDomainsInternalServerErrorBody struct {

	// error
	Error *InternalDomainListsUpdateInternalDomainsInternalServerErrorBodyError `json:"error,omitempty"`
}

// Validate validates this internal domain lists update internal domains internal server error body
func (o *InternalDomainListsUpdateInternalDomainsInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateError(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *InternalDomainListsUpdateInternalDomainsInternalServerErrorBody) validateError(formats strfmt.Registry) error {
	if swag.IsZero(o.Error) { // not required
		return nil
	}

	if o.Error != nil {
		if err := o.Error.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("internalDomainListsUpdateInternalDomainsInternalServerError" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("internalDomainListsUpdateInternalDomainsInternalServerError" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this internal domain lists update internal domains internal server error body based on the context it is used
func (o *InternalDomainListsUpdateInternalDomainsInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateError(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *InternalDomainListsUpdateInternalDomainsInternalServerErrorBody) contextValidateError(ctx context.Context, formats strfmt.Registry) error {

	if o.Error != nil {

		if swag.IsZero(o.Error) { // not required
			return nil
		}

		if err := o.Error.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("internalDomainListsUpdateInternalDomainsInternalServerError" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("internalDomainListsUpdateInternalDomainsInternalServerError" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *InternalDomainListsUpdateInternalDomainsInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *InternalDomainListsUpdateInternalDomainsInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res InternalDomainListsUpdateInternalDomainsInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
InternalDomainListsUpdateInternalDomainsInternalServerErrorBodyError internal domain lists update internal domains internal server error body error
swagger:model InternalDomainListsUpdateInternalDomainsInternalServerErrorBodyError
*/
type InternalDomainListsUpdateInternalDomainsInternalServerErrorBodyError struct {

	// code
	// Example: INTERNAL
	Code string `json:"code,omitempty"`

	// message
	// Example: Internal Server Error
	Message string `json:"message,omitempty"`

	// status
	// Example: 500
	Status string `json:"status,omitempty"`
}

// Validate validates this internal domain lists update internal domains internal server error body error
func (o *InternalDomainListsUpdateInternalDomainsInternalServerErrorBodyError) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this internal domain lists update internal domains internal server error body error based on context it is used
func (o *InternalDomainListsUpdateInternalDomainsInternalServerErrorBodyError) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *InternalDomainListsUpdateInternalDomainsInternalServerErrorBodyError) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *InternalDomainListsUpdateInternalDomainsInternalServerErrorBodyError) UnmarshalBinary(b []byte) error {
	var res InternalDomainListsUpdateInternalDomainsInternalServerErrorBodyError
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
InternalDomainListsUpdateInternalDomainsNotFoundBody internal domain lists update internal domains not found body
swagger:model InternalDomainListsUpdateInternalDomainsNotFoundBody
*/
type InternalDomainListsUpdateInternalDomainsNotFoundBody struct {

	// error
	Error *InternalDomainListsUpdateInternalDomainsNotFoundBodyError `json:"error,omitempty"`
}

// Validate validates this internal domain lists update internal domains not found body
func (o *InternalDomainListsUpdateInternalDomainsNotFoundBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateError(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *InternalDomainListsUpdateInternalDomainsNotFoundBody) validateError(formats strfmt.Registry) error {
	if swag.IsZero(o.Error) { // not required
		return nil
	}

	if o.Error != nil {
		if err := o.Error.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("internalDomainListsUpdateInternalDomainsNotFound" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("internalDomainListsUpdateInternalDomainsNotFound" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this internal domain lists update internal domains not found body based on the context it is used
func (o *InternalDomainListsUpdateInternalDomainsNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateError(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *InternalDomainListsUpdateInternalDomainsNotFoundBody) contextValidateError(ctx context.Context, formats strfmt.Registry) error {

	if o.Error != nil {

		if swag.IsZero(o.Error) { // not required
			return nil
		}

		if err := o.Error.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("internalDomainListsUpdateInternalDomainsNotFound" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("internalDomainListsUpdateInternalDomainsNotFound" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *InternalDomainListsUpdateInternalDomainsNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *InternalDomainListsUpdateInternalDomainsNotFoundBody) UnmarshalBinary(b []byte) error {
	var res InternalDomainListsUpdateInternalDomainsNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
InternalDomainListsUpdateInternalDomainsNotFoundBodyError internal domain lists update internal domains not found body error
swagger:model InternalDomainListsUpdateInternalDomainsNotFoundBodyError
*/
type InternalDomainListsUpdateInternalDomainsNotFoundBodyError struct {

	// code
	// Example: NOT_FOUND
	Code string `json:"code,omitempty"`

	// message
	// Example: Given Internal Domain List does not exist
	Message string `json:"message,omitempty"`

	// status
	// Example: 404
	Status string `json:"status,omitempty"`
}

// Validate validates this internal domain lists update internal domains not found body error
func (o *InternalDomainListsUpdateInternalDomainsNotFoundBodyError) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this internal domain lists update internal domains not found body error based on context it is used
func (o *InternalDomainListsUpdateInternalDomainsNotFoundBodyError) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *InternalDomainListsUpdateInternalDomainsNotFoundBodyError) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *InternalDomainListsUpdateInternalDomainsNotFoundBodyError) UnmarshalBinary(b []byte) error {
	var res InternalDomainListsUpdateInternalDomainsNotFoundBodyError
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
