// Code generated by go-swagger; DO NOT EDIT.

package internal_domain_lists

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// InternalDomainListsDeleteSingleInternalDomainsReader is a Reader for the InternalDomainListsDeleteSingleInternalDomains structure.
type InternalDomainListsDeleteSingleInternalDomainsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *InternalDomainListsDeleteSingleInternalDomainsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewInternalDomainListsDeleteSingleInternalDomainsNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewInternalDomainListsDeleteSingleInternalDomainsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewInternalDomainListsDeleteSingleInternalDomainsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewInternalDomainListsDeleteSingleInternalDomainsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /internal_domain_lists/{id}] internal_domain_listsDeleteSingleInternalDomains", response, response.Code())
	}
}

// NewInternalDomainListsDeleteSingleInternalDomainsNoContent creates a InternalDomainListsDeleteSingleInternalDomainsNoContent with default headers values
func NewInternalDomainListsDeleteSingleInternalDomainsNoContent() *InternalDomainListsDeleteSingleInternalDomainsNoContent {
	return &InternalDomainListsDeleteSingleInternalDomainsNoContent{}
}

/*
InternalDomainListsDeleteSingleInternalDomainsNoContent describes a response with status code 204, with default header values.

No Content
*/
type InternalDomainListsDeleteSingleInternalDomainsNoContent struct {
}

// IsSuccess returns true when this internal domain lists delete single internal domains no content response has a 2xx status code
func (o *InternalDomainListsDeleteSingleInternalDomainsNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this internal domain lists delete single internal domains no content response has a 3xx status code
func (o *InternalDomainListsDeleteSingleInternalDomainsNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this internal domain lists delete single internal domains no content response has a 4xx status code
func (o *InternalDomainListsDeleteSingleInternalDomainsNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this internal domain lists delete single internal domains no content response has a 5xx status code
func (o *InternalDomainListsDeleteSingleInternalDomainsNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this internal domain lists delete single internal domains no content response a status code equal to that given
func (o *InternalDomainListsDeleteSingleInternalDomainsNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the internal domain lists delete single internal domains no content response
func (o *InternalDomainListsDeleteSingleInternalDomainsNoContent) Code() int {
	return 204
}

func (o *InternalDomainListsDeleteSingleInternalDomainsNoContent) Error() string {
	return fmt.Sprintf("[DELETE /internal_domain_lists/{id}][%d] internalDomainListsDeleteSingleInternalDomainsNoContent ", 204)
}

func (o *InternalDomainListsDeleteSingleInternalDomainsNoContent) String() string {
	return fmt.Sprintf("[DELETE /internal_domain_lists/{id}][%d] internalDomainListsDeleteSingleInternalDomainsNoContent ", 204)
}

func (o *InternalDomainListsDeleteSingleInternalDomainsNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewInternalDomainListsDeleteSingleInternalDomainsBadRequest creates a InternalDomainListsDeleteSingleInternalDomainsBadRequest with default headers values
func NewInternalDomainListsDeleteSingleInternalDomainsBadRequest() *InternalDomainListsDeleteSingleInternalDomainsBadRequest {
	return &InternalDomainListsDeleteSingleInternalDomainsBadRequest{}
}

/*
	InternalDomainListsDeleteSingleInternalDomainsBadRequest describes a response with status code 400, with default header values.

- 'id' value must contain values that are greater than or equal to zero
- internal domain list assigned to a endpoint group cannot be deleted
*/
type InternalDomainListsDeleteSingleInternalDomainsBadRequest struct {
	Payload *InternalDomainListsDeleteSingleInternalDomainsBadRequestBody
}

// IsSuccess returns true when this internal domain lists delete single internal domains bad request response has a 2xx status code
func (o *InternalDomainListsDeleteSingleInternalDomainsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this internal domain lists delete single internal domains bad request response has a 3xx status code
func (o *InternalDomainListsDeleteSingleInternalDomainsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this internal domain lists delete single internal domains bad request response has a 4xx status code
func (o *InternalDomainListsDeleteSingleInternalDomainsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this internal domain lists delete single internal domains bad request response has a 5xx status code
func (o *InternalDomainListsDeleteSingleInternalDomainsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this internal domain lists delete single internal domains bad request response a status code equal to that given
func (o *InternalDomainListsDeleteSingleInternalDomainsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the internal domain lists delete single internal domains bad request response
func (o *InternalDomainListsDeleteSingleInternalDomainsBadRequest) Code() int {
	return 400
}

func (o *InternalDomainListsDeleteSingleInternalDomainsBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /internal_domain_lists/{id}][%d] internalDomainListsDeleteSingleInternalDomainsBadRequest  %+v", 400, o.Payload)
}

func (o *InternalDomainListsDeleteSingleInternalDomainsBadRequest) String() string {
	return fmt.Sprintf("[DELETE /internal_domain_lists/{id}][%d] internalDomainListsDeleteSingleInternalDomainsBadRequest  %+v", 400, o.Payload)
}

func (o *InternalDomainListsDeleteSingleInternalDomainsBadRequest) GetPayload() *InternalDomainListsDeleteSingleInternalDomainsBadRequestBody {
	return o.Payload
}

func (o *InternalDomainListsDeleteSingleInternalDomainsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(InternalDomainListsDeleteSingleInternalDomainsBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInternalDomainListsDeleteSingleInternalDomainsNotFound creates a InternalDomainListsDeleteSingleInternalDomainsNotFound with default headers values
func NewInternalDomainListsDeleteSingleInternalDomainsNotFound() *InternalDomainListsDeleteSingleInternalDomainsNotFound {
	return &InternalDomainListsDeleteSingleInternalDomainsNotFound{}
}

/*
	InternalDomainListsDeleteSingleInternalDomainsNotFound describes a response with status code 404, with default header values.

- 'id' value must contain existing internal domains identifiers
*/
type InternalDomainListsDeleteSingleInternalDomainsNotFound struct {
	Payload *InternalDomainListsDeleteSingleInternalDomainsNotFoundBody
}

// IsSuccess returns true when this internal domain lists delete single internal domains not found response has a 2xx status code
func (o *InternalDomainListsDeleteSingleInternalDomainsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this internal domain lists delete single internal domains not found response has a 3xx status code
func (o *InternalDomainListsDeleteSingleInternalDomainsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this internal domain lists delete single internal domains not found response has a 4xx status code
func (o *InternalDomainListsDeleteSingleInternalDomainsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this internal domain lists delete single internal domains not found response has a 5xx status code
func (o *InternalDomainListsDeleteSingleInternalDomainsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this internal domain lists delete single internal domains not found response a status code equal to that given
func (o *InternalDomainListsDeleteSingleInternalDomainsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the internal domain lists delete single internal domains not found response
func (o *InternalDomainListsDeleteSingleInternalDomainsNotFound) Code() int {
	return 404
}

func (o *InternalDomainListsDeleteSingleInternalDomainsNotFound) Error() string {
	return fmt.Sprintf("[DELETE /internal_domain_lists/{id}][%d] internalDomainListsDeleteSingleInternalDomainsNotFound  %+v", 404, o.Payload)
}

func (o *InternalDomainListsDeleteSingleInternalDomainsNotFound) String() string {
	return fmt.Sprintf("[DELETE /internal_domain_lists/{id}][%d] internalDomainListsDeleteSingleInternalDomainsNotFound  %+v", 404, o.Payload)
}

func (o *InternalDomainListsDeleteSingleInternalDomainsNotFound) GetPayload() *InternalDomainListsDeleteSingleInternalDomainsNotFoundBody {
	return o.Payload
}

func (o *InternalDomainListsDeleteSingleInternalDomainsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(InternalDomainListsDeleteSingleInternalDomainsNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInternalDomainListsDeleteSingleInternalDomainsInternalServerError creates a InternalDomainListsDeleteSingleInternalDomainsInternalServerError with default headers values
func NewInternalDomainListsDeleteSingleInternalDomainsInternalServerError() *InternalDomainListsDeleteSingleInternalDomainsInternalServerError {
	return &InternalDomainListsDeleteSingleInternalDomainsInternalServerError{}
}

/*
	InternalDomainListsDeleteSingleInternalDomainsInternalServerError describes a response with status code 500, with default header values.

- Internal server error occurred
*/
type InternalDomainListsDeleteSingleInternalDomainsInternalServerError struct {
	Payload *InternalDomainListsDeleteSingleInternalDomainsInternalServerErrorBody
}

// IsSuccess returns true when this internal domain lists delete single internal domains internal server error response has a 2xx status code
func (o *InternalDomainListsDeleteSingleInternalDomainsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this internal domain lists delete single internal domains internal server error response has a 3xx status code
func (o *InternalDomainListsDeleteSingleInternalDomainsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this internal domain lists delete single internal domains internal server error response has a 4xx status code
func (o *InternalDomainListsDeleteSingleInternalDomainsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this internal domain lists delete single internal domains internal server error response has a 5xx status code
func (o *InternalDomainListsDeleteSingleInternalDomainsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this internal domain lists delete single internal domains internal server error response a status code equal to that given
func (o *InternalDomainListsDeleteSingleInternalDomainsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the internal domain lists delete single internal domains internal server error response
func (o *InternalDomainListsDeleteSingleInternalDomainsInternalServerError) Code() int {
	return 500
}

func (o *InternalDomainListsDeleteSingleInternalDomainsInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /internal_domain_lists/{id}][%d] internalDomainListsDeleteSingleInternalDomainsInternalServerError  %+v", 500, o.Payload)
}

func (o *InternalDomainListsDeleteSingleInternalDomainsInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /internal_domain_lists/{id}][%d] internalDomainListsDeleteSingleInternalDomainsInternalServerError  %+v", 500, o.Payload)
}

func (o *InternalDomainListsDeleteSingleInternalDomainsInternalServerError) GetPayload() *InternalDomainListsDeleteSingleInternalDomainsInternalServerErrorBody {
	return o.Payload
}

func (o *InternalDomainListsDeleteSingleInternalDomainsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(InternalDomainListsDeleteSingleInternalDomainsInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
InternalDomainListsDeleteSingleInternalDomainsBadRequestBody internal domain lists delete single internal domains bad request body
swagger:model InternalDomainListsDeleteSingleInternalDomainsBadRequestBody
*/
type InternalDomainListsDeleteSingleInternalDomainsBadRequestBody struct {

	// error
	Error *InternalDomainListsDeleteSingleInternalDomainsBadRequestBodyError `json:"error,omitempty"`
}

// Validate validates this internal domain lists delete single internal domains bad request body
func (o *InternalDomainListsDeleteSingleInternalDomainsBadRequestBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateError(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *InternalDomainListsDeleteSingleInternalDomainsBadRequestBody) validateError(formats strfmt.Registry) error {
	if swag.IsZero(o.Error) { // not required
		return nil
	}

	if o.Error != nil {
		if err := o.Error.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("internalDomainListsDeleteSingleInternalDomainsBadRequest" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("internalDomainListsDeleteSingleInternalDomainsBadRequest" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this internal domain lists delete single internal domains bad request body based on the context it is used
func (o *InternalDomainListsDeleteSingleInternalDomainsBadRequestBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateError(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *InternalDomainListsDeleteSingleInternalDomainsBadRequestBody) contextValidateError(ctx context.Context, formats strfmt.Registry) error {

	if o.Error != nil {

		if swag.IsZero(o.Error) { // not required
			return nil
		}

		if err := o.Error.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("internalDomainListsDeleteSingleInternalDomainsBadRequest" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("internalDomainListsDeleteSingleInternalDomainsBadRequest" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *InternalDomainListsDeleteSingleInternalDomainsBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *InternalDomainListsDeleteSingleInternalDomainsBadRequestBody) UnmarshalBinary(b []byte) error {
	var res InternalDomainListsDeleteSingleInternalDomainsBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
InternalDomainListsDeleteSingleInternalDomainsBadRequestBodyError internal domain lists delete single internal domains bad request body error
swagger:model InternalDomainListsDeleteSingleInternalDomainsBadRequestBodyError
*/
type InternalDomainListsDeleteSingleInternalDomainsBadRequestBodyError struct {

	// code
	// Example: FAILED_PRECONDITION
	Code string `json:"code,omitempty"`

	// message
	// Example: invalid 'id': value must be greater than or equal to 0
	Message string `json:"message,omitempty"`

	// status
	// Example: 400
	Status string `json:"status,omitempty"`
}

// Validate validates this internal domain lists delete single internal domains bad request body error
func (o *InternalDomainListsDeleteSingleInternalDomainsBadRequestBodyError) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this internal domain lists delete single internal domains bad request body error based on context it is used
func (o *InternalDomainListsDeleteSingleInternalDomainsBadRequestBodyError) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *InternalDomainListsDeleteSingleInternalDomainsBadRequestBodyError) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *InternalDomainListsDeleteSingleInternalDomainsBadRequestBodyError) UnmarshalBinary(b []byte) error {
	var res InternalDomainListsDeleteSingleInternalDomainsBadRequestBodyError
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
InternalDomainListsDeleteSingleInternalDomainsInternalServerErrorBody internal domain lists delete single internal domains internal server error body
swagger:model InternalDomainListsDeleteSingleInternalDomainsInternalServerErrorBody
*/
type InternalDomainListsDeleteSingleInternalDomainsInternalServerErrorBody struct {

	// error
	Error *InternalDomainListsDeleteSingleInternalDomainsInternalServerErrorBodyError `json:"error,omitempty"`
}

// Validate validates this internal domain lists delete single internal domains internal server error body
func (o *InternalDomainListsDeleteSingleInternalDomainsInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateError(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *InternalDomainListsDeleteSingleInternalDomainsInternalServerErrorBody) validateError(formats strfmt.Registry) error {
	if swag.IsZero(o.Error) { // not required
		return nil
	}

	if o.Error != nil {
		if err := o.Error.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("internalDomainListsDeleteSingleInternalDomainsInternalServerError" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("internalDomainListsDeleteSingleInternalDomainsInternalServerError" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this internal domain lists delete single internal domains internal server error body based on the context it is used
func (o *InternalDomainListsDeleteSingleInternalDomainsInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateError(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *InternalDomainListsDeleteSingleInternalDomainsInternalServerErrorBody) contextValidateError(ctx context.Context, formats strfmt.Registry) error {

	if o.Error != nil {

		if swag.IsZero(o.Error) { // not required
			return nil
		}

		if err := o.Error.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("internalDomainListsDeleteSingleInternalDomainsInternalServerError" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("internalDomainListsDeleteSingleInternalDomainsInternalServerError" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *InternalDomainListsDeleteSingleInternalDomainsInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *InternalDomainListsDeleteSingleInternalDomainsInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res InternalDomainListsDeleteSingleInternalDomainsInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
InternalDomainListsDeleteSingleInternalDomainsInternalServerErrorBodyError internal domain lists delete single internal domains internal server error body error
swagger:model InternalDomainListsDeleteSingleInternalDomainsInternalServerErrorBodyError
*/
type InternalDomainListsDeleteSingleInternalDomainsInternalServerErrorBodyError struct {

	// code
	// Example: INTERNAL
	Code string `json:"code,omitempty"`

	// message
	// Example: Internal Server Error
	Message string `json:"message,omitempty"`

	// status
	// Example: 500
	Status string `json:"status,omitempty"`
}

// Validate validates this internal domain lists delete single internal domains internal server error body error
func (o *InternalDomainListsDeleteSingleInternalDomainsInternalServerErrorBodyError) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this internal domain lists delete single internal domains internal server error body error based on context it is used
func (o *InternalDomainListsDeleteSingleInternalDomainsInternalServerErrorBodyError) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *InternalDomainListsDeleteSingleInternalDomainsInternalServerErrorBodyError) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *InternalDomainListsDeleteSingleInternalDomainsInternalServerErrorBodyError) UnmarshalBinary(b []byte) error {
	var res InternalDomainListsDeleteSingleInternalDomainsInternalServerErrorBodyError
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
InternalDomainListsDeleteSingleInternalDomainsNotFoundBody internal domain lists delete single internal domains not found body
swagger:model InternalDomainListsDeleteSingleInternalDomainsNotFoundBody
*/
type InternalDomainListsDeleteSingleInternalDomainsNotFoundBody struct {

	// error
	Error *InternalDomainListsDeleteSingleInternalDomainsNotFoundBodyError `json:"error,omitempty"`
}

// Validate validates this internal domain lists delete single internal domains not found body
func (o *InternalDomainListsDeleteSingleInternalDomainsNotFoundBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateError(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *InternalDomainListsDeleteSingleInternalDomainsNotFoundBody) validateError(formats strfmt.Registry) error {
	if swag.IsZero(o.Error) { // not required
		return nil
	}

	if o.Error != nil {
		if err := o.Error.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("internalDomainListsDeleteSingleInternalDomainsNotFound" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("internalDomainListsDeleteSingleInternalDomainsNotFound" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this internal domain lists delete single internal domains not found body based on the context it is used
func (o *InternalDomainListsDeleteSingleInternalDomainsNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateError(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *InternalDomainListsDeleteSingleInternalDomainsNotFoundBody) contextValidateError(ctx context.Context, formats strfmt.Registry) error {

	if o.Error != nil {

		if swag.IsZero(o.Error) { // not required
			return nil
		}

		if err := o.Error.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("internalDomainListsDeleteSingleInternalDomainsNotFound" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("internalDomainListsDeleteSingleInternalDomainsNotFound" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *InternalDomainListsDeleteSingleInternalDomainsNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *InternalDomainListsDeleteSingleInternalDomainsNotFoundBody) UnmarshalBinary(b []byte) error {
	var res InternalDomainListsDeleteSingleInternalDomainsNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
InternalDomainListsDeleteSingleInternalDomainsNotFoundBodyError internal domain lists delete single internal domains not found body error
swagger:model InternalDomainListsDeleteSingleInternalDomainsNotFoundBodyError
*/
type InternalDomainListsDeleteSingleInternalDomainsNotFoundBodyError struct {

	// code
	// Example: NOT_FOUND
	Code string `json:"code,omitempty"`

	// message
	// Example: Internal Domain List does not exist
	Message string `json:"message,omitempty"`

	// status
	// Example: 404
	Status string `json:"status,omitempty"`
}

// Validate validates this internal domain lists delete single internal domains not found body error
func (o *InternalDomainListsDeleteSingleInternalDomainsNotFoundBodyError) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this internal domain lists delete single internal domains not found body error based on context it is used
func (o *InternalDomainListsDeleteSingleInternalDomainsNotFoundBodyError) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *InternalDomainListsDeleteSingleInternalDomainsNotFoundBodyError) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *InternalDomainListsDeleteSingleInternalDomainsNotFoundBodyError) UnmarshalBinary(b []byte) error {
	var res InternalDomainListsDeleteSingleInternalDomainsNotFoundBodyError
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
