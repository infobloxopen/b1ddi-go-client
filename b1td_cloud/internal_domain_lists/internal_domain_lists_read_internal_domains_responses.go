// Code generated by go-swagger; DO NOT EDIT.

package internal_domain_lists

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/infobloxopen/b1ddi-go-client/models"
)

// InternalDomainListsReadInternalDomainsReader is a Reader for the InternalDomainListsReadInternalDomains structure.
type InternalDomainListsReadInternalDomainsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *InternalDomainListsReadInternalDomainsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewInternalDomainListsReadInternalDomainsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewInternalDomainListsReadInternalDomainsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewInternalDomainListsReadInternalDomainsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /internal_domain_lists/{id}] internal_domain_listsReadInternalDomains", response, response.Code())
	}
}

// NewInternalDomainListsReadInternalDomainsOK creates a InternalDomainListsReadInternalDomainsOK with default headers values
func NewInternalDomainListsReadInternalDomainsOK() *InternalDomainListsReadInternalDomainsOK {
	return &InternalDomainListsReadInternalDomainsOK{}
}

/*
InternalDomainListsReadInternalDomainsOK describes a response with status code 200, with default header values.

GET operation response
*/
type InternalDomainListsReadInternalDomainsOK struct {
	Payload *models.AtcfwInternalDomainsReadResponse
}

// IsSuccess returns true when this internal domain lists read internal domains o k response has a 2xx status code
func (o *InternalDomainListsReadInternalDomainsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this internal domain lists read internal domains o k response has a 3xx status code
func (o *InternalDomainListsReadInternalDomainsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this internal domain lists read internal domains o k response has a 4xx status code
func (o *InternalDomainListsReadInternalDomainsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this internal domain lists read internal domains o k response has a 5xx status code
func (o *InternalDomainListsReadInternalDomainsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this internal domain lists read internal domains o k response a status code equal to that given
func (o *InternalDomainListsReadInternalDomainsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the internal domain lists read internal domains o k response
func (o *InternalDomainListsReadInternalDomainsOK) Code() int {
	return 200
}

func (o *InternalDomainListsReadInternalDomainsOK) Error() string {
	return fmt.Sprintf("[GET /internal_domain_lists/{id}][%d] internalDomainListsReadInternalDomainsOK  %+v", 200, o.Payload)
}

func (o *InternalDomainListsReadInternalDomainsOK) String() string {
	return fmt.Sprintf("[GET /internal_domain_lists/{id}][%d] internalDomainListsReadInternalDomainsOK  %+v", 200, o.Payload)
}

func (o *InternalDomainListsReadInternalDomainsOK) GetPayload() *models.AtcfwInternalDomainsReadResponse {
	return o.Payload
}

func (o *InternalDomainListsReadInternalDomainsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AtcfwInternalDomainsReadResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInternalDomainListsReadInternalDomainsNotFound creates a InternalDomainListsReadInternalDomainsNotFound with default headers values
func NewInternalDomainListsReadInternalDomainsNotFound() *InternalDomainListsReadInternalDomainsNotFound {
	return &InternalDomainListsReadInternalDomainsNotFound{}
}

/*
	InternalDomainListsReadInternalDomainsNotFound describes a response with status code 404, with default header values.

- 'id' value must contain existing internal domain lists identifier
*/
type InternalDomainListsReadInternalDomainsNotFound struct {
	Payload *InternalDomainListsReadInternalDomainsNotFoundBody
}

// IsSuccess returns true when this internal domain lists read internal domains not found response has a 2xx status code
func (o *InternalDomainListsReadInternalDomainsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this internal domain lists read internal domains not found response has a 3xx status code
func (o *InternalDomainListsReadInternalDomainsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this internal domain lists read internal domains not found response has a 4xx status code
func (o *InternalDomainListsReadInternalDomainsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this internal domain lists read internal domains not found response has a 5xx status code
func (o *InternalDomainListsReadInternalDomainsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this internal domain lists read internal domains not found response a status code equal to that given
func (o *InternalDomainListsReadInternalDomainsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the internal domain lists read internal domains not found response
func (o *InternalDomainListsReadInternalDomainsNotFound) Code() int {
	return 404
}

func (o *InternalDomainListsReadInternalDomainsNotFound) Error() string {
	return fmt.Sprintf("[GET /internal_domain_lists/{id}][%d] internalDomainListsReadInternalDomainsNotFound  %+v", 404, o.Payload)
}

func (o *InternalDomainListsReadInternalDomainsNotFound) String() string {
	return fmt.Sprintf("[GET /internal_domain_lists/{id}][%d] internalDomainListsReadInternalDomainsNotFound  %+v", 404, o.Payload)
}

func (o *InternalDomainListsReadInternalDomainsNotFound) GetPayload() *InternalDomainListsReadInternalDomainsNotFoundBody {
	return o.Payload
}

func (o *InternalDomainListsReadInternalDomainsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(InternalDomainListsReadInternalDomainsNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInternalDomainListsReadInternalDomainsInternalServerError creates a InternalDomainListsReadInternalDomainsInternalServerError with default headers values
func NewInternalDomainListsReadInternalDomainsInternalServerError() *InternalDomainListsReadInternalDomainsInternalServerError {
	return &InternalDomainListsReadInternalDomainsInternalServerError{}
}

/*
	InternalDomainListsReadInternalDomainsInternalServerError describes a response with status code 500, with default header values.

- Internal server error occurred
*/
type InternalDomainListsReadInternalDomainsInternalServerError struct {
	Payload *InternalDomainListsReadInternalDomainsInternalServerErrorBody
}

// IsSuccess returns true when this internal domain lists read internal domains internal server error response has a 2xx status code
func (o *InternalDomainListsReadInternalDomainsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this internal domain lists read internal domains internal server error response has a 3xx status code
func (o *InternalDomainListsReadInternalDomainsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this internal domain lists read internal domains internal server error response has a 4xx status code
func (o *InternalDomainListsReadInternalDomainsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this internal domain lists read internal domains internal server error response has a 5xx status code
func (o *InternalDomainListsReadInternalDomainsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this internal domain lists read internal domains internal server error response a status code equal to that given
func (o *InternalDomainListsReadInternalDomainsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the internal domain lists read internal domains internal server error response
func (o *InternalDomainListsReadInternalDomainsInternalServerError) Code() int {
	return 500
}

func (o *InternalDomainListsReadInternalDomainsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /internal_domain_lists/{id}][%d] internalDomainListsReadInternalDomainsInternalServerError  %+v", 500, o.Payload)
}

func (o *InternalDomainListsReadInternalDomainsInternalServerError) String() string {
	return fmt.Sprintf("[GET /internal_domain_lists/{id}][%d] internalDomainListsReadInternalDomainsInternalServerError  %+v", 500, o.Payload)
}

func (o *InternalDomainListsReadInternalDomainsInternalServerError) GetPayload() *InternalDomainListsReadInternalDomainsInternalServerErrorBody {
	return o.Payload
}

func (o *InternalDomainListsReadInternalDomainsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(InternalDomainListsReadInternalDomainsInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
InternalDomainListsReadInternalDomainsInternalServerErrorBody internal domain lists read internal domains internal server error body
swagger:model InternalDomainListsReadInternalDomainsInternalServerErrorBody
*/
type InternalDomainListsReadInternalDomainsInternalServerErrorBody struct {

	// error
	Error *InternalDomainListsReadInternalDomainsInternalServerErrorBodyError `json:"error,omitempty"`
}

// Validate validates this internal domain lists read internal domains internal server error body
func (o *InternalDomainListsReadInternalDomainsInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateError(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *InternalDomainListsReadInternalDomainsInternalServerErrorBody) validateError(formats strfmt.Registry) error {
	if swag.IsZero(o.Error) { // not required
		return nil
	}

	if o.Error != nil {
		if err := o.Error.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("internalDomainListsReadInternalDomainsInternalServerError" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("internalDomainListsReadInternalDomainsInternalServerError" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this internal domain lists read internal domains internal server error body based on the context it is used
func (o *InternalDomainListsReadInternalDomainsInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateError(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *InternalDomainListsReadInternalDomainsInternalServerErrorBody) contextValidateError(ctx context.Context, formats strfmt.Registry) error {

	if o.Error != nil {

		if swag.IsZero(o.Error) { // not required
			return nil
		}

		if err := o.Error.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("internalDomainListsReadInternalDomainsInternalServerError" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("internalDomainListsReadInternalDomainsInternalServerError" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *InternalDomainListsReadInternalDomainsInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *InternalDomainListsReadInternalDomainsInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res InternalDomainListsReadInternalDomainsInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
InternalDomainListsReadInternalDomainsInternalServerErrorBodyError internal domain lists read internal domains internal server error body error
swagger:model InternalDomainListsReadInternalDomainsInternalServerErrorBodyError
*/
type InternalDomainListsReadInternalDomainsInternalServerErrorBodyError struct {

	// code
	// Example: INTERNAL
	Code string `json:"code,omitempty"`

	// message
	// Example: Internal Server Error
	Message string `json:"message,omitempty"`

	// status
	// Example: 500
	Status string `json:"status,omitempty"`
}

// Validate validates this internal domain lists read internal domains internal server error body error
func (o *InternalDomainListsReadInternalDomainsInternalServerErrorBodyError) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this internal domain lists read internal domains internal server error body error based on context it is used
func (o *InternalDomainListsReadInternalDomainsInternalServerErrorBodyError) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *InternalDomainListsReadInternalDomainsInternalServerErrorBodyError) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *InternalDomainListsReadInternalDomainsInternalServerErrorBodyError) UnmarshalBinary(b []byte) error {
	var res InternalDomainListsReadInternalDomainsInternalServerErrorBodyError
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
InternalDomainListsReadInternalDomainsNotFoundBody internal domain lists read internal domains not found body
swagger:model InternalDomainListsReadInternalDomainsNotFoundBody
*/
type InternalDomainListsReadInternalDomainsNotFoundBody struct {

	// error
	Error *InternalDomainListsReadInternalDomainsNotFoundBodyError `json:"error,omitempty"`
}

// Validate validates this internal domain lists read internal domains not found body
func (o *InternalDomainListsReadInternalDomainsNotFoundBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateError(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *InternalDomainListsReadInternalDomainsNotFoundBody) validateError(formats strfmt.Registry) error {
	if swag.IsZero(o.Error) { // not required
		return nil
	}

	if o.Error != nil {
		if err := o.Error.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("internalDomainListsReadInternalDomainsNotFound" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("internalDomainListsReadInternalDomainsNotFound" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this internal domain lists read internal domains not found body based on the context it is used
func (o *InternalDomainListsReadInternalDomainsNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateError(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *InternalDomainListsReadInternalDomainsNotFoundBody) contextValidateError(ctx context.Context, formats strfmt.Registry) error {

	if o.Error != nil {

		if swag.IsZero(o.Error) { // not required
			return nil
		}

		if err := o.Error.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("internalDomainListsReadInternalDomainsNotFound" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("internalDomainListsReadInternalDomainsNotFound" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *InternalDomainListsReadInternalDomainsNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *InternalDomainListsReadInternalDomainsNotFoundBody) UnmarshalBinary(b []byte) error {
	var res InternalDomainListsReadInternalDomainsNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
InternalDomainListsReadInternalDomainsNotFoundBodyError internal domain lists read internal domains not found body error
swagger:model InternalDomainListsReadInternalDomainsNotFoundBodyError
*/
type InternalDomainListsReadInternalDomainsNotFoundBodyError struct {

	// code
	// Example: NOT_FOUND
	Code string `json:"code,omitempty"`

	// message
	// Example: Internal Domain list does not exist
	Message string `json:"message,omitempty"`

	// status
	// Example: 404
	Status string `json:"status,omitempty"`
}

// Validate validates this internal domain lists read internal domains not found body error
func (o *InternalDomainListsReadInternalDomainsNotFoundBodyError) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this internal domain lists read internal domains not found body error based on context it is used
func (o *InternalDomainListsReadInternalDomainsNotFoundBodyError) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *InternalDomainListsReadInternalDomainsNotFoundBodyError) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *InternalDomainListsReadInternalDomainsNotFoundBodyError) UnmarshalBinary(b []byte) error {
	var res InternalDomainListsReadInternalDomainsNotFoundBodyError
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
