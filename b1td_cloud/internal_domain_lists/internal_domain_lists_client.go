// Code generated by go-swagger; DO NOT EDIT.

package internal_domain_lists

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new internal domain lists API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for internal domain lists API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption is the option for Client methods
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	InternalDomainListsCreateInternalDomains(params *InternalDomainListsCreateInternalDomainsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*InternalDomainListsCreateInternalDomainsCreated, error)

	InternalDomainListsDeleteInternalDomains(params *InternalDomainListsDeleteInternalDomainsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*InternalDomainListsDeleteInternalDomainsNoContent, error)

	InternalDomainListsDeleteSingleInternalDomains(params *InternalDomainListsDeleteSingleInternalDomainsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*InternalDomainListsDeleteSingleInternalDomainsNoContent, error)

	InternalDomainListsInternalDomainsItemsPartialUpdate(params *InternalDomainListsInternalDomainsItemsPartialUpdateParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*InternalDomainListsInternalDomainsItemsPartialUpdateCreated, error)

	InternalDomainListsListInternalDomains(params *InternalDomainListsListInternalDomainsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*InternalDomainListsListInternalDomainsOK, error)

	InternalDomainListsReadInternalDomains(params *InternalDomainListsReadInternalDomainsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*InternalDomainListsReadInternalDomainsOK, error)

	InternalDomainListsUpdateInternalDomains(params *InternalDomainListsUpdateInternalDomainsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*InternalDomainListsUpdateInternalDomainsCreated, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
	InternalDomainListsCreateInternalDomains creates internal domains

	Use this method to create Internal Domains objects for the account.

The internal domain list is a transport object for reporting gathering internal domains. This feature allows users to configure internal domains lists for specific DFP and ATEP groups. This lists provides the users to create ‘Internal Domains List’ objects with a name, description, and a list of domains/ip/cidr. These lists are referenced by and attached to DFP, and ATEP groups.
Once attached to DFP, dfp configuration endpoints will return the values under all associated domain lists as domains.

Once attached to ATEP, atep login endpoint will return the values under all associated lists as internal_domain_lists.

Required:
- name
- internal_domains
*/
func (a *Client) InternalDomainListsCreateInternalDomains(params *InternalDomainListsCreateInternalDomainsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*InternalDomainListsCreateInternalDomainsCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInternalDomainListsCreateInternalDomainsParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "internal_domain_listsCreateInternalDomains",
		Method:             "POST",
		PathPattern:        "/internal_domain_lists",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InternalDomainListsCreateInternalDomainsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InternalDomainListsCreateInternalDomainsCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for internal_domain_listsCreateInternalDomains: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
	InternalDomainListsDeleteInternalDomains deletes internal domains

	Use this method to delete Internal Domains objects for the account by a given list of internal domain list ids.

The internal domain list is a transport object for reporting gathering internal domains. This feature allows users to configure internal domains lists for specific DFP and ATEP groups. This lists provides the users to create ‘Internal Domains List’ objects with a name, description, and a list of domains/ip/cidr. These lists are referenced by and attached to DFP, and ATEP groups.
Once attached to DFP, dfp configuration endpoints will return the values under all associated domain lists as domains.

Once attached to ATEP, atep login endpoint will return the values under all associated lists as internal_domain_lists.

Required:
- ids
*/
func (a *Client) InternalDomainListsDeleteInternalDomains(params *InternalDomainListsDeleteInternalDomainsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*InternalDomainListsDeleteInternalDomainsNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInternalDomainListsDeleteInternalDomainsParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "internal_domain_listsDeleteInternalDomains",
		Method:             "DELETE",
		PathPattern:        "/internal_domain_lists",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InternalDomainListsDeleteInternalDomainsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InternalDomainListsDeleteInternalDomainsNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for internal_domain_listsDeleteInternalDomains: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
	InternalDomainListsDeleteSingleInternalDomains deletes internal domains

	Use this method to delete Internal Domains objects for the account by a given internal domain list id.

The internal domain list is a transport object for reporting gathering internal domains. This feature allows users to configure internal domains lists for specific DFP and ATEP groups. This lists provides the users to create ‘Internal Domains List’ objects with a name, description, and a list of domains/ip/cidr. These lists are referenced by and attached to DFP, and ATEP groups.
Once attached to DFP, dfp configuration endpoints will return the values under all associated domain lists as domains.

Once attached to ATEP, atep login endpoint will return the values under all associated lists as internal_domain_lists.
*/
func (a *Client) InternalDomainListsDeleteSingleInternalDomains(params *InternalDomainListsDeleteSingleInternalDomainsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*InternalDomainListsDeleteSingleInternalDomainsNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInternalDomainListsDeleteSingleInternalDomainsParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "internal_domain_listsDeleteSingleInternalDomains",
		Method:             "DELETE",
		PathPattern:        "/internal_domain_lists/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InternalDomainListsDeleteSingleInternalDomainsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InternalDomainListsDeleteSingleInternalDomainsNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for internal_domain_listsDeleteSingleInternalDomains: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
	InternalDomainListsInternalDomainsItemsPartialUpdate patches internal domains

	Use this method to insert ot delete items  for a specified Named List object. Note that duplicated items are silently skipped and only new items are appended to the named list.

Note that DNSM, TI, Fast Flux, custom lists and DGA lists cannot be updated. Only Internal Domains items can be updated.

The Internal Domains Items represent the list of the FQDN or IPv4 addresses to define whitelists for additional protection.
*/
func (a *Client) InternalDomainListsInternalDomainsItemsPartialUpdate(params *InternalDomainListsInternalDomainsItemsPartialUpdateParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*InternalDomainListsInternalDomainsItemsPartialUpdateCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInternalDomainListsInternalDomainsItemsPartialUpdateParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "internal_domain_listsInternalDomainsItemsPartialUpdate",
		Method:             "PATCH",
		PathPattern:        "/internal_domain_lists/{id}/items",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InternalDomainListsInternalDomainsItemsPartialUpdateReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InternalDomainListsInternalDomainsItemsPartialUpdateCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for internal_domain_listsInternalDomainsItemsPartialUpdate: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
	InternalDomainListsListInternalDomains lists internal domains

	Use this method to retrieve information on all Internal Domains objects for the account.

The internal domain list is a transport object for reporting gathering internal domains. This feature allows users to configure internal domains lists for specific DFP and ATEP groups. This lists provides the users to create ‘Internal Domains List’ objects with a name, description, and a list of domains/ip/cidr. These lists are referenced by and attached to DFP, and ATEP groups.
Once attached to DFP, dfp configuration endpoints will return the values under all associated domain lists as domains.

Once attached to ATEP, atep login endpoint will return the values under all associated lists as internal_domain_lists.
*/
func (a *Client) InternalDomainListsListInternalDomains(params *InternalDomainListsListInternalDomainsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*InternalDomainListsListInternalDomainsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInternalDomainListsListInternalDomainsParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "internal_domain_listsListInternalDomains",
		Method:             "GET",
		PathPattern:        "/internal_domain_lists",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InternalDomainListsListInternalDomainsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InternalDomainListsListInternalDomainsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for internal_domain_listsListInternalDomains: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
	InternalDomainListsReadInternalDomains reads internal domains

	Use this method to read Internal Domains objects for the account by a internal domain list id.

The internal domain list is a transport object for reporting gathering internal domains. This feature allows users to configure internal domains lists for specific DFP and ATEP groups. This lists provides the users to create ‘Internal Domains List’ objects with a name, description, and a list of domains/ip/cidr. These lists are referenced by and attached to DFP, and ATEP groups.
Once attached to DFP, dfp configuration endpoints will return the values under all associated domain lists as domains.

Once attached to ATEP, atep login endpoint will return the values under all associated lists as internal_domain_lists.
*/
func (a *Client) InternalDomainListsReadInternalDomains(params *InternalDomainListsReadInternalDomainsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*InternalDomainListsReadInternalDomainsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInternalDomainListsReadInternalDomainsParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "internal_domain_listsReadInternalDomains",
		Method:             "GET",
		PathPattern:        "/internal_domain_lists/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InternalDomainListsReadInternalDomainsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InternalDomainListsReadInternalDomainsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for internal_domain_listsReadInternalDomains: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
	InternalDomainListsUpdateInternalDomains updates internal domains

	Use this method to update Internal Domains objects for the account by a internal domain list id.

The internal domain list is a transport object for reporting gathering internal domains. This feature allows users to configure internal domains lists for specific DFP and ATEP groups. This lists provides the users to create ‘Internal Domains List’ objects with a name, description, and a list of domains/ip/cidr. These lists are referenced by and attached to DFP, and ATEP groups.
Once attached to DFP, dfp configuration endpoints will return the values under all associated domain lists as domains.

Once attached to ATEP, atep login endpoint will return the values under all associated lists as internal_domain_lists.

Required:
- name
- internal_domains
*/
func (a *Client) InternalDomainListsUpdateInternalDomains(params *InternalDomainListsUpdateInternalDomainsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*InternalDomainListsUpdateInternalDomainsCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInternalDomainListsUpdateInternalDomainsParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "internal_domain_listsUpdateInternalDomains",
		Method:             "PUT",
		PathPattern:        "/internal_domain_lists/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InternalDomainListsUpdateInternalDomainsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InternalDomainListsUpdateInternalDomainsCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for internal_domain_listsUpdateInternalDomains: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
