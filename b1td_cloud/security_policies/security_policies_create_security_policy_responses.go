// Code generated by go-swagger; DO NOT EDIT.

package security_policies

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/infobloxopen/b1ddi-go-client/models"
)

// SecurityPoliciesCreateSecurityPolicyReader is a Reader for the SecurityPoliciesCreateSecurityPolicy structure.
type SecurityPoliciesCreateSecurityPolicyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SecurityPoliciesCreateSecurityPolicyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewSecurityPoliciesCreateSecurityPolicyCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSecurityPoliciesCreateSecurityPolicyBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSecurityPoliciesCreateSecurityPolicyNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewSecurityPoliciesCreateSecurityPolicyConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSecurityPoliciesCreateSecurityPolicyInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /security_policies] security_policiesCreateSecurityPolicy", response, response.Code())
	}
}

// NewSecurityPoliciesCreateSecurityPolicyCreated creates a SecurityPoliciesCreateSecurityPolicyCreated with default headers values
func NewSecurityPoliciesCreateSecurityPolicyCreated() *SecurityPoliciesCreateSecurityPolicyCreated {
	return &SecurityPoliciesCreateSecurityPolicyCreated{}
}

/*
SecurityPoliciesCreateSecurityPolicyCreated describes a response with status code 201, with default header values.

POST operation response
*/
type SecurityPoliciesCreateSecurityPolicyCreated struct {
	Payload *models.AtcfwSecurityPolicyCreateResponse
}

// IsSuccess returns true when this security policies create security policy created response has a 2xx status code
func (o *SecurityPoliciesCreateSecurityPolicyCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this security policies create security policy created response has a 3xx status code
func (o *SecurityPoliciesCreateSecurityPolicyCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this security policies create security policy created response has a 4xx status code
func (o *SecurityPoliciesCreateSecurityPolicyCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this security policies create security policy created response has a 5xx status code
func (o *SecurityPoliciesCreateSecurityPolicyCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this security policies create security policy created response a status code equal to that given
func (o *SecurityPoliciesCreateSecurityPolicyCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the security policies create security policy created response
func (o *SecurityPoliciesCreateSecurityPolicyCreated) Code() int {
	return 201
}

func (o *SecurityPoliciesCreateSecurityPolicyCreated) Error() string {
	return fmt.Sprintf("[POST /security_policies][%d] securityPoliciesCreateSecurityPolicyCreated  %+v", 201, o.Payload)
}

func (o *SecurityPoliciesCreateSecurityPolicyCreated) String() string {
	return fmt.Sprintf("[POST /security_policies][%d] securityPoliciesCreateSecurityPolicyCreated  %+v", 201, o.Payload)
}

func (o *SecurityPoliciesCreateSecurityPolicyCreated) GetPayload() *models.AtcfwSecurityPolicyCreateResponse {
	return o.Payload
}

func (o *SecurityPoliciesCreateSecurityPolicyCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AtcfwSecurityPolicyCreateResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSecurityPoliciesCreateSecurityPolicyBadRequest creates a SecurityPoliciesCreateSecurityPolicyBadRequest with default headers values
func NewSecurityPoliciesCreateSecurityPolicyBadRequest() *SecurityPoliciesCreateSecurityPolicyBadRequest {
	return &SecurityPoliciesCreateSecurityPolicyBadRequest{}
}

/*
	SecurityPoliciesCreateSecurityPolicyBadRequest describes a response with status code 400, with default header values.

- 'name' length cannot exceed 256 characters limit
- 'description' length cannot exceed 256 characters limit
- 'network_lists' must containt existing Network Lists
- 'dfps' must contain existing DNS Forwarding Proxies
- 'roaming_device_groups' must contain existing endpoint devices
- 'network_lists' cannot contain Network Lists that are already assigned to another Security Policy
- Network Lists for the Default Security Policy cannot be updated
- 'dfps' cannot contain DNS Forwarding Proxies that are already assigned to another Security Policy
- DNS Forwarding Proxies for the Default Security Policy cannot be updated
- 'roaming_device_groups' cannot contain endpoint devices that are already assigned to another Security Policy
- endpoint devices for the Default Security Policy cannot be updated
- Threat Feed and TI rules must contain licensed threat feeds and TI lists
- Threat Feed rules must be unique for the Security Policy
*/
type SecurityPoliciesCreateSecurityPolicyBadRequest struct {
	Payload *SecurityPoliciesCreateSecurityPolicyBadRequestBody
}

// IsSuccess returns true when this security policies create security policy bad request response has a 2xx status code
func (o *SecurityPoliciesCreateSecurityPolicyBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this security policies create security policy bad request response has a 3xx status code
func (o *SecurityPoliciesCreateSecurityPolicyBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this security policies create security policy bad request response has a 4xx status code
func (o *SecurityPoliciesCreateSecurityPolicyBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this security policies create security policy bad request response has a 5xx status code
func (o *SecurityPoliciesCreateSecurityPolicyBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this security policies create security policy bad request response a status code equal to that given
func (o *SecurityPoliciesCreateSecurityPolicyBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the security policies create security policy bad request response
func (o *SecurityPoliciesCreateSecurityPolicyBadRequest) Code() int {
	return 400
}

func (o *SecurityPoliciesCreateSecurityPolicyBadRequest) Error() string {
	return fmt.Sprintf("[POST /security_policies][%d] securityPoliciesCreateSecurityPolicyBadRequest  %+v", 400, o.Payload)
}

func (o *SecurityPoliciesCreateSecurityPolicyBadRequest) String() string {
	return fmt.Sprintf("[POST /security_policies][%d] securityPoliciesCreateSecurityPolicyBadRequest  %+v", 400, o.Payload)
}

func (o *SecurityPoliciesCreateSecurityPolicyBadRequest) GetPayload() *SecurityPoliciesCreateSecurityPolicyBadRequestBody {
	return o.Payload
}

func (o *SecurityPoliciesCreateSecurityPolicyBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(SecurityPoliciesCreateSecurityPolicyBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSecurityPoliciesCreateSecurityPolicyNotFound creates a SecurityPoliciesCreateSecurityPolicyNotFound with default headers values
func NewSecurityPoliciesCreateSecurityPolicyNotFound() *SecurityPoliciesCreateSecurityPolicyNotFound {
	return &SecurityPoliciesCreateSecurityPolicyNotFound{}
}

/*
	SecurityPoliciesCreateSecurityPolicyNotFound describes a response with status code 404, with default header values.

- Threat Feed and TI rules must contain existing threat feeds and TI lists
- Custom Redirect rules must contain existing Custom Redirect
- Custom List rules must contain existing Custom List
*/
type SecurityPoliciesCreateSecurityPolicyNotFound struct {
	Payload *SecurityPoliciesCreateSecurityPolicyNotFoundBody
}

// IsSuccess returns true when this security policies create security policy not found response has a 2xx status code
func (o *SecurityPoliciesCreateSecurityPolicyNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this security policies create security policy not found response has a 3xx status code
func (o *SecurityPoliciesCreateSecurityPolicyNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this security policies create security policy not found response has a 4xx status code
func (o *SecurityPoliciesCreateSecurityPolicyNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this security policies create security policy not found response has a 5xx status code
func (o *SecurityPoliciesCreateSecurityPolicyNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this security policies create security policy not found response a status code equal to that given
func (o *SecurityPoliciesCreateSecurityPolicyNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the security policies create security policy not found response
func (o *SecurityPoliciesCreateSecurityPolicyNotFound) Code() int {
	return 404
}

func (o *SecurityPoliciesCreateSecurityPolicyNotFound) Error() string {
	return fmt.Sprintf("[POST /security_policies][%d] securityPoliciesCreateSecurityPolicyNotFound  %+v", 404, o.Payload)
}

func (o *SecurityPoliciesCreateSecurityPolicyNotFound) String() string {
	return fmt.Sprintf("[POST /security_policies][%d] securityPoliciesCreateSecurityPolicyNotFound  %+v", 404, o.Payload)
}

func (o *SecurityPoliciesCreateSecurityPolicyNotFound) GetPayload() *SecurityPoliciesCreateSecurityPolicyNotFoundBody {
	return o.Payload
}

func (o *SecurityPoliciesCreateSecurityPolicyNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(SecurityPoliciesCreateSecurityPolicyNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSecurityPoliciesCreateSecurityPolicyConflict creates a SecurityPoliciesCreateSecurityPolicyConflict with default headers values
func NewSecurityPoliciesCreateSecurityPolicyConflict() *SecurityPoliciesCreateSecurityPolicyConflict {
	return &SecurityPoliciesCreateSecurityPolicyConflict{}
}

/*
	SecurityPoliciesCreateSecurityPolicyConflict describes a response with status code 409, with default header values.

- 'name' value must be unique among security policies belonging to the same account
*/
type SecurityPoliciesCreateSecurityPolicyConflict struct {
	Payload *SecurityPoliciesCreateSecurityPolicyConflictBody
}

// IsSuccess returns true when this security policies create security policy conflict response has a 2xx status code
func (o *SecurityPoliciesCreateSecurityPolicyConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this security policies create security policy conflict response has a 3xx status code
func (o *SecurityPoliciesCreateSecurityPolicyConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this security policies create security policy conflict response has a 4xx status code
func (o *SecurityPoliciesCreateSecurityPolicyConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this security policies create security policy conflict response has a 5xx status code
func (o *SecurityPoliciesCreateSecurityPolicyConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this security policies create security policy conflict response a status code equal to that given
func (o *SecurityPoliciesCreateSecurityPolicyConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the security policies create security policy conflict response
func (o *SecurityPoliciesCreateSecurityPolicyConflict) Code() int {
	return 409
}

func (o *SecurityPoliciesCreateSecurityPolicyConflict) Error() string {
	return fmt.Sprintf("[POST /security_policies][%d] securityPoliciesCreateSecurityPolicyConflict  %+v", 409, o.Payload)
}

func (o *SecurityPoliciesCreateSecurityPolicyConflict) String() string {
	return fmt.Sprintf("[POST /security_policies][%d] securityPoliciesCreateSecurityPolicyConflict  %+v", 409, o.Payload)
}

func (o *SecurityPoliciesCreateSecurityPolicyConflict) GetPayload() *SecurityPoliciesCreateSecurityPolicyConflictBody {
	return o.Payload
}

func (o *SecurityPoliciesCreateSecurityPolicyConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(SecurityPoliciesCreateSecurityPolicyConflictBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSecurityPoliciesCreateSecurityPolicyInternalServerError creates a SecurityPoliciesCreateSecurityPolicyInternalServerError with default headers values
func NewSecurityPoliciesCreateSecurityPolicyInternalServerError() *SecurityPoliciesCreateSecurityPolicyInternalServerError {
	return &SecurityPoliciesCreateSecurityPolicyInternalServerError{}
}

/*
	SecurityPoliciesCreateSecurityPolicyInternalServerError describes a response with status code 500, with default header values.

- Internal server error occurred
*/
type SecurityPoliciesCreateSecurityPolicyInternalServerError struct {
	Payload *SecurityPoliciesCreateSecurityPolicyInternalServerErrorBody
}

// IsSuccess returns true when this security policies create security policy internal server error response has a 2xx status code
func (o *SecurityPoliciesCreateSecurityPolicyInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this security policies create security policy internal server error response has a 3xx status code
func (o *SecurityPoliciesCreateSecurityPolicyInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this security policies create security policy internal server error response has a 4xx status code
func (o *SecurityPoliciesCreateSecurityPolicyInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this security policies create security policy internal server error response has a 5xx status code
func (o *SecurityPoliciesCreateSecurityPolicyInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this security policies create security policy internal server error response a status code equal to that given
func (o *SecurityPoliciesCreateSecurityPolicyInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the security policies create security policy internal server error response
func (o *SecurityPoliciesCreateSecurityPolicyInternalServerError) Code() int {
	return 500
}

func (o *SecurityPoliciesCreateSecurityPolicyInternalServerError) Error() string {
	return fmt.Sprintf("[POST /security_policies][%d] securityPoliciesCreateSecurityPolicyInternalServerError  %+v", 500, o.Payload)
}

func (o *SecurityPoliciesCreateSecurityPolicyInternalServerError) String() string {
	return fmt.Sprintf("[POST /security_policies][%d] securityPoliciesCreateSecurityPolicyInternalServerError  %+v", 500, o.Payload)
}

func (o *SecurityPoliciesCreateSecurityPolicyInternalServerError) GetPayload() *SecurityPoliciesCreateSecurityPolicyInternalServerErrorBody {
	return o.Payload
}

func (o *SecurityPoliciesCreateSecurityPolicyInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(SecurityPoliciesCreateSecurityPolicyInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
SecurityPoliciesCreateSecurityPolicyBadRequestBody security policies create security policy bad request body
swagger:model SecurityPoliciesCreateSecurityPolicyBadRequestBody
*/
type SecurityPoliciesCreateSecurityPolicyBadRequestBody struct {

	// error
	Error *SecurityPoliciesCreateSecurityPolicyBadRequestBodyError `json:"error,omitempty"`
}

// Validate validates this security policies create security policy bad request body
func (o *SecurityPoliciesCreateSecurityPolicyBadRequestBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateError(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *SecurityPoliciesCreateSecurityPolicyBadRequestBody) validateError(formats strfmt.Registry) error {
	if swag.IsZero(o.Error) { // not required
		return nil
	}

	if o.Error != nil {
		if err := o.Error.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("securityPoliciesCreateSecurityPolicyBadRequest" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("securityPoliciesCreateSecurityPolicyBadRequest" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this security policies create security policy bad request body based on the context it is used
func (o *SecurityPoliciesCreateSecurityPolicyBadRequestBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateError(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *SecurityPoliciesCreateSecurityPolicyBadRequestBody) contextValidateError(ctx context.Context, formats strfmt.Registry) error {

	if o.Error != nil {

		if swag.IsZero(o.Error) { // not required
			return nil
		}

		if err := o.Error.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("securityPoliciesCreateSecurityPolicyBadRequest" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("securityPoliciesCreateSecurityPolicyBadRequest" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *SecurityPoliciesCreateSecurityPolicyBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SecurityPoliciesCreateSecurityPolicyBadRequestBody) UnmarshalBinary(b []byte) error {
	var res SecurityPoliciesCreateSecurityPolicyBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
SecurityPoliciesCreateSecurityPolicyBadRequestBodyError security policies create security policy bad request body error
swagger:model SecurityPoliciesCreateSecurityPolicyBadRequestBodyError
*/
type SecurityPoliciesCreateSecurityPolicyBadRequestBodyError struct {

	// code
	// Example: INVALID_ARGUMENT
	Code string `json:"code,omitempty"`

	// message
	// Example: 'name' length cannot exceed 256 characters limit
	Message string `json:"message,omitempty"`

	// status
	// Example: 400
	Status string `json:"status,omitempty"`
}

// Validate validates this security policies create security policy bad request body error
func (o *SecurityPoliciesCreateSecurityPolicyBadRequestBodyError) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this security policies create security policy bad request body error based on context it is used
func (o *SecurityPoliciesCreateSecurityPolicyBadRequestBodyError) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *SecurityPoliciesCreateSecurityPolicyBadRequestBodyError) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SecurityPoliciesCreateSecurityPolicyBadRequestBodyError) UnmarshalBinary(b []byte) error {
	var res SecurityPoliciesCreateSecurityPolicyBadRequestBodyError
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
SecurityPoliciesCreateSecurityPolicyConflictBody security policies create security policy conflict body
swagger:model SecurityPoliciesCreateSecurityPolicyConflictBody
*/
type SecurityPoliciesCreateSecurityPolicyConflictBody struct {

	// error
	Error *SecurityPoliciesCreateSecurityPolicyConflictBodyError `json:"error,omitempty"`
}

// Validate validates this security policies create security policy conflict body
func (o *SecurityPoliciesCreateSecurityPolicyConflictBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateError(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *SecurityPoliciesCreateSecurityPolicyConflictBody) validateError(formats strfmt.Registry) error {
	if swag.IsZero(o.Error) { // not required
		return nil
	}

	if o.Error != nil {
		if err := o.Error.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("securityPoliciesCreateSecurityPolicyConflict" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("securityPoliciesCreateSecurityPolicyConflict" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this security policies create security policy conflict body based on the context it is used
func (o *SecurityPoliciesCreateSecurityPolicyConflictBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateError(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *SecurityPoliciesCreateSecurityPolicyConflictBody) contextValidateError(ctx context.Context, formats strfmt.Registry) error {

	if o.Error != nil {

		if swag.IsZero(o.Error) { // not required
			return nil
		}

		if err := o.Error.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("securityPoliciesCreateSecurityPolicyConflict" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("securityPoliciesCreateSecurityPolicyConflict" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *SecurityPoliciesCreateSecurityPolicyConflictBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SecurityPoliciesCreateSecurityPolicyConflictBody) UnmarshalBinary(b []byte) error {
	var res SecurityPoliciesCreateSecurityPolicyConflictBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
SecurityPoliciesCreateSecurityPolicyConflictBodyError security policies create security policy conflict body error
swagger:model SecurityPoliciesCreateSecurityPolicyConflictBodyError
*/
type SecurityPoliciesCreateSecurityPolicyConflictBodyError struct {

	// code
	// Example: ALREADY_EXISTS
	Code string `json:"code,omitempty"`

	// message
	// Example: Security Policy with name 'sec_policy_a' already exists
	Message string `json:"message,omitempty"`

	// status
	// Example: 409
	Status string `json:"status,omitempty"`
}

// Validate validates this security policies create security policy conflict body error
func (o *SecurityPoliciesCreateSecurityPolicyConflictBodyError) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this security policies create security policy conflict body error based on context it is used
func (o *SecurityPoliciesCreateSecurityPolicyConflictBodyError) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *SecurityPoliciesCreateSecurityPolicyConflictBodyError) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SecurityPoliciesCreateSecurityPolicyConflictBodyError) UnmarshalBinary(b []byte) error {
	var res SecurityPoliciesCreateSecurityPolicyConflictBodyError
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
SecurityPoliciesCreateSecurityPolicyInternalServerErrorBody security policies create security policy internal server error body
swagger:model SecurityPoliciesCreateSecurityPolicyInternalServerErrorBody
*/
type SecurityPoliciesCreateSecurityPolicyInternalServerErrorBody struct {

	// error
	Error *SecurityPoliciesCreateSecurityPolicyInternalServerErrorBodyError `json:"error,omitempty"`
}

// Validate validates this security policies create security policy internal server error body
func (o *SecurityPoliciesCreateSecurityPolicyInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateError(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *SecurityPoliciesCreateSecurityPolicyInternalServerErrorBody) validateError(formats strfmt.Registry) error {
	if swag.IsZero(o.Error) { // not required
		return nil
	}

	if o.Error != nil {
		if err := o.Error.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("securityPoliciesCreateSecurityPolicyInternalServerError" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("securityPoliciesCreateSecurityPolicyInternalServerError" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this security policies create security policy internal server error body based on the context it is used
func (o *SecurityPoliciesCreateSecurityPolicyInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateError(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *SecurityPoliciesCreateSecurityPolicyInternalServerErrorBody) contextValidateError(ctx context.Context, formats strfmt.Registry) error {

	if o.Error != nil {

		if swag.IsZero(o.Error) { // not required
			return nil
		}

		if err := o.Error.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("securityPoliciesCreateSecurityPolicyInternalServerError" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("securityPoliciesCreateSecurityPolicyInternalServerError" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *SecurityPoliciesCreateSecurityPolicyInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SecurityPoliciesCreateSecurityPolicyInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res SecurityPoliciesCreateSecurityPolicyInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
SecurityPoliciesCreateSecurityPolicyInternalServerErrorBodyError security policies create security policy internal server error body error
swagger:model SecurityPoliciesCreateSecurityPolicyInternalServerErrorBodyError
*/
type SecurityPoliciesCreateSecurityPolicyInternalServerErrorBodyError struct {

	// code
	// Example: INTERNAL
	Code string `json:"code,omitempty"`

	// message
	// Example: Internal Server Error
	Message string `json:"message,omitempty"`

	// status
	// Example: 500
	Status string `json:"status,omitempty"`
}

// Validate validates this security policies create security policy internal server error body error
func (o *SecurityPoliciesCreateSecurityPolicyInternalServerErrorBodyError) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this security policies create security policy internal server error body error based on context it is used
func (o *SecurityPoliciesCreateSecurityPolicyInternalServerErrorBodyError) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *SecurityPoliciesCreateSecurityPolicyInternalServerErrorBodyError) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SecurityPoliciesCreateSecurityPolicyInternalServerErrorBodyError) UnmarshalBinary(b []byte) error {
	var res SecurityPoliciesCreateSecurityPolicyInternalServerErrorBodyError
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
SecurityPoliciesCreateSecurityPolicyNotFoundBody security policies create security policy not found body
swagger:model SecurityPoliciesCreateSecurityPolicyNotFoundBody
*/
type SecurityPoliciesCreateSecurityPolicyNotFoundBody struct {

	// error
	Error *SecurityPoliciesCreateSecurityPolicyNotFoundBodyError `json:"error,omitempty"`
}

// Validate validates this security policies create security policy not found body
func (o *SecurityPoliciesCreateSecurityPolicyNotFoundBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateError(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *SecurityPoliciesCreateSecurityPolicyNotFoundBody) validateError(formats strfmt.Registry) error {
	if swag.IsZero(o.Error) { // not required
		return nil
	}

	if o.Error != nil {
		if err := o.Error.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("securityPoliciesCreateSecurityPolicyNotFound" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("securityPoliciesCreateSecurityPolicyNotFound" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this security policies create security policy not found body based on the context it is used
func (o *SecurityPoliciesCreateSecurityPolicyNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateError(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *SecurityPoliciesCreateSecurityPolicyNotFoundBody) contextValidateError(ctx context.Context, formats strfmt.Registry) error {

	if o.Error != nil {

		if swag.IsZero(o.Error) { // not required
			return nil
		}

		if err := o.Error.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("securityPoliciesCreateSecurityPolicyNotFound" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("securityPoliciesCreateSecurityPolicyNotFound" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *SecurityPoliciesCreateSecurityPolicyNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SecurityPoliciesCreateSecurityPolicyNotFoundBody) UnmarshalBinary(b []byte) error {
	var res SecurityPoliciesCreateSecurityPolicyNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
SecurityPoliciesCreateSecurityPolicyNotFoundBodyError security policies create security policy not found body error
swagger:model SecurityPoliciesCreateSecurityPolicyNotFoundBodyError
*/
type SecurityPoliciesCreateSecurityPolicyNotFoundBodyError struct {

	// code
	// Example: NOT_FOUND
	Code string `json:"code,omitempty"`

	// message
	// Example: Invalid Rule: List 'custom-list-a.com' not found
	Message string `json:"message,omitempty"`

	// status
	// Example: 404
	Status string `json:"status,omitempty"`
}

// Validate validates this security policies create security policy not found body error
func (o *SecurityPoliciesCreateSecurityPolicyNotFoundBodyError) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this security policies create security policy not found body error based on context it is used
func (o *SecurityPoliciesCreateSecurityPolicyNotFoundBodyError) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *SecurityPoliciesCreateSecurityPolicyNotFoundBodyError) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SecurityPoliciesCreateSecurityPolicyNotFoundBodyError) UnmarshalBinary(b []byte) error {
	var res SecurityPoliciesCreateSecurityPolicyNotFoundBodyError
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
