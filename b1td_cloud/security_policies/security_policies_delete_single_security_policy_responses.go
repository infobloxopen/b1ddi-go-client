// Code generated by go-swagger; DO NOT EDIT.

package security_policies

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// SecurityPoliciesDeleteSingleSecurityPolicyReader is a Reader for the SecurityPoliciesDeleteSingleSecurityPolicy structure.
type SecurityPoliciesDeleteSingleSecurityPolicyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SecurityPoliciesDeleteSingleSecurityPolicyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewSecurityPoliciesDeleteSingleSecurityPolicyNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSecurityPoliciesDeleteSingleSecurityPolicyBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSecurityPoliciesDeleteSingleSecurityPolicyInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /security_policies/{id}] security_policiesDeleteSingleSecurityPolicy", response, response.Code())
	}
}

// NewSecurityPoliciesDeleteSingleSecurityPolicyNoContent creates a SecurityPoliciesDeleteSingleSecurityPolicyNoContent with default headers values
func NewSecurityPoliciesDeleteSingleSecurityPolicyNoContent() *SecurityPoliciesDeleteSingleSecurityPolicyNoContent {
	return &SecurityPoliciesDeleteSingleSecurityPolicyNoContent{}
}

/*
SecurityPoliciesDeleteSingleSecurityPolicyNoContent describes a response with status code 204, with default header values.

No Content
*/
type SecurityPoliciesDeleteSingleSecurityPolicyNoContent struct {
}

// IsSuccess returns true when this security policies delete single security policy no content response has a 2xx status code
func (o *SecurityPoliciesDeleteSingleSecurityPolicyNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this security policies delete single security policy no content response has a 3xx status code
func (o *SecurityPoliciesDeleteSingleSecurityPolicyNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this security policies delete single security policy no content response has a 4xx status code
func (o *SecurityPoliciesDeleteSingleSecurityPolicyNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this security policies delete single security policy no content response has a 5xx status code
func (o *SecurityPoliciesDeleteSingleSecurityPolicyNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this security policies delete single security policy no content response a status code equal to that given
func (o *SecurityPoliciesDeleteSingleSecurityPolicyNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the security policies delete single security policy no content response
func (o *SecurityPoliciesDeleteSingleSecurityPolicyNoContent) Code() int {
	return 204
}

func (o *SecurityPoliciesDeleteSingleSecurityPolicyNoContent) Error() string {
	return fmt.Sprintf("[DELETE /security_policies/{id}][%d] securityPoliciesDeleteSingleSecurityPolicyNoContent ", 204)
}

func (o *SecurityPoliciesDeleteSingleSecurityPolicyNoContent) String() string {
	return fmt.Sprintf("[DELETE /security_policies/{id}][%d] securityPoliciesDeleteSingleSecurityPolicyNoContent ", 204)
}

func (o *SecurityPoliciesDeleteSingleSecurityPolicyNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSecurityPoliciesDeleteSingleSecurityPolicyBadRequest creates a SecurityPoliciesDeleteSingleSecurityPolicyBadRequest with default headers values
func NewSecurityPoliciesDeleteSingleSecurityPolicyBadRequest() *SecurityPoliciesDeleteSingleSecurityPolicyBadRequest {
	return &SecurityPoliciesDeleteSingleSecurityPolicyBadRequest{}
}

/*
	SecurityPoliciesDeleteSingleSecurityPolicyBadRequest describes a response with status code 400, with default header values.

- 'id' value must contain values that are greater than or equal to zero
- 'id' value must contain existing security policy identifier
- default security policy cannot be deleted
*/
type SecurityPoliciesDeleteSingleSecurityPolicyBadRequest struct {
	Payload *SecurityPoliciesDeleteSingleSecurityPolicyBadRequestBody
}

// IsSuccess returns true when this security policies delete single security policy bad request response has a 2xx status code
func (o *SecurityPoliciesDeleteSingleSecurityPolicyBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this security policies delete single security policy bad request response has a 3xx status code
func (o *SecurityPoliciesDeleteSingleSecurityPolicyBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this security policies delete single security policy bad request response has a 4xx status code
func (o *SecurityPoliciesDeleteSingleSecurityPolicyBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this security policies delete single security policy bad request response has a 5xx status code
func (o *SecurityPoliciesDeleteSingleSecurityPolicyBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this security policies delete single security policy bad request response a status code equal to that given
func (o *SecurityPoliciesDeleteSingleSecurityPolicyBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the security policies delete single security policy bad request response
func (o *SecurityPoliciesDeleteSingleSecurityPolicyBadRequest) Code() int {
	return 400
}

func (o *SecurityPoliciesDeleteSingleSecurityPolicyBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /security_policies/{id}][%d] securityPoliciesDeleteSingleSecurityPolicyBadRequest  %+v", 400, o.Payload)
}

func (o *SecurityPoliciesDeleteSingleSecurityPolicyBadRequest) String() string {
	return fmt.Sprintf("[DELETE /security_policies/{id}][%d] securityPoliciesDeleteSingleSecurityPolicyBadRequest  %+v", 400, o.Payload)
}

func (o *SecurityPoliciesDeleteSingleSecurityPolicyBadRequest) GetPayload() *SecurityPoliciesDeleteSingleSecurityPolicyBadRequestBody {
	return o.Payload
}

func (o *SecurityPoliciesDeleteSingleSecurityPolicyBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(SecurityPoliciesDeleteSingleSecurityPolicyBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSecurityPoliciesDeleteSingleSecurityPolicyInternalServerError creates a SecurityPoliciesDeleteSingleSecurityPolicyInternalServerError with default headers values
func NewSecurityPoliciesDeleteSingleSecurityPolicyInternalServerError() *SecurityPoliciesDeleteSingleSecurityPolicyInternalServerError {
	return &SecurityPoliciesDeleteSingleSecurityPolicyInternalServerError{}
}

/*
	SecurityPoliciesDeleteSingleSecurityPolicyInternalServerError describes a response with status code 500, with default header values.

- Internal server error occurred
*/
type SecurityPoliciesDeleteSingleSecurityPolicyInternalServerError struct {
	Payload *SecurityPoliciesDeleteSingleSecurityPolicyInternalServerErrorBody
}

// IsSuccess returns true when this security policies delete single security policy internal server error response has a 2xx status code
func (o *SecurityPoliciesDeleteSingleSecurityPolicyInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this security policies delete single security policy internal server error response has a 3xx status code
func (o *SecurityPoliciesDeleteSingleSecurityPolicyInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this security policies delete single security policy internal server error response has a 4xx status code
func (o *SecurityPoliciesDeleteSingleSecurityPolicyInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this security policies delete single security policy internal server error response has a 5xx status code
func (o *SecurityPoliciesDeleteSingleSecurityPolicyInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this security policies delete single security policy internal server error response a status code equal to that given
func (o *SecurityPoliciesDeleteSingleSecurityPolicyInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the security policies delete single security policy internal server error response
func (o *SecurityPoliciesDeleteSingleSecurityPolicyInternalServerError) Code() int {
	return 500
}

func (o *SecurityPoliciesDeleteSingleSecurityPolicyInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /security_policies/{id}][%d] securityPoliciesDeleteSingleSecurityPolicyInternalServerError  %+v", 500, o.Payload)
}

func (o *SecurityPoliciesDeleteSingleSecurityPolicyInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /security_policies/{id}][%d] securityPoliciesDeleteSingleSecurityPolicyInternalServerError  %+v", 500, o.Payload)
}

func (o *SecurityPoliciesDeleteSingleSecurityPolicyInternalServerError) GetPayload() *SecurityPoliciesDeleteSingleSecurityPolicyInternalServerErrorBody {
	return o.Payload
}

func (o *SecurityPoliciesDeleteSingleSecurityPolicyInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(SecurityPoliciesDeleteSingleSecurityPolicyInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
SecurityPoliciesDeleteSingleSecurityPolicyBadRequestBody security policies delete single security policy bad request body
swagger:model SecurityPoliciesDeleteSingleSecurityPolicyBadRequestBody
*/
type SecurityPoliciesDeleteSingleSecurityPolicyBadRequestBody struct {

	// error
	Error *SecurityPoliciesDeleteSingleSecurityPolicyBadRequestBodyError `json:"error,omitempty"`
}

// Validate validates this security policies delete single security policy bad request body
func (o *SecurityPoliciesDeleteSingleSecurityPolicyBadRequestBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateError(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *SecurityPoliciesDeleteSingleSecurityPolicyBadRequestBody) validateError(formats strfmt.Registry) error {
	if swag.IsZero(o.Error) { // not required
		return nil
	}

	if o.Error != nil {
		if err := o.Error.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("securityPoliciesDeleteSingleSecurityPolicyBadRequest" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("securityPoliciesDeleteSingleSecurityPolicyBadRequest" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this security policies delete single security policy bad request body based on the context it is used
func (o *SecurityPoliciesDeleteSingleSecurityPolicyBadRequestBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateError(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *SecurityPoliciesDeleteSingleSecurityPolicyBadRequestBody) contextValidateError(ctx context.Context, formats strfmt.Registry) error {

	if o.Error != nil {

		if swag.IsZero(o.Error) { // not required
			return nil
		}

		if err := o.Error.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("securityPoliciesDeleteSingleSecurityPolicyBadRequest" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("securityPoliciesDeleteSingleSecurityPolicyBadRequest" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *SecurityPoliciesDeleteSingleSecurityPolicyBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SecurityPoliciesDeleteSingleSecurityPolicyBadRequestBody) UnmarshalBinary(b []byte) error {
	var res SecurityPoliciesDeleteSingleSecurityPolicyBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
SecurityPoliciesDeleteSingleSecurityPolicyBadRequestBodyError security policies delete single security policy bad request body error
swagger:model SecurityPoliciesDeleteSingleSecurityPolicyBadRequestBodyError
*/
type SecurityPoliciesDeleteSingleSecurityPolicyBadRequestBodyError struct {

	// code
	// Example: INVALID_ARGUMENT
	Code string `json:"code,omitempty"`

	// message
	// Example: invalid 'id': value must be greater than or equal to 0
	Message string `json:"message,omitempty"`

	// status
	// Example: 400
	Status string `json:"status,omitempty"`
}

// Validate validates this security policies delete single security policy bad request body error
func (o *SecurityPoliciesDeleteSingleSecurityPolicyBadRequestBodyError) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this security policies delete single security policy bad request body error based on context it is used
func (o *SecurityPoliciesDeleteSingleSecurityPolicyBadRequestBodyError) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *SecurityPoliciesDeleteSingleSecurityPolicyBadRequestBodyError) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SecurityPoliciesDeleteSingleSecurityPolicyBadRequestBodyError) UnmarshalBinary(b []byte) error {
	var res SecurityPoliciesDeleteSingleSecurityPolicyBadRequestBodyError
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
SecurityPoliciesDeleteSingleSecurityPolicyInternalServerErrorBody security policies delete single security policy internal server error body
swagger:model SecurityPoliciesDeleteSingleSecurityPolicyInternalServerErrorBody
*/
type SecurityPoliciesDeleteSingleSecurityPolicyInternalServerErrorBody struct {

	// error
	Error *SecurityPoliciesDeleteSingleSecurityPolicyInternalServerErrorBodyError `json:"error,omitempty"`
}

// Validate validates this security policies delete single security policy internal server error body
func (o *SecurityPoliciesDeleteSingleSecurityPolicyInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateError(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *SecurityPoliciesDeleteSingleSecurityPolicyInternalServerErrorBody) validateError(formats strfmt.Registry) error {
	if swag.IsZero(o.Error) { // not required
		return nil
	}

	if o.Error != nil {
		if err := o.Error.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("securityPoliciesDeleteSingleSecurityPolicyInternalServerError" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("securityPoliciesDeleteSingleSecurityPolicyInternalServerError" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this security policies delete single security policy internal server error body based on the context it is used
func (o *SecurityPoliciesDeleteSingleSecurityPolicyInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateError(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *SecurityPoliciesDeleteSingleSecurityPolicyInternalServerErrorBody) contextValidateError(ctx context.Context, formats strfmt.Registry) error {

	if o.Error != nil {

		if swag.IsZero(o.Error) { // not required
			return nil
		}

		if err := o.Error.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("securityPoliciesDeleteSingleSecurityPolicyInternalServerError" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("securityPoliciesDeleteSingleSecurityPolicyInternalServerError" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *SecurityPoliciesDeleteSingleSecurityPolicyInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SecurityPoliciesDeleteSingleSecurityPolicyInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res SecurityPoliciesDeleteSingleSecurityPolicyInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
SecurityPoliciesDeleteSingleSecurityPolicyInternalServerErrorBodyError security policies delete single security policy internal server error body error
swagger:model SecurityPoliciesDeleteSingleSecurityPolicyInternalServerErrorBodyError
*/
type SecurityPoliciesDeleteSingleSecurityPolicyInternalServerErrorBodyError struct {

	// code
	// Example: INTERNAL
	Code string `json:"code,omitempty"`

	// message
	// Example: Internal Server Error
	Message string `json:"message,omitempty"`

	// status
	// Example: 500
	Status string `json:"status,omitempty"`
}

// Validate validates this security policies delete single security policy internal server error body error
func (o *SecurityPoliciesDeleteSingleSecurityPolicyInternalServerErrorBodyError) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this security policies delete single security policy internal server error body error based on context it is used
func (o *SecurityPoliciesDeleteSingleSecurityPolicyInternalServerErrorBodyError) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *SecurityPoliciesDeleteSingleSecurityPolicyInternalServerErrorBodyError) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SecurityPoliciesDeleteSingleSecurityPolicyInternalServerErrorBodyError) UnmarshalBinary(b []byte) error {
	var res SecurityPoliciesDeleteSingleSecurityPolicyInternalServerErrorBodyError
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
