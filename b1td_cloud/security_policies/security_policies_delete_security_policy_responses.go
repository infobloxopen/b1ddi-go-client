// Code generated by go-swagger; DO NOT EDIT.

package security_policies

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// SecurityPoliciesDeleteSecurityPolicyReader is a Reader for the SecurityPoliciesDeleteSecurityPolicy structure.
type SecurityPoliciesDeleteSecurityPolicyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SecurityPoliciesDeleteSecurityPolicyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewSecurityPoliciesDeleteSecurityPolicyNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSecurityPoliciesDeleteSecurityPolicyBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSecurityPoliciesDeleteSecurityPolicyInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /security_policies] security_policiesDeleteSecurityPolicy", response, response.Code())
	}
}

// NewSecurityPoliciesDeleteSecurityPolicyNoContent creates a SecurityPoliciesDeleteSecurityPolicyNoContent with default headers values
func NewSecurityPoliciesDeleteSecurityPolicyNoContent() *SecurityPoliciesDeleteSecurityPolicyNoContent {
	return &SecurityPoliciesDeleteSecurityPolicyNoContent{}
}

/*
SecurityPoliciesDeleteSecurityPolicyNoContent describes a response with status code 204, with default header values.

No Content
*/
type SecurityPoliciesDeleteSecurityPolicyNoContent struct {
}

// IsSuccess returns true when this security policies delete security policy no content response has a 2xx status code
func (o *SecurityPoliciesDeleteSecurityPolicyNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this security policies delete security policy no content response has a 3xx status code
func (o *SecurityPoliciesDeleteSecurityPolicyNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this security policies delete security policy no content response has a 4xx status code
func (o *SecurityPoliciesDeleteSecurityPolicyNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this security policies delete security policy no content response has a 5xx status code
func (o *SecurityPoliciesDeleteSecurityPolicyNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this security policies delete security policy no content response a status code equal to that given
func (o *SecurityPoliciesDeleteSecurityPolicyNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the security policies delete security policy no content response
func (o *SecurityPoliciesDeleteSecurityPolicyNoContent) Code() int {
	return 204
}

func (o *SecurityPoliciesDeleteSecurityPolicyNoContent) Error() string {
	return fmt.Sprintf("[DELETE /security_policies][%d] securityPoliciesDeleteSecurityPolicyNoContent ", 204)
}

func (o *SecurityPoliciesDeleteSecurityPolicyNoContent) String() string {
	return fmt.Sprintf("[DELETE /security_policies][%d] securityPoliciesDeleteSecurityPolicyNoContent ", 204)
}

func (o *SecurityPoliciesDeleteSecurityPolicyNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSecurityPoliciesDeleteSecurityPolicyBadRequest creates a SecurityPoliciesDeleteSecurityPolicyBadRequest with default headers values
func NewSecurityPoliciesDeleteSecurityPolicyBadRequest() *SecurityPoliciesDeleteSecurityPolicyBadRequest {
	return &SecurityPoliciesDeleteSecurityPolicyBadRequest{}
}

/*
	SecurityPoliciesDeleteSecurityPolicyBadRequest describes a response with status code 400, with default header values.

- 'ids' value must be non-empty
- 'ids' value must contain unique elements
- 'ids' value must contain values that are greater than or equal to zero
- 'ids' value must contain existing security policy identifiers
- default security policy cannot be deleted
*/
type SecurityPoliciesDeleteSecurityPolicyBadRequest struct {
	Payload *SecurityPoliciesDeleteSecurityPolicyBadRequestBody
}

// IsSuccess returns true when this security policies delete security policy bad request response has a 2xx status code
func (o *SecurityPoliciesDeleteSecurityPolicyBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this security policies delete security policy bad request response has a 3xx status code
func (o *SecurityPoliciesDeleteSecurityPolicyBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this security policies delete security policy bad request response has a 4xx status code
func (o *SecurityPoliciesDeleteSecurityPolicyBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this security policies delete security policy bad request response has a 5xx status code
func (o *SecurityPoliciesDeleteSecurityPolicyBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this security policies delete security policy bad request response a status code equal to that given
func (o *SecurityPoliciesDeleteSecurityPolicyBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the security policies delete security policy bad request response
func (o *SecurityPoliciesDeleteSecurityPolicyBadRequest) Code() int {
	return 400
}

func (o *SecurityPoliciesDeleteSecurityPolicyBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /security_policies][%d] securityPoliciesDeleteSecurityPolicyBadRequest  %+v", 400, o.Payload)
}

func (o *SecurityPoliciesDeleteSecurityPolicyBadRequest) String() string {
	return fmt.Sprintf("[DELETE /security_policies][%d] securityPoliciesDeleteSecurityPolicyBadRequest  %+v", 400, o.Payload)
}

func (o *SecurityPoliciesDeleteSecurityPolicyBadRequest) GetPayload() *SecurityPoliciesDeleteSecurityPolicyBadRequestBody {
	return o.Payload
}

func (o *SecurityPoliciesDeleteSecurityPolicyBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(SecurityPoliciesDeleteSecurityPolicyBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSecurityPoliciesDeleteSecurityPolicyInternalServerError creates a SecurityPoliciesDeleteSecurityPolicyInternalServerError with default headers values
func NewSecurityPoliciesDeleteSecurityPolicyInternalServerError() *SecurityPoliciesDeleteSecurityPolicyInternalServerError {
	return &SecurityPoliciesDeleteSecurityPolicyInternalServerError{}
}

/*
	SecurityPoliciesDeleteSecurityPolicyInternalServerError describes a response with status code 500, with default header values.

- Internal server error occurred
*/
type SecurityPoliciesDeleteSecurityPolicyInternalServerError struct {
	Payload *SecurityPoliciesDeleteSecurityPolicyInternalServerErrorBody
}

// IsSuccess returns true when this security policies delete security policy internal server error response has a 2xx status code
func (o *SecurityPoliciesDeleteSecurityPolicyInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this security policies delete security policy internal server error response has a 3xx status code
func (o *SecurityPoliciesDeleteSecurityPolicyInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this security policies delete security policy internal server error response has a 4xx status code
func (o *SecurityPoliciesDeleteSecurityPolicyInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this security policies delete security policy internal server error response has a 5xx status code
func (o *SecurityPoliciesDeleteSecurityPolicyInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this security policies delete security policy internal server error response a status code equal to that given
func (o *SecurityPoliciesDeleteSecurityPolicyInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the security policies delete security policy internal server error response
func (o *SecurityPoliciesDeleteSecurityPolicyInternalServerError) Code() int {
	return 500
}

func (o *SecurityPoliciesDeleteSecurityPolicyInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /security_policies][%d] securityPoliciesDeleteSecurityPolicyInternalServerError  %+v", 500, o.Payload)
}

func (o *SecurityPoliciesDeleteSecurityPolicyInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /security_policies][%d] securityPoliciesDeleteSecurityPolicyInternalServerError  %+v", 500, o.Payload)
}

func (o *SecurityPoliciesDeleteSecurityPolicyInternalServerError) GetPayload() *SecurityPoliciesDeleteSecurityPolicyInternalServerErrorBody {
	return o.Payload
}

func (o *SecurityPoliciesDeleteSecurityPolicyInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(SecurityPoliciesDeleteSecurityPolicyInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
SecurityPoliciesDeleteSecurityPolicyBadRequestBody security policies delete security policy bad request body
swagger:model SecurityPoliciesDeleteSecurityPolicyBadRequestBody
*/
type SecurityPoliciesDeleteSecurityPolicyBadRequestBody struct {

	// error
	Error *SecurityPoliciesDeleteSecurityPolicyBadRequestBodyError `json:"error,omitempty"`
}

// Validate validates this security policies delete security policy bad request body
func (o *SecurityPoliciesDeleteSecurityPolicyBadRequestBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateError(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *SecurityPoliciesDeleteSecurityPolicyBadRequestBody) validateError(formats strfmt.Registry) error {
	if swag.IsZero(o.Error) { // not required
		return nil
	}

	if o.Error != nil {
		if err := o.Error.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("securityPoliciesDeleteSecurityPolicyBadRequest" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("securityPoliciesDeleteSecurityPolicyBadRequest" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this security policies delete security policy bad request body based on the context it is used
func (o *SecurityPoliciesDeleteSecurityPolicyBadRequestBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateError(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *SecurityPoliciesDeleteSecurityPolicyBadRequestBody) contextValidateError(ctx context.Context, formats strfmt.Registry) error {

	if o.Error != nil {

		if swag.IsZero(o.Error) { // not required
			return nil
		}

		if err := o.Error.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("securityPoliciesDeleteSecurityPolicyBadRequest" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("securityPoliciesDeleteSecurityPolicyBadRequest" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *SecurityPoliciesDeleteSecurityPolicyBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SecurityPoliciesDeleteSecurityPolicyBadRequestBody) UnmarshalBinary(b []byte) error {
	var res SecurityPoliciesDeleteSecurityPolicyBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
SecurityPoliciesDeleteSecurityPolicyBadRequestBodyError security policies delete security policy bad request body error
swagger:model SecurityPoliciesDeleteSecurityPolicyBadRequestBodyError
*/
type SecurityPoliciesDeleteSecurityPolicyBadRequestBodyError struct {

	// code
	// Example: INVALID_ARGUMENT
	Code string `json:"code,omitempty"`

	// message
	// Example: 'ids' must not be empty
	Message string `json:"message,omitempty"`

	// status
	// Example: 400
	Status string `json:"status,omitempty"`
}

// Validate validates this security policies delete security policy bad request body error
func (o *SecurityPoliciesDeleteSecurityPolicyBadRequestBodyError) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this security policies delete security policy bad request body error based on context it is used
func (o *SecurityPoliciesDeleteSecurityPolicyBadRequestBodyError) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *SecurityPoliciesDeleteSecurityPolicyBadRequestBodyError) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SecurityPoliciesDeleteSecurityPolicyBadRequestBodyError) UnmarshalBinary(b []byte) error {
	var res SecurityPoliciesDeleteSecurityPolicyBadRequestBodyError
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
SecurityPoliciesDeleteSecurityPolicyInternalServerErrorBody security policies delete security policy internal server error body
swagger:model SecurityPoliciesDeleteSecurityPolicyInternalServerErrorBody
*/
type SecurityPoliciesDeleteSecurityPolicyInternalServerErrorBody struct {

	// error
	Error *SecurityPoliciesDeleteSecurityPolicyInternalServerErrorBodyError `json:"error,omitempty"`
}

// Validate validates this security policies delete security policy internal server error body
func (o *SecurityPoliciesDeleteSecurityPolicyInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateError(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *SecurityPoliciesDeleteSecurityPolicyInternalServerErrorBody) validateError(formats strfmt.Registry) error {
	if swag.IsZero(o.Error) { // not required
		return nil
	}

	if o.Error != nil {
		if err := o.Error.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("securityPoliciesDeleteSecurityPolicyInternalServerError" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("securityPoliciesDeleteSecurityPolicyInternalServerError" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this security policies delete security policy internal server error body based on the context it is used
func (o *SecurityPoliciesDeleteSecurityPolicyInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateError(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *SecurityPoliciesDeleteSecurityPolicyInternalServerErrorBody) contextValidateError(ctx context.Context, formats strfmt.Registry) error {

	if o.Error != nil {

		if swag.IsZero(o.Error) { // not required
			return nil
		}

		if err := o.Error.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("securityPoliciesDeleteSecurityPolicyInternalServerError" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("securityPoliciesDeleteSecurityPolicyInternalServerError" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *SecurityPoliciesDeleteSecurityPolicyInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SecurityPoliciesDeleteSecurityPolicyInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res SecurityPoliciesDeleteSecurityPolicyInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
SecurityPoliciesDeleteSecurityPolicyInternalServerErrorBodyError security policies delete security policy internal server error body error
swagger:model SecurityPoliciesDeleteSecurityPolicyInternalServerErrorBodyError
*/
type SecurityPoliciesDeleteSecurityPolicyInternalServerErrorBodyError struct {

	// code
	// Example: INTERNAL
	Code string `json:"code,omitempty"`

	// message
	// Example: Internal Server Error
	Message string `json:"message,omitempty"`

	// status
	// Example: 500
	Status string `json:"status,omitempty"`
}

// Validate validates this security policies delete security policy internal server error body error
func (o *SecurityPoliciesDeleteSecurityPolicyInternalServerErrorBodyError) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this security policies delete security policy internal server error body error based on context it is used
func (o *SecurityPoliciesDeleteSecurityPolicyInternalServerErrorBodyError) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *SecurityPoliciesDeleteSecurityPolicyInternalServerErrorBodyError) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SecurityPoliciesDeleteSecurityPolicyInternalServerErrorBodyError) UnmarshalBinary(b []byte) error {
	var res SecurityPoliciesDeleteSecurityPolicyInternalServerErrorBodyError
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
