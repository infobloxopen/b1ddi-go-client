// Code generated by go-swagger; DO NOT EDIT.

package security_policies

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/infobloxopen/b1ddi-go-client/models"
)

// SecurityPoliciesReadSecurityPolicyReader is a Reader for the SecurityPoliciesReadSecurityPolicy structure.
type SecurityPoliciesReadSecurityPolicyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SecurityPoliciesReadSecurityPolicyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSecurityPoliciesReadSecurityPolicyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewSecurityPoliciesReadSecurityPolicyNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSecurityPoliciesReadSecurityPolicyInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /security_policies/{id}] security_policiesReadSecurityPolicy", response, response.Code())
	}
}

// NewSecurityPoliciesReadSecurityPolicyOK creates a SecurityPoliciesReadSecurityPolicyOK with default headers values
func NewSecurityPoliciesReadSecurityPolicyOK() *SecurityPoliciesReadSecurityPolicyOK {
	return &SecurityPoliciesReadSecurityPolicyOK{}
}

/*
SecurityPoliciesReadSecurityPolicyOK describes a response with status code 200, with default header values.

GET operation response
*/
type SecurityPoliciesReadSecurityPolicyOK struct {
	Payload *models.AtcfwSecurityPolicyReadResponse
}

// IsSuccess returns true when this security policies read security policy o k response has a 2xx status code
func (o *SecurityPoliciesReadSecurityPolicyOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this security policies read security policy o k response has a 3xx status code
func (o *SecurityPoliciesReadSecurityPolicyOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this security policies read security policy o k response has a 4xx status code
func (o *SecurityPoliciesReadSecurityPolicyOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this security policies read security policy o k response has a 5xx status code
func (o *SecurityPoliciesReadSecurityPolicyOK) IsServerError() bool {
	return false
}

// IsCode returns true when this security policies read security policy o k response a status code equal to that given
func (o *SecurityPoliciesReadSecurityPolicyOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the security policies read security policy o k response
func (o *SecurityPoliciesReadSecurityPolicyOK) Code() int {
	return 200
}

func (o *SecurityPoliciesReadSecurityPolicyOK) Error() string {
	return fmt.Sprintf("[GET /security_policies/{id}][%d] securityPoliciesReadSecurityPolicyOK  %+v", 200, o.Payload)
}

func (o *SecurityPoliciesReadSecurityPolicyOK) String() string {
	return fmt.Sprintf("[GET /security_policies/{id}][%d] securityPoliciesReadSecurityPolicyOK  %+v", 200, o.Payload)
}

func (o *SecurityPoliciesReadSecurityPolicyOK) GetPayload() *models.AtcfwSecurityPolicyReadResponse {
	return o.Payload
}

func (o *SecurityPoliciesReadSecurityPolicyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AtcfwSecurityPolicyReadResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSecurityPoliciesReadSecurityPolicyNotFound creates a SecurityPoliciesReadSecurityPolicyNotFound with default headers values
func NewSecurityPoliciesReadSecurityPolicyNotFound() *SecurityPoliciesReadSecurityPolicyNotFound {
	return &SecurityPoliciesReadSecurityPolicyNotFound{}
}

/*
	SecurityPoliciesReadSecurityPolicyNotFound describes a response with status code 404, with default header values.

- 'id' value must contain existing security policy identifier
*/
type SecurityPoliciesReadSecurityPolicyNotFound struct {
	Payload *SecurityPoliciesReadSecurityPolicyNotFoundBody
}

// IsSuccess returns true when this security policies read security policy not found response has a 2xx status code
func (o *SecurityPoliciesReadSecurityPolicyNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this security policies read security policy not found response has a 3xx status code
func (o *SecurityPoliciesReadSecurityPolicyNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this security policies read security policy not found response has a 4xx status code
func (o *SecurityPoliciesReadSecurityPolicyNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this security policies read security policy not found response has a 5xx status code
func (o *SecurityPoliciesReadSecurityPolicyNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this security policies read security policy not found response a status code equal to that given
func (o *SecurityPoliciesReadSecurityPolicyNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the security policies read security policy not found response
func (o *SecurityPoliciesReadSecurityPolicyNotFound) Code() int {
	return 404
}

func (o *SecurityPoliciesReadSecurityPolicyNotFound) Error() string {
	return fmt.Sprintf("[GET /security_policies/{id}][%d] securityPoliciesReadSecurityPolicyNotFound  %+v", 404, o.Payload)
}

func (o *SecurityPoliciesReadSecurityPolicyNotFound) String() string {
	return fmt.Sprintf("[GET /security_policies/{id}][%d] securityPoliciesReadSecurityPolicyNotFound  %+v", 404, o.Payload)
}

func (o *SecurityPoliciesReadSecurityPolicyNotFound) GetPayload() *SecurityPoliciesReadSecurityPolicyNotFoundBody {
	return o.Payload
}

func (o *SecurityPoliciesReadSecurityPolicyNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(SecurityPoliciesReadSecurityPolicyNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSecurityPoliciesReadSecurityPolicyInternalServerError creates a SecurityPoliciesReadSecurityPolicyInternalServerError with default headers values
func NewSecurityPoliciesReadSecurityPolicyInternalServerError() *SecurityPoliciesReadSecurityPolicyInternalServerError {
	return &SecurityPoliciesReadSecurityPolicyInternalServerError{}
}

/*
	SecurityPoliciesReadSecurityPolicyInternalServerError describes a response with status code 500, with default header values.

- Internal server error occurred
*/
type SecurityPoliciesReadSecurityPolicyInternalServerError struct {
	Payload *SecurityPoliciesReadSecurityPolicyInternalServerErrorBody
}

// IsSuccess returns true when this security policies read security policy internal server error response has a 2xx status code
func (o *SecurityPoliciesReadSecurityPolicyInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this security policies read security policy internal server error response has a 3xx status code
func (o *SecurityPoliciesReadSecurityPolicyInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this security policies read security policy internal server error response has a 4xx status code
func (o *SecurityPoliciesReadSecurityPolicyInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this security policies read security policy internal server error response has a 5xx status code
func (o *SecurityPoliciesReadSecurityPolicyInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this security policies read security policy internal server error response a status code equal to that given
func (o *SecurityPoliciesReadSecurityPolicyInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the security policies read security policy internal server error response
func (o *SecurityPoliciesReadSecurityPolicyInternalServerError) Code() int {
	return 500
}

func (o *SecurityPoliciesReadSecurityPolicyInternalServerError) Error() string {
	return fmt.Sprintf("[GET /security_policies/{id}][%d] securityPoliciesReadSecurityPolicyInternalServerError  %+v", 500, o.Payload)
}

func (o *SecurityPoliciesReadSecurityPolicyInternalServerError) String() string {
	return fmt.Sprintf("[GET /security_policies/{id}][%d] securityPoliciesReadSecurityPolicyInternalServerError  %+v", 500, o.Payload)
}

func (o *SecurityPoliciesReadSecurityPolicyInternalServerError) GetPayload() *SecurityPoliciesReadSecurityPolicyInternalServerErrorBody {
	return o.Payload
}

func (o *SecurityPoliciesReadSecurityPolicyInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(SecurityPoliciesReadSecurityPolicyInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
SecurityPoliciesReadSecurityPolicyInternalServerErrorBody security policies read security policy internal server error body
swagger:model SecurityPoliciesReadSecurityPolicyInternalServerErrorBody
*/
type SecurityPoliciesReadSecurityPolicyInternalServerErrorBody struct {

	// error
	Error *SecurityPoliciesReadSecurityPolicyInternalServerErrorBodyError `json:"error,omitempty"`
}

// Validate validates this security policies read security policy internal server error body
func (o *SecurityPoliciesReadSecurityPolicyInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateError(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *SecurityPoliciesReadSecurityPolicyInternalServerErrorBody) validateError(formats strfmt.Registry) error {
	if swag.IsZero(o.Error) { // not required
		return nil
	}

	if o.Error != nil {
		if err := o.Error.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("securityPoliciesReadSecurityPolicyInternalServerError" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("securityPoliciesReadSecurityPolicyInternalServerError" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this security policies read security policy internal server error body based on the context it is used
func (o *SecurityPoliciesReadSecurityPolicyInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateError(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *SecurityPoliciesReadSecurityPolicyInternalServerErrorBody) contextValidateError(ctx context.Context, formats strfmt.Registry) error {

	if o.Error != nil {

		if swag.IsZero(o.Error) { // not required
			return nil
		}

		if err := o.Error.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("securityPoliciesReadSecurityPolicyInternalServerError" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("securityPoliciesReadSecurityPolicyInternalServerError" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *SecurityPoliciesReadSecurityPolicyInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SecurityPoliciesReadSecurityPolicyInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res SecurityPoliciesReadSecurityPolicyInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
SecurityPoliciesReadSecurityPolicyInternalServerErrorBodyError security policies read security policy internal server error body error
swagger:model SecurityPoliciesReadSecurityPolicyInternalServerErrorBodyError
*/
type SecurityPoliciesReadSecurityPolicyInternalServerErrorBodyError struct {

	// code
	// Example: INTERNAL
	Code string `json:"code,omitempty"`

	// message
	// Example: Internal Server Error
	Message string `json:"message,omitempty"`

	// status
	// Example: 500
	Status string `json:"status,omitempty"`
}

// Validate validates this security policies read security policy internal server error body error
func (o *SecurityPoliciesReadSecurityPolicyInternalServerErrorBodyError) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this security policies read security policy internal server error body error based on context it is used
func (o *SecurityPoliciesReadSecurityPolicyInternalServerErrorBodyError) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *SecurityPoliciesReadSecurityPolicyInternalServerErrorBodyError) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SecurityPoliciesReadSecurityPolicyInternalServerErrorBodyError) UnmarshalBinary(b []byte) error {
	var res SecurityPoliciesReadSecurityPolicyInternalServerErrorBodyError
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
SecurityPoliciesReadSecurityPolicyNotFoundBody security policies read security policy not found body
swagger:model SecurityPoliciesReadSecurityPolicyNotFoundBody
*/
type SecurityPoliciesReadSecurityPolicyNotFoundBody struct {

	// error
	Error *SecurityPoliciesReadSecurityPolicyNotFoundBodyError `json:"error,omitempty"`
}

// Validate validates this security policies read security policy not found body
func (o *SecurityPoliciesReadSecurityPolicyNotFoundBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateError(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *SecurityPoliciesReadSecurityPolicyNotFoundBody) validateError(formats strfmt.Registry) error {
	if swag.IsZero(o.Error) { // not required
		return nil
	}

	if o.Error != nil {
		if err := o.Error.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("securityPoliciesReadSecurityPolicyNotFound" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("securityPoliciesReadSecurityPolicyNotFound" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this security policies read security policy not found body based on the context it is used
func (o *SecurityPoliciesReadSecurityPolicyNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateError(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *SecurityPoliciesReadSecurityPolicyNotFoundBody) contextValidateError(ctx context.Context, formats strfmt.Registry) error {

	if o.Error != nil {

		if swag.IsZero(o.Error) { // not required
			return nil
		}

		if err := o.Error.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("securityPoliciesReadSecurityPolicyNotFound" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("securityPoliciesReadSecurityPolicyNotFound" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *SecurityPoliciesReadSecurityPolicyNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SecurityPoliciesReadSecurityPolicyNotFoundBody) UnmarshalBinary(b []byte) error {
	var res SecurityPoliciesReadSecurityPolicyNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
SecurityPoliciesReadSecurityPolicyNotFoundBodyError security policies read security policy not found body error
swagger:model SecurityPoliciesReadSecurityPolicyNotFoundBodyError
*/
type SecurityPoliciesReadSecurityPolicyNotFoundBodyError struct {

	// code
	// Example: NOT_FOUND
	Code string `json:"code,omitempty"`

	// message
	// Example: Security Policy does not exist
	Message string `json:"message,omitempty"`

	// status
	// Example: 404
	Status string `json:"status,omitempty"`
}

// Validate validates this security policies read security policy not found body error
func (o *SecurityPoliciesReadSecurityPolicyNotFoundBodyError) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this security policies read security policy not found body error based on context it is used
func (o *SecurityPoliciesReadSecurityPolicyNotFoundBodyError) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *SecurityPoliciesReadSecurityPolicyNotFoundBodyError) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SecurityPoliciesReadSecurityPolicyNotFoundBodyError) UnmarshalBinary(b []byte) error {
	var res SecurityPoliciesReadSecurityPolicyNotFoundBodyError
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
