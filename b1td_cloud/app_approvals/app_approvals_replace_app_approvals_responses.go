// Code generated by go-swagger; DO NOT EDIT.

package app_approvals

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/infobloxopen/b1ddi-go-client/models"
)

// AppApprovalsReplaceAppApprovalsReader is a Reader for the AppApprovalsReplaceAppApprovals structure.
type AppApprovalsReplaceAppApprovalsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AppApprovalsReplaceAppApprovalsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewAppApprovalsReplaceAppApprovalsCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewAppApprovalsReplaceAppApprovalsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /app_approvals] app_approvalsReplaceAppApprovals", response, response.Code())
	}
}

// NewAppApprovalsReplaceAppApprovalsCreated creates a AppApprovalsReplaceAppApprovalsCreated with default headers values
func NewAppApprovalsReplaceAppApprovalsCreated() *AppApprovalsReplaceAppApprovalsCreated {
	return &AppApprovalsReplaceAppApprovalsCreated{}
}

/*
AppApprovalsReplaceAppApprovalsCreated describes a response with status code 201, with default header values.

PUT operation response
*/
type AppApprovalsReplaceAppApprovalsCreated struct {
	Payload *models.AtcfwAppApprovalMultiResponse
}

// IsSuccess returns true when this app approvals replace app approvals created response has a 2xx status code
func (o *AppApprovalsReplaceAppApprovalsCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this app approvals replace app approvals created response has a 3xx status code
func (o *AppApprovalsReplaceAppApprovalsCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this app approvals replace app approvals created response has a 4xx status code
func (o *AppApprovalsReplaceAppApprovalsCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this app approvals replace app approvals created response has a 5xx status code
func (o *AppApprovalsReplaceAppApprovalsCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this app approvals replace app approvals created response a status code equal to that given
func (o *AppApprovalsReplaceAppApprovalsCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the app approvals replace app approvals created response
func (o *AppApprovalsReplaceAppApprovalsCreated) Code() int {
	return 201
}

func (o *AppApprovalsReplaceAppApprovalsCreated) Error() string {
	return fmt.Sprintf("[PUT /app_approvals][%d] appApprovalsReplaceAppApprovalsCreated  %+v", 201, o.Payload)
}

func (o *AppApprovalsReplaceAppApprovalsCreated) String() string {
	return fmt.Sprintf("[PUT /app_approvals][%d] appApprovalsReplaceAppApprovalsCreated  %+v", 201, o.Payload)
}

func (o *AppApprovalsReplaceAppApprovalsCreated) GetPayload() *models.AtcfwAppApprovalMultiResponse {
	return o.Payload
}

func (o *AppApprovalsReplaceAppApprovalsCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AtcfwAppApprovalMultiResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAppApprovalsReplaceAppApprovalsInternalServerError creates a AppApprovalsReplaceAppApprovalsInternalServerError with default headers values
func NewAppApprovalsReplaceAppApprovalsInternalServerError() *AppApprovalsReplaceAppApprovalsInternalServerError {
	return &AppApprovalsReplaceAppApprovalsInternalServerError{}
}

/*
	AppApprovalsReplaceAppApprovalsInternalServerError describes a response with status code 500, with default header values.

- Internal server error occurred
*/
type AppApprovalsReplaceAppApprovalsInternalServerError struct {
	Payload *AppApprovalsReplaceAppApprovalsInternalServerErrorBody
}

// IsSuccess returns true when this app approvals replace app approvals internal server error response has a 2xx status code
func (o *AppApprovalsReplaceAppApprovalsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this app approvals replace app approvals internal server error response has a 3xx status code
func (o *AppApprovalsReplaceAppApprovalsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this app approvals replace app approvals internal server error response has a 4xx status code
func (o *AppApprovalsReplaceAppApprovalsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this app approvals replace app approvals internal server error response has a 5xx status code
func (o *AppApprovalsReplaceAppApprovalsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this app approvals replace app approvals internal server error response a status code equal to that given
func (o *AppApprovalsReplaceAppApprovalsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the app approvals replace app approvals internal server error response
func (o *AppApprovalsReplaceAppApprovalsInternalServerError) Code() int {
	return 500
}

func (o *AppApprovalsReplaceAppApprovalsInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /app_approvals][%d] appApprovalsReplaceAppApprovalsInternalServerError  %+v", 500, o.Payload)
}

func (o *AppApprovalsReplaceAppApprovalsInternalServerError) String() string {
	return fmt.Sprintf("[PUT /app_approvals][%d] appApprovalsReplaceAppApprovalsInternalServerError  %+v", 500, o.Payload)
}

func (o *AppApprovalsReplaceAppApprovalsInternalServerError) GetPayload() *AppApprovalsReplaceAppApprovalsInternalServerErrorBody {
	return o.Payload
}

func (o *AppApprovalsReplaceAppApprovalsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(AppApprovalsReplaceAppApprovalsInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
AppApprovalsReplaceAppApprovalsInternalServerErrorBody app approvals replace app approvals internal server error body
swagger:model AppApprovalsReplaceAppApprovalsInternalServerErrorBody
*/
type AppApprovalsReplaceAppApprovalsInternalServerErrorBody struct {

	// error
	Error *AppApprovalsReplaceAppApprovalsInternalServerErrorBodyError `json:"error,omitempty"`
}

// Validate validates this app approvals replace app approvals internal server error body
func (o *AppApprovalsReplaceAppApprovalsInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateError(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *AppApprovalsReplaceAppApprovalsInternalServerErrorBody) validateError(formats strfmt.Registry) error {
	if swag.IsZero(o.Error) { // not required
		return nil
	}

	if o.Error != nil {
		if err := o.Error.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("appApprovalsReplaceAppApprovalsInternalServerError" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("appApprovalsReplaceAppApprovalsInternalServerError" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this app approvals replace app approvals internal server error body based on the context it is used
func (o *AppApprovalsReplaceAppApprovalsInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateError(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *AppApprovalsReplaceAppApprovalsInternalServerErrorBody) contextValidateError(ctx context.Context, formats strfmt.Registry) error {

	if o.Error != nil {

		if swag.IsZero(o.Error) { // not required
			return nil
		}

		if err := o.Error.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("appApprovalsReplaceAppApprovalsInternalServerError" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("appApprovalsReplaceAppApprovalsInternalServerError" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *AppApprovalsReplaceAppApprovalsInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AppApprovalsReplaceAppApprovalsInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res AppApprovalsReplaceAppApprovalsInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
AppApprovalsReplaceAppApprovalsInternalServerErrorBodyError app approvals replace app approvals internal server error body error
swagger:model AppApprovalsReplaceAppApprovalsInternalServerErrorBodyError
*/
type AppApprovalsReplaceAppApprovalsInternalServerErrorBodyError struct {

	// code
	// Example: INTERNAL
	Code string `json:"code,omitempty"`

	// message
	// Example: Internal Server Error
	Message string `json:"message,omitempty"`

	// status
	// Example: 500
	Status string `json:"status,omitempty"`
}

// Validate validates this app approvals replace app approvals internal server error body error
func (o *AppApprovalsReplaceAppApprovalsInternalServerErrorBodyError) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this app approvals replace app approvals internal server error body error based on context it is used
func (o *AppApprovalsReplaceAppApprovalsInternalServerErrorBodyError) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AppApprovalsReplaceAppApprovalsInternalServerErrorBodyError) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AppApprovalsReplaceAppApprovalsInternalServerErrorBodyError) UnmarshalBinary(b []byte) error {
	var res AppApprovalsReplaceAppApprovalsInternalServerErrorBodyError
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
