// Code generated by go-swagger; DO NOT EDIT.

package access_codes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// AccessCodesDeleteAccessCodesReader is a Reader for the AccessCodesDeleteAccessCodes structure.
type AccessCodesDeleteAccessCodesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AccessCodesDeleteAccessCodesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewAccessCodesDeleteAccessCodesNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAccessCodesDeleteAccessCodesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAccessCodesDeleteAccessCodesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /access_codes] access_codesDeleteAccessCodes", response, response.Code())
	}
}

// NewAccessCodesDeleteAccessCodesNoContent creates a AccessCodesDeleteAccessCodesNoContent with default headers values
func NewAccessCodesDeleteAccessCodesNoContent() *AccessCodesDeleteAccessCodesNoContent {
	return &AccessCodesDeleteAccessCodesNoContent{}
}

/*
AccessCodesDeleteAccessCodesNoContent describes a response with status code 204, with default header values.

No Content
*/
type AccessCodesDeleteAccessCodesNoContent struct {
}

// IsSuccess returns true when this access codes delete access codes no content response has a 2xx status code
func (o *AccessCodesDeleteAccessCodesNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this access codes delete access codes no content response has a 3xx status code
func (o *AccessCodesDeleteAccessCodesNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this access codes delete access codes no content response has a 4xx status code
func (o *AccessCodesDeleteAccessCodesNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this access codes delete access codes no content response has a 5xx status code
func (o *AccessCodesDeleteAccessCodesNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this access codes delete access codes no content response a status code equal to that given
func (o *AccessCodesDeleteAccessCodesNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the access codes delete access codes no content response
func (o *AccessCodesDeleteAccessCodesNoContent) Code() int {
	return 204
}

func (o *AccessCodesDeleteAccessCodesNoContent) Error() string {
	return fmt.Sprintf("[DELETE /access_codes][%d] accessCodesDeleteAccessCodesNoContent ", 204)
}

func (o *AccessCodesDeleteAccessCodesNoContent) String() string {
	return fmt.Sprintf("[DELETE /access_codes][%d] accessCodesDeleteAccessCodesNoContent ", 204)
}

func (o *AccessCodesDeleteAccessCodesNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAccessCodesDeleteAccessCodesBadRequest creates a AccessCodesDeleteAccessCodesBadRequest with default headers values
func NewAccessCodesDeleteAccessCodesBadRequest() *AccessCodesDeleteAccessCodesBadRequest {
	return &AccessCodesDeleteAccessCodesBadRequest{}
}

/*
	AccessCodesDeleteAccessCodesBadRequest describes a response with status code 400, with default header values.

- 'ids' value must contain unique elements
- 'ids' value must contain existing bypass code key
- Cannot delete bypass code assigned to policy
*/
type AccessCodesDeleteAccessCodesBadRequest struct {
	Payload *AccessCodesDeleteAccessCodesBadRequestBody
}

// IsSuccess returns true when this access codes delete access codes bad request response has a 2xx status code
func (o *AccessCodesDeleteAccessCodesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this access codes delete access codes bad request response has a 3xx status code
func (o *AccessCodesDeleteAccessCodesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this access codes delete access codes bad request response has a 4xx status code
func (o *AccessCodesDeleteAccessCodesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this access codes delete access codes bad request response has a 5xx status code
func (o *AccessCodesDeleteAccessCodesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this access codes delete access codes bad request response a status code equal to that given
func (o *AccessCodesDeleteAccessCodesBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the access codes delete access codes bad request response
func (o *AccessCodesDeleteAccessCodesBadRequest) Code() int {
	return 400
}

func (o *AccessCodesDeleteAccessCodesBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /access_codes][%d] accessCodesDeleteAccessCodesBadRequest  %+v", 400, o.Payload)
}

func (o *AccessCodesDeleteAccessCodesBadRequest) String() string {
	return fmt.Sprintf("[DELETE /access_codes][%d] accessCodesDeleteAccessCodesBadRequest  %+v", 400, o.Payload)
}

func (o *AccessCodesDeleteAccessCodesBadRequest) GetPayload() *AccessCodesDeleteAccessCodesBadRequestBody {
	return o.Payload
}

func (o *AccessCodesDeleteAccessCodesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(AccessCodesDeleteAccessCodesBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccessCodesDeleteAccessCodesInternalServerError creates a AccessCodesDeleteAccessCodesInternalServerError with default headers values
func NewAccessCodesDeleteAccessCodesInternalServerError() *AccessCodesDeleteAccessCodesInternalServerError {
	return &AccessCodesDeleteAccessCodesInternalServerError{}
}

/*
	AccessCodesDeleteAccessCodesInternalServerError describes a response with status code 500, with default header values.

- Internal server error occurred
*/
type AccessCodesDeleteAccessCodesInternalServerError struct {
	Payload *AccessCodesDeleteAccessCodesInternalServerErrorBody
}

// IsSuccess returns true when this access codes delete access codes internal server error response has a 2xx status code
func (o *AccessCodesDeleteAccessCodesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this access codes delete access codes internal server error response has a 3xx status code
func (o *AccessCodesDeleteAccessCodesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this access codes delete access codes internal server error response has a 4xx status code
func (o *AccessCodesDeleteAccessCodesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this access codes delete access codes internal server error response has a 5xx status code
func (o *AccessCodesDeleteAccessCodesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this access codes delete access codes internal server error response a status code equal to that given
func (o *AccessCodesDeleteAccessCodesInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the access codes delete access codes internal server error response
func (o *AccessCodesDeleteAccessCodesInternalServerError) Code() int {
	return 500
}

func (o *AccessCodesDeleteAccessCodesInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /access_codes][%d] accessCodesDeleteAccessCodesInternalServerError  %+v", 500, o.Payload)
}

func (o *AccessCodesDeleteAccessCodesInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /access_codes][%d] accessCodesDeleteAccessCodesInternalServerError  %+v", 500, o.Payload)
}

func (o *AccessCodesDeleteAccessCodesInternalServerError) GetPayload() *AccessCodesDeleteAccessCodesInternalServerErrorBody {
	return o.Payload
}

func (o *AccessCodesDeleteAccessCodesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(AccessCodesDeleteAccessCodesInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
AccessCodesDeleteAccessCodesBadRequestBody access codes delete access codes bad request body
swagger:model AccessCodesDeleteAccessCodesBadRequestBody
*/
type AccessCodesDeleteAccessCodesBadRequestBody struct {

	// error
	Error *AccessCodesDeleteAccessCodesBadRequestBodyError `json:"error,omitempty"`
}

// Validate validates this access codes delete access codes bad request body
func (o *AccessCodesDeleteAccessCodesBadRequestBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateError(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *AccessCodesDeleteAccessCodesBadRequestBody) validateError(formats strfmt.Registry) error {
	if swag.IsZero(o.Error) { // not required
		return nil
	}

	if o.Error != nil {
		if err := o.Error.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("accessCodesDeleteAccessCodesBadRequest" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("accessCodesDeleteAccessCodesBadRequest" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this access codes delete access codes bad request body based on the context it is used
func (o *AccessCodesDeleteAccessCodesBadRequestBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateError(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *AccessCodesDeleteAccessCodesBadRequestBody) contextValidateError(ctx context.Context, formats strfmt.Registry) error {

	if o.Error != nil {

		if swag.IsZero(o.Error) { // not required
			return nil
		}

		if err := o.Error.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("accessCodesDeleteAccessCodesBadRequest" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("accessCodesDeleteAccessCodesBadRequest" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *AccessCodesDeleteAccessCodesBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AccessCodesDeleteAccessCodesBadRequestBody) UnmarshalBinary(b []byte) error {
	var res AccessCodesDeleteAccessCodesBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
AccessCodesDeleteAccessCodesBadRequestBodyError access codes delete access codes bad request body error
swagger:model AccessCodesDeleteAccessCodesBadRequestBodyError
*/
type AccessCodesDeleteAccessCodesBadRequestBodyError struct {

	// code
	// Example: INVALID_ARGUMENT
	Code string `json:"code,omitempty"`

	// message
	// Example: 'ids' must not be empty
	Message string `json:"message,omitempty"`

	// status
	// Example: 400
	Status string `json:"status,omitempty"`
}

// Validate validates this access codes delete access codes bad request body error
func (o *AccessCodesDeleteAccessCodesBadRequestBodyError) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this access codes delete access codes bad request body error based on context it is used
func (o *AccessCodesDeleteAccessCodesBadRequestBodyError) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AccessCodesDeleteAccessCodesBadRequestBodyError) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AccessCodesDeleteAccessCodesBadRequestBodyError) UnmarshalBinary(b []byte) error {
	var res AccessCodesDeleteAccessCodesBadRequestBodyError
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
AccessCodesDeleteAccessCodesInternalServerErrorBody access codes delete access codes internal server error body
swagger:model AccessCodesDeleteAccessCodesInternalServerErrorBody
*/
type AccessCodesDeleteAccessCodesInternalServerErrorBody struct {

	// error
	Error *AccessCodesDeleteAccessCodesInternalServerErrorBodyError `json:"error,omitempty"`
}

// Validate validates this access codes delete access codes internal server error body
func (o *AccessCodesDeleteAccessCodesInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateError(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *AccessCodesDeleteAccessCodesInternalServerErrorBody) validateError(formats strfmt.Registry) error {
	if swag.IsZero(o.Error) { // not required
		return nil
	}

	if o.Error != nil {
		if err := o.Error.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("accessCodesDeleteAccessCodesInternalServerError" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("accessCodesDeleteAccessCodesInternalServerError" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this access codes delete access codes internal server error body based on the context it is used
func (o *AccessCodesDeleteAccessCodesInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateError(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *AccessCodesDeleteAccessCodesInternalServerErrorBody) contextValidateError(ctx context.Context, formats strfmt.Registry) error {

	if o.Error != nil {

		if swag.IsZero(o.Error) { // not required
			return nil
		}

		if err := o.Error.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("accessCodesDeleteAccessCodesInternalServerError" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("accessCodesDeleteAccessCodesInternalServerError" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *AccessCodesDeleteAccessCodesInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AccessCodesDeleteAccessCodesInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res AccessCodesDeleteAccessCodesInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
AccessCodesDeleteAccessCodesInternalServerErrorBodyError access codes delete access codes internal server error body error
swagger:model AccessCodesDeleteAccessCodesInternalServerErrorBodyError
*/
type AccessCodesDeleteAccessCodesInternalServerErrorBodyError struct {

	// code
	// Example: INTERNAL
	Code string `json:"code,omitempty"`

	// message
	// Example: Internal Server Error
	Message string `json:"message,omitempty"`

	// status
	// Example: 500
	Status string `json:"status,omitempty"`
}

// Validate validates this access codes delete access codes internal server error body error
func (o *AccessCodesDeleteAccessCodesInternalServerErrorBodyError) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this access codes delete access codes internal server error body error based on context it is used
func (o *AccessCodesDeleteAccessCodesInternalServerErrorBodyError) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AccessCodesDeleteAccessCodesInternalServerErrorBodyError) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AccessCodesDeleteAccessCodesInternalServerErrorBodyError) UnmarshalBinary(b []byte) error {
	var res AccessCodesDeleteAccessCodesInternalServerErrorBodyError
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
