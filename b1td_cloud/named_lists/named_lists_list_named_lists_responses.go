// Code generated by go-swagger; DO NOT EDIT.

package named_lists

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/infobloxopen/b1ddi-go-client/models"
)

// NamedListsListNamedListsReader is a Reader for the NamedListsListNamedLists structure.
type NamedListsListNamedListsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *NamedListsListNamedListsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewNamedListsListNamedListsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewNamedListsListNamedListsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /named_lists] named_listsListNamedLists", response, response.Code())
	}
}

// NewNamedListsListNamedListsOK creates a NamedListsListNamedListsOK with default headers values
func NewNamedListsListNamedListsOK() *NamedListsListNamedListsOK {
	return &NamedListsListNamedListsOK{}
}

/*
NamedListsListNamedListsOK describes a response with status code 200, with default header values.

GET operation response
*/
type NamedListsListNamedListsOK struct {
	Payload *models.AtcfwNamedListReadMultiResponse
}

// IsSuccess returns true when this named lists list named lists o k response has a 2xx status code
func (o *NamedListsListNamedListsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this named lists list named lists o k response has a 3xx status code
func (o *NamedListsListNamedListsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this named lists list named lists o k response has a 4xx status code
func (o *NamedListsListNamedListsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this named lists list named lists o k response has a 5xx status code
func (o *NamedListsListNamedListsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this named lists list named lists o k response a status code equal to that given
func (o *NamedListsListNamedListsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the named lists list named lists o k response
func (o *NamedListsListNamedListsOK) Code() int {
	return 200
}

func (o *NamedListsListNamedListsOK) Error() string {
	return fmt.Sprintf("[GET /named_lists][%d] namedListsListNamedListsOK  %+v", 200, o.Payload)
}

func (o *NamedListsListNamedListsOK) String() string {
	return fmt.Sprintf("[GET /named_lists][%d] namedListsListNamedListsOK  %+v", 200, o.Payload)
}

func (o *NamedListsListNamedListsOK) GetPayload() *models.AtcfwNamedListReadMultiResponse {
	return o.Payload
}

func (o *NamedListsListNamedListsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AtcfwNamedListReadMultiResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNamedListsListNamedListsInternalServerError creates a NamedListsListNamedListsInternalServerError with default headers values
func NewNamedListsListNamedListsInternalServerError() *NamedListsListNamedListsInternalServerError {
	return &NamedListsListNamedListsInternalServerError{}
}

/*
	NamedListsListNamedListsInternalServerError describes a response with status code 500, with default header values.

- Internal server error occurred
*/
type NamedListsListNamedListsInternalServerError struct {
	Payload *NamedListsListNamedListsInternalServerErrorBody
}

// IsSuccess returns true when this named lists list named lists internal server error response has a 2xx status code
func (o *NamedListsListNamedListsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this named lists list named lists internal server error response has a 3xx status code
func (o *NamedListsListNamedListsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this named lists list named lists internal server error response has a 4xx status code
func (o *NamedListsListNamedListsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this named lists list named lists internal server error response has a 5xx status code
func (o *NamedListsListNamedListsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this named lists list named lists internal server error response a status code equal to that given
func (o *NamedListsListNamedListsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the named lists list named lists internal server error response
func (o *NamedListsListNamedListsInternalServerError) Code() int {
	return 500
}

func (o *NamedListsListNamedListsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /named_lists][%d] namedListsListNamedListsInternalServerError  %+v", 500, o.Payload)
}

func (o *NamedListsListNamedListsInternalServerError) String() string {
	return fmt.Sprintf("[GET /named_lists][%d] namedListsListNamedListsInternalServerError  %+v", 500, o.Payload)
}

func (o *NamedListsListNamedListsInternalServerError) GetPayload() *NamedListsListNamedListsInternalServerErrorBody {
	return o.Payload
}

func (o *NamedListsListNamedListsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(NamedListsListNamedListsInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
NamedListsListNamedListsInternalServerErrorBody named lists list named lists internal server error body
swagger:model NamedListsListNamedListsInternalServerErrorBody
*/
type NamedListsListNamedListsInternalServerErrorBody struct {

	// error
	Error *NamedListsListNamedListsInternalServerErrorBodyError `json:"error,omitempty"`
}

// Validate validates this named lists list named lists internal server error body
func (o *NamedListsListNamedListsInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateError(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *NamedListsListNamedListsInternalServerErrorBody) validateError(formats strfmt.Registry) error {
	if swag.IsZero(o.Error) { // not required
		return nil
	}

	if o.Error != nil {
		if err := o.Error.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("namedListsListNamedListsInternalServerError" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("namedListsListNamedListsInternalServerError" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this named lists list named lists internal server error body based on the context it is used
func (o *NamedListsListNamedListsInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateError(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *NamedListsListNamedListsInternalServerErrorBody) contextValidateError(ctx context.Context, formats strfmt.Registry) error {

	if o.Error != nil {

		if swag.IsZero(o.Error) { // not required
			return nil
		}

		if err := o.Error.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("namedListsListNamedListsInternalServerError" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("namedListsListNamedListsInternalServerError" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *NamedListsListNamedListsInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *NamedListsListNamedListsInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res NamedListsListNamedListsInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
NamedListsListNamedListsInternalServerErrorBodyError named lists list named lists internal server error body error
swagger:model NamedListsListNamedListsInternalServerErrorBodyError
*/
type NamedListsListNamedListsInternalServerErrorBodyError struct {

	// code
	// Example: INTERNAL
	Code string `json:"code,omitempty"`

	// message
	// Example: Internal Server Error
	Message string `json:"message,omitempty"`

	// status
	// Example: 500
	Status string `json:"status,omitempty"`
}

// Validate validates this named lists list named lists internal server error body error
func (o *NamedListsListNamedListsInternalServerErrorBodyError) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this named lists list named lists internal server error body error based on context it is used
func (o *NamedListsListNamedListsInternalServerErrorBodyError) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *NamedListsListNamedListsInternalServerErrorBodyError) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *NamedListsListNamedListsInternalServerErrorBodyError) UnmarshalBinary(b []byte) error {
	var res NamedListsListNamedListsInternalServerErrorBodyError
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
