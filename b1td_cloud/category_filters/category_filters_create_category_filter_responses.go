// Code generated by go-swagger; DO NOT EDIT.

package category_filters

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/infobloxopen/b1ddi-go-client/models"
)

// CategoryFiltersCreateCategoryFilterReader is a Reader for the CategoryFiltersCreateCategoryFilter structure.
type CategoryFiltersCreateCategoryFilterReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CategoryFiltersCreateCategoryFilterReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCategoryFiltersCreateCategoryFilterCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCategoryFiltersCreateCategoryFilterBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCategoryFiltersCreateCategoryFilterConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCategoryFiltersCreateCategoryFilterInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /category_filters] category_filtersCreateCategoryFilter", response, response.Code())
	}
}

// NewCategoryFiltersCreateCategoryFilterCreated creates a CategoryFiltersCreateCategoryFilterCreated with default headers values
func NewCategoryFiltersCreateCategoryFilterCreated() *CategoryFiltersCreateCategoryFilterCreated {
	return &CategoryFiltersCreateCategoryFilterCreated{}
}

/*
CategoryFiltersCreateCategoryFilterCreated describes a response with status code 201, with default header values.

POST operation response
*/
type CategoryFiltersCreateCategoryFilterCreated struct {
	Payload *models.AtcfwCategoryFilterCreateResponse
}

// IsSuccess returns true when this category filters create category filter created response has a 2xx status code
func (o *CategoryFiltersCreateCategoryFilterCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this category filters create category filter created response has a 3xx status code
func (o *CategoryFiltersCreateCategoryFilterCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this category filters create category filter created response has a 4xx status code
func (o *CategoryFiltersCreateCategoryFilterCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this category filters create category filter created response has a 5xx status code
func (o *CategoryFiltersCreateCategoryFilterCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this category filters create category filter created response a status code equal to that given
func (o *CategoryFiltersCreateCategoryFilterCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the category filters create category filter created response
func (o *CategoryFiltersCreateCategoryFilterCreated) Code() int {
	return 201
}

func (o *CategoryFiltersCreateCategoryFilterCreated) Error() string {
	return fmt.Sprintf("[POST /category_filters][%d] categoryFiltersCreateCategoryFilterCreated  %+v", 201, o.Payload)
}

func (o *CategoryFiltersCreateCategoryFilterCreated) String() string {
	return fmt.Sprintf("[POST /category_filters][%d] categoryFiltersCreateCategoryFilterCreated  %+v", 201, o.Payload)
}

func (o *CategoryFiltersCreateCategoryFilterCreated) GetPayload() *models.AtcfwCategoryFilterCreateResponse {
	return o.Payload
}

func (o *CategoryFiltersCreateCategoryFilterCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AtcfwCategoryFilterCreateResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCategoryFiltersCreateCategoryFilterBadRequest creates a CategoryFiltersCreateCategoryFilterBadRequest with default headers values
func NewCategoryFiltersCreateCategoryFilterBadRequest() *CategoryFiltersCreateCategoryFilterBadRequest {
	return &CategoryFiltersCreateCategoryFilterBadRequest{}
}

/*
	CategoryFiltersCreateCategoryFilterBadRequest describes a response with status code 400, with default header values.

- 'name' value must not be empty
- 'name' length cannot exceed 256 characters limit
- 'description' length cannot exceed 256 characters limit
- 'categories' value must not be empty
- 'categories' value must contain existing content categories
*/
type CategoryFiltersCreateCategoryFilterBadRequest struct {
	Payload *CategoryFiltersCreateCategoryFilterBadRequestBody
}

// IsSuccess returns true when this category filters create category filter bad request response has a 2xx status code
func (o *CategoryFiltersCreateCategoryFilterBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this category filters create category filter bad request response has a 3xx status code
func (o *CategoryFiltersCreateCategoryFilterBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this category filters create category filter bad request response has a 4xx status code
func (o *CategoryFiltersCreateCategoryFilterBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this category filters create category filter bad request response has a 5xx status code
func (o *CategoryFiltersCreateCategoryFilterBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this category filters create category filter bad request response a status code equal to that given
func (o *CategoryFiltersCreateCategoryFilterBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the category filters create category filter bad request response
func (o *CategoryFiltersCreateCategoryFilterBadRequest) Code() int {
	return 400
}

func (o *CategoryFiltersCreateCategoryFilterBadRequest) Error() string {
	return fmt.Sprintf("[POST /category_filters][%d] categoryFiltersCreateCategoryFilterBadRequest  %+v", 400, o.Payload)
}

func (o *CategoryFiltersCreateCategoryFilterBadRequest) String() string {
	return fmt.Sprintf("[POST /category_filters][%d] categoryFiltersCreateCategoryFilterBadRequest  %+v", 400, o.Payload)
}

func (o *CategoryFiltersCreateCategoryFilterBadRequest) GetPayload() *CategoryFiltersCreateCategoryFilterBadRequestBody {
	return o.Payload
}

func (o *CategoryFiltersCreateCategoryFilterBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CategoryFiltersCreateCategoryFilterBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCategoryFiltersCreateCategoryFilterConflict creates a CategoryFiltersCreateCategoryFilterConflict with default headers values
func NewCategoryFiltersCreateCategoryFilterConflict() *CategoryFiltersCreateCategoryFilterConflict {
	return &CategoryFiltersCreateCategoryFilterConflict{}
}

/*
	CategoryFiltersCreateCategoryFilterConflict describes a response with status code 409, with default header values.

- 'name' value must be unique among category filters belonging to the same account
*/
type CategoryFiltersCreateCategoryFilterConflict struct {
	Payload *CategoryFiltersCreateCategoryFilterConflictBody
}

// IsSuccess returns true when this category filters create category filter conflict response has a 2xx status code
func (o *CategoryFiltersCreateCategoryFilterConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this category filters create category filter conflict response has a 3xx status code
func (o *CategoryFiltersCreateCategoryFilterConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this category filters create category filter conflict response has a 4xx status code
func (o *CategoryFiltersCreateCategoryFilterConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this category filters create category filter conflict response has a 5xx status code
func (o *CategoryFiltersCreateCategoryFilterConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this category filters create category filter conflict response a status code equal to that given
func (o *CategoryFiltersCreateCategoryFilterConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the category filters create category filter conflict response
func (o *CategoryFiltersCreateCategoryFilterConflict) Code() int {
	return 409
}

func (o *CategoryFiltersCreateCategoryFilterConflict) Error() string {
	return fmt.Sprintf("[POST /category_filters][%d] categoryFiltersCreateCategoryFilterConflict  %+v", 409, o.Payload)
}

func (o *CategoryFiltersCreateCategoryFilterConflict) String() string {
	return fmt.Sprintf("[POST /category_filters][%d] categoryFiltersCreateCategoryFilterConflict  %+v", 409, o.Payload)
}

func (o *CategoryFiltersCreateCategoryFilterConflict) GetPayload() *CategoryFiltersCreateCategoryFilterConflictBody {
	return o.Payload
}

func (o *CategoryFiltersCreateCategoryFilterConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CategoryFiltersCreateCategoryFilterConflictBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCategoryFiltersCreateCategoryFilterInternalServerError creates a CategoryFiltersCreateCategoryFilterInternalServerError with default headers values
func NewCategoryFiltersCreateCategoryFilterInternalServerError() *CategoryFiltersCreateCategoryFilterInternalServerError {
	return &CategoryFiltersCreateCategoryFilterInternalServerError{}
}

/*
	CategoryFiltersCreateCategoryFilterInternalServerError describes a response with status code 500, with default header values.

- Internal server error occurred
*/
type CategoryFiltersCreateCategoryFilterInternalServerError struct {
	Payload *CategoryFiltersCreateCategoryFilterInternalServerErrorBody
}

// IsSuccess returns true when this category filters create category filter internal server error response has a 2xx status code
func (o *CategoryFiltersCreateCategoryFilterInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this category filters create category filter internal server error response has a 3xx status code
func (o *CategoryFiltersCreateCategoryFilterInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this category filters create category filter internal server error response has a 4xx status code
func (o *CategoryFiltersCreateCategoryFilterInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this category filters create category filter internal server error response has a 5xx status code
func (o *CategoryFiltersCreateCategoryFilterInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this category filters create category filter internal server error response a status code equal to that given
func (o *CategoryFiltersCreateCategoryFilterInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the category filters create category filter internal server error response
func (o *CategoryFiltersCreateCategoryFilterInternalServerError) Code() int {
	return 500
}

func (o *CategoryFiltersCreateCategoryFilterInternalServerError) Error() string {
	return fmt.Sprintf("[POST /category_filters][%d] categoryFiltersCreateCategoryFilterInternalServerError  %+v", 500, o.Payload)
}

func (o *CategoryFiltersCreateCategoryFilterInternalServerError) String() string {
	return fmt.Sprintf("[POST /category_filters][%d] categoryFiltersCreateCategoryFilterInternalServerError  %+v", 500, o.Payload)
}

func (o *CategoryFiltersCreateCategoryFilterInternalServerError) GetPayload() *CategoryFiltersCreateCategoryFilterInternalServerErrorBody {
	return o.Payload
}

func (o *CategoryFiltersCreateCategoryFilterInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CategoryFiltersCreateCategoryFilterInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
CategoryFiltersCreateCategoryFilterBadRequestBody category filters create category filter bad request body
swagger:model CategoryFiltersCreateCategoryFilterBadRequestBody
*/
type CategoryFiltersCreateCategoryFilterBadRequestBody struct {

	// error
	Error *CategoryFiltersCreateCategoryFilterBadRequestBodyError `json:"error,omitempty"`
}

// Validate validates this category filters create category filter bad request body
func (o *CategoryFiltersCreateCategoryFilterBadRequestBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateError(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CategoryFiltersCreateCategoryFilterBadRequestBody) validateError(formats strfmt.Registry) error {
	if swag.IsZero(o.Error) { // not required
		return nil
	}

	if o.Error != nil {
		if err := o.Error.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("categoryFiltersCreateCategoryFilterBadRequest" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("categoryFiltersCreateCategoryFilterBadRequest" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this category filters create category filter bad request body based on the context it is used
func (o *CategoryFiltersCreateCategoryFilterBadRequestBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateError(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CategoryFiltersCreateCategoryFilterBadRequestBody) contextValidateError(ctx context.Context, formats strfmt.Registry) error {

	if o.Error != nil {

		if swag.IsZero(o.Error) { // not required
			return nil
		}

		if err := o.Error.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("categoryFiltersCreateCategoryFilterBadRequest" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("categoryFiltersCreateCategoryFilterBadRequest" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CategoryFiltersCreateCategoryFilterBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CategoryFiltersCreateCategoryFilterBadRequestBody) UnmarshalBinary(b []byte) error {
	var res CategoryFiltersCreateCategoryFilterBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CategoryFiltersCreateCategoryFilterBadRequestBodyError category filters create category filter bad request body error
swagger:model CategoryFiltersCreateCategoryFilterBadRequestBodyError
*/
type CategoryFiltersCreateCategoryFilterBadRequestBodyError struct {

	// code
	// Example: INVALID_ARGUMENT
	Code string `json:"code,omitempty"`

	// message
	// Example: 'name' must not be empty
	Message string `json:"message,omitempty"`

	// status
	// Example: 400
	Status string `json:"status,omitempty"`
}

// Validate validates this category filters create category filter bad request body error
func (o *CategoryFiltersCreateCategoryFilterBadRequestBodyError) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this category filters create category filter bad request body error based on context it is used
func (o *CategoryFiltersCreateCategoryFilterBadRequestBodyError) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CategoryFiltersCreateCategoryFilterBadRequestBodyError) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CategoryFiltersCreateCategoryFilterBadRequestBodyError) UnmarshalBinary(b []byte) error {
	var res CategoryFiltersCreateCategoryFilterBadRequestBodyError
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CategoryFiltersCreateCategoryFilterConflictBody category filters create category filter conflict body
swagger:model CategoryFiltersCreateCategoryFilterConflictBody
*/
type CategoryFiltersCreateCategoryFilterConflictBody struct {

	// error
	Error *CategoryFiltersCreateCategoryFilterConflictBodyError `json:"error,omitempty"`
}

// Validate validates this category filters create category filter conflict body
func (o *CategoryFiltersCreateCategoryFilterConflictBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateError(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CategoryFiltersCreateCategoryFilterConflictBody) validateError(formats strfmt.Registry) error {
	if swag.IsZero(o.Error) { // not required
		return nil
	}

	if o.Error != nil {
		if err := o.Error.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("categoryFiltersCreateCategoryFilterConflict" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("categoryFiltersCreateCategoryFilterConflict" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this category filters create category filter conflict body based on the context it is used
func (o *CategoryFiltersCreateCategoryFilterConflictBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateError(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CategoryFiltersCreateCategoryFilterConflictBody) contextValidateError(ctx context.Context, formats strfmt.Registry) error {

	if o.Error != nil {

		if swag.IsZero(o.Error) { // not required
			return nil
		}

		if err := o.Error.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("categoryFiltersCreateCategoryFilterConflict" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("categoryFiltersCreateCategoryFilterConflict" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CategoryFiltersCreateCategoryFilterConflictBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CategoryFiltersCreateCategoryFilterConflictBody) UnmarshalBinary(b []byte) error {
	var res CategoryFiltersCreateCategoryFilterConflictBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CategoryFiltersCreateCategoryFilterConflictBodyError category filters create category filter conflict body error
swagger:model CategoryFiltersCreateCategoryFilterConflictBodyError
*/
type CategoryFiltersCreateCategoryFilterConflictBodyError struct {

	// code
	// Example: ALREADY_EXISTS
	Code string `json:"code,omitempty"`

	// message
	// Example: Cannot use duplicate name \"category_filter_a\
	Message string `json:"message,omitempty"`

	// status
	// Example: 409
	Status string `json:"status,omitempty"`
}

// Validate validates this category filters create category filter conflict body error
func (o *CategoryFiltersCreateCategoryFilterConflictBodyError) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this category filters create category filter conflict body error based on context it is used
func (o *CategoryFiltersCreateCategoryFilterConflictBodyError) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CategoryFiltersCreateCategoryFilterConflictBodyError) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CategoryFiltersCreateCategoryFilterConflictBodyError) UnmarshalBinary(b []byte) error {
	var res CategoryFiltersCreateCategoryFilterConflictBodyError
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CategoryFiltersCreateCategoryFilterInternalServerErrorBody category filters create category filter internal server error body
swagger:model CategoryFiltersCreateCategoryFilterInternalServerErrorBody
*/
type CategoryFiltersCreateCategoryFilterInternalServerErrorBody struct {

	// error
	Error *CategoryFiltersCreateCategoryFilterInternalServerErrorBodyError `json:"error,omitempty"`
}

// Validate validates this category filters create category filter internal server error body
func (o *CategoryFiltersCreateCategoryFilterInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateError(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CategoryFiltersCreateCategoryFilterInternalServerErrorBody) validateError(formats strfmt.Registry) error {
	if swag.IsZero(o.Error) { // not required
		return nil
	}

	if o.Error != nil {
		if err := o.Error.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("categoryFiltersCreateCategoryFilterInternalServerError" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("categoryFiltersCreateCategoryFilterInternalServerError" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this category filters create category filter internal server error body based on the context it is used
func (o *CategoryFiltersCreateCategoryFilterInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateError(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CategoryFiltersCreateCategoryFilterInternalServerErrorBody) contextValidateError(ctx context.Context, formats strfmt.Registry) error {

	if o.Error != nil {

		if swag.IsZero(o.Error) { // not required
			return nil
		}

		if err := o.Error.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("categoryFiltersCreateCategoryFilterInternalServerError" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("categoryFiltersCreateCategoryFilterInternalServerError" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CategoryFiltersCreateCategoryFilterInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CategoryFiltersCreateCategoryFilterInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res CategoryFiltersCreateCategoryFilterInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CategoryFiltersCreateCategoryFilterInternalServerErrorBodyError category filters create category filter internal server error body error
swagger:model CategoryFiltersCreateCategoryFilterInternalServerErrorBodyError
*/
type CategoryFiltersCreateCategoryFilterInternalServerErrorBodyError struct {

	// code
	// Example: INTERNAL
	Code string `json:"code,omitempty"`

	// message
	// Example: Internal Server Error
	Message string `json:"message,omitempty"`

	// status
	// Example: 500
	Status string `json:"status,omitempty"`
}

// Validate validates this category filters create category filter internal server error body error
func (o *CategoryFiltersCreateCategoryFilterInternalServerErrorBodyError) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this category filters create category filter internal server error body error based on context it is used
func (o *CategoryFiltersCreateCategoryFilterInternalServerErrorBodyError) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CategoryFiltersCreateCategoryFilterInternalServerErrorBodyError) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CategoryFiltersCreateCategoryFilterInternalServerErrorBodyError) UnmarshalBinary(b []byte) error {
	var res CategoryFiltersCreateCategoryFilterInternalServerErrorBodyError
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
