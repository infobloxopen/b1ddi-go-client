// Code generated by go-swagger; DO NOT EDIT.

package category_filters

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// CategoryFiltersDeleteCategoryFiltersReader is a Reader for the CategoryFiltersDeleteCategoryFilters structure.
type CategoryFiltersDeleteCategoryFiltersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CategoryFiltersDeleteCategoryFiltersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewCategoryFiltersDeleteCategoryFiltersNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCategoryFiltersDeleteCategoryFiltersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCategoryFiltersDeleteCategoryFiltersInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /category_filters] category_filtersDeleteCategoryFilters", response, response.Code())
	}
}

// NewCategoryFiltersDeleteCategoryFiltersNoContent creates a CategoryFiltersDeleteCategoryFiltersNoContent with default headers values
func NewCategoryFiltersDeleteCategoryFiltersNoContent() *CategoryFiltersDeleteCategoryFiltersNoContent {
	return &CategoryFiltersDeleteCategoryFiltersNoContent{}
}

/*
CategoryFiltersDeleteCategoryFiltersNoContent describes a response with status code 204, with default header values.

No Content
*/
type CategoryFiltersDeleteCategoryFiltersNoContent struct {
}

// IsSuccess returns true when this category filters delete category filters no content response has a 2xx status code
func (o *CategoryFiltersDeleteCategoryFiltersNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this category filters delete category filters no content response has a 3xx status code
func (o *CategoryFiltersDeleteCategoryFiltersNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this category filters delete category filters no content response has a 4xx status code
func (o *CategoryFiltersDeleteCategoryFiltersNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this category filters delete category filters no content response has a 5xx status code
func (o *CategoryFiltersDeleteCategoryFiltersNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this category filters delete category filters no content response a status code equal to that given
func (o *CategoryFiltersDeleteCategoryFiltersNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the category filters delete category filters no content response
func (o *CategoryFiltersDeleteCategoryFiltersNoContent) Code() int {
	return 204
}

func (o *CategoryFiltersDeleteCategoryFiltersNoContent) Error() string {
	return fmt.Sprintf("[DELETE /category_filters][%d] categoryFiltersDeleteCategoryFiltersNoContent ", 204)
}

func (o *CategoryFiltersDeleteCategoryFiltersNoContent) String() string {
	return fmt.Sprintf("[DELETE /category_filters][%d] categoryFiltersDeleteCategoryFiltersNoContent ", 204)
}

func (o *CategoryFiltersDeleteCategoryFiltersNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCategoryFiltersDeleteCategoryFiltersBadRequest creates a CategoryFiltersDeleteCategoryFiltersBadRequest with default headers values
func NewCategoryFiltersDeleteCategoryFiltersBadRequest() *CategoryFiltersDeleteCategoryFiltersBadRequest {
	return &CategoryFiltersDeleteCategoryFiltersBadRequest{}
}

/*
	CategoryFiltersDeleteCategoryFiltersBadRequest describes a response with status code 400, with default header values.

- 'ids' value must be non-empty
- 'ids' value must contain unique elements
- 'ids' value must contain values that are greater than or equal to zero
- category filters assigned to a security policy cannot be deleted
- category filters assigned to a bypass code cannot be deleted
- 'ids' value must contain existing category filter identifiers
*/
type CategoryFiltersDeleteCategoryFiltersBadRequest struct {
	Payload *CategoryFiltersDeleteCategoryFiltersBadRequestBody
}

// IsSuccess returns true when this category filters delete category filters bad request response has a 2xx status code
func (o *CategoryFiltersDeleteCategoryFiltersBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this category filters delete category filters bad request response has a 3xx status code
func (o *CategoryFiltersDeleteCategoryFiltersBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this category filters delete category filters bad request response has a 4xx status code
func (o *CategoryFiltersDeleteCategoryFiltersBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this category filters delete category filters bad request response has a 5xx status code
func (o *CategoryFiltersDeleteCategoryFiltersBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this category filters delete category filters bad request response a status code equal to that given
func (o *CategoryFiltersDeleteCategoryFiltersBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the category filters delete category filters bad request response
func (o *CategoryFiltersDeleteCategoryFiltersBadRequest) Code() int {
	return 400
}

func (o *CategoryFiltersDeleteCategoryFiltersBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /category_filters][%d] categoryFiltersDeleteCategoryFiltersBadRequest  %+v", 400, o.Payload)
}

func (o *CategoryFiltersDeleteCategoryFiltersBadRequest) String() string {
	return fmt.Sprintf("[DELETE /category_filters][%d] categoryFiltersDeleteCategoryFiltersBadRequest  %+v", 400, o.Payload)
}

func (o *CategoryFiltersDeleteCategoryFiltersBadRequest) GetPayload() *CategoryFiltersDeleteCategoryFiltersBadRequestBody {
	return o.Payload
}

func (o *CategoryFiltersDeleteCategoryFiltersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CategoryFiltersDeleteCategoryFiltersBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCategoryFiltersDeleteCategoryFiltersInternalServerError creates a CategoryFiltersDeleteCategoryFiltersInternalServerError with default headers values
func NewCategoryFiltersDeleteCategoryFiltersInternalServerError() *CategoryFiltersDeleteCategoryFiltersInternalServerError {
	return &CategoryFiltersDeleteCategoryFiltersInternalServerError{}
}

/*
	CategoryFiltersDeleteCategoryFiltersInternalServerError describes a response with status code 500, with default header values.

- Internal server error occurred
*/
type CategoryFiltersDeleteCategoryFiltersInternalServerError struct {
	Payload *CategoryFiltersDeleteCategoryFiltersInternalServerErrorBody
}

// IsSuccess returns true when this category filters delete category filters internal server error response has a 2xx status code
func (o *CategoryFiltersDeleteCategoryFiltersInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this category filters delete category filters internal server error response has a 3xx status code
func (o *CategoryFiltersDeleteCategoryFiltersInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this category filters delete category filters internal server error response has a 4xx status code
func (o *CategoryFiltersDeleteCategoryFiltersInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this category filters delete category filters internal server error response has a 5xx status code
func (o *CategoryFiltersDeleteCategoryFiltersInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this category filters delete category filters internal server error response a status code equal to that given
func (o *CategoryFiltersDeleteCategoryFiltersInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the category filters delete category filters internal server error response
func (o *CategoryFiltersDeleteCategoryFiltersInternalServerError) Code() int {
	return 500
}

func (o *CategoryFiltersDeleteCategoryFiltersInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /category_filters][%d] categoryFiltersDeleteCategoryFiltersInternalServerError  %+v", 500, o.Payload)
}

func (o *CategoryFiltersDeleteCategoryFiltersInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /category_filters][%d] categoryFiltersDeleteCategoryFiltersInternalServerError  %+v", 500, o.Payload)
}

func (o *CategoryFiltersDeleteCategoryFiltersInternalServerError) GetPayload() *CategoryFiltersDeleteCategoryFiltersInternalServerErrorBody {
	return o.Payload
}

func (o *CategoryFiltersDeleteCategoryFiltersInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CategoryFiltersDeleteCategoryFiltersInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
CategoryFiltersDeleteCategoryFiltersBadRequestBody category filters delete category filters bad request body
swagger:model CategoryFiltersDeleteCategoryFiltersBadRequestBody
*/
type CategoryFiltersDeleteCategoryFiltersBadRequestBody struct {

	// error
	Error *CategoryFiltersDeleteCategoryFiltersBadRequestBodyError `json:"error,omitempty"`
}

// Validate validates this category filters delete category filters bad request body
func (o *CategoryFiltersDeleteCategoryFiltersBadRequestBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateError(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CategoryFiltersDeleteCategoryFiltersBadRequestBody) validateError(formats strfmt.Registry) error {
	if swag.IsZero(o.Error) { // not required
		return nil
	}

	if o.Error != nil {
		if err := o.Error.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("categoryFiltersDeleteCategoryFiltersBadRequest" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("categoryFiltersDeleteCategoryFiltersBadRequest" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this category filters delete category filters bad request body based on the context it is used
func (o *CategoryFiltersDeleteCategoryFiltersBadRequestBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateError(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CategoryFiltersDeleteCategoryFiltersBadRequestBody) contextValidateError(ctx context.Context, formats strfmt.Registry) error {

	if o.Error != nil {

		if swag.IsZero(o.Error) { // not required
			return nil
		}

		if err := o.Error.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("categoryFiltersDeleteCategoryFiltersBadRequest" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("categoryFiltersDeleteCategoryFiltersBadRequest" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CategoryFiltersDeleteCategoryFiltersBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CategoryFiltersDeleteCategoryFiltersBadRequestBody) UnmarshalBinary(b []byte) error {
	var res CategoryFiltersDeleteCategoryFiltersBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CategoryFiltersDeleteCategoryFiltersBadRequestBodyError category filters delete category filters bad request body error
swagger:model CategoryFiltersDeleteCategoryFiltersBadRequestBodyError
*/
type CategoryFiltersDeleteCategoryFiltersBadRequestBodyError struct {

	// code
	// Example: INVALID_ARGUMENT
	Code string `json:"code,omitempty"`

	// message
	// Example: Category Filter ids can't be empty
	Message string `json:"message,omitempty"`

	// status
	// Example: 400
	Status string `json:"status,omitempty"`
}

// Validate validates this category filters delete category filters bad request body error
func (o *CategoryFiltersDeleteCategoryFiltersBadRequestBodyError) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this category filters delete category filters bad request body error based on context it is used
func (o *CategoryFiltersDeleteCategoryFiltersBadRequestBodyError) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CategoryFiltersDeleteCategoryFiltersBadRequestBodyError) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CategoryFiltersDeleteCategoryFiltersBadRequestBodyError) UnmarshalBinary(b []byte) error {
	var res CategoryFiltersDeleteCategoryFiltersBadRequestBodyError
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CategoryFiltersDeleteCategoryFiltersInternalServerErrorBody category filters delete category filters internal server error body
swagger:model CategoryFiltersDeleteCategoryFiltersInternalServerErrorBody
*/
type CategoryFiltersDeleteCategoryFiltersInternalServerErrorBody struct {

	// error
	Error *CategoryFiltersDeleteCategoryFiltersInternalServerErrorBodyError `json:"error,omitempty"`
}

// Validate validates this category filters delete category filters internal server error body
func (o *CategoryFiltersDeleteCategoryFiltersInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateError(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CategoryFiltersDeleteCategoryFiltersInternalServerErrorBody) validateError(formats strfmt.Registry) error {
	if swag.IsZero(o.Error) { // not required
		return nil
	}

	if o.Error != nil {
		if err := o.Error.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("categoryFiltersDeleteCategoryFiltersInternalServerError" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("categoryFiltersDeleteCategoryFiltersInternalServerError" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this category filters delete category filters internal server error body based on the context it is used
func (o *CategoryFiltersDeleteCategoryFiltersInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateError(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CategoryFiltersDeleteCategoryFiltersInternalServerErrorBody) contextValidateError(ctx context.Context, formats strfmt.Registry) error {

	if o.Error != nil {

		if swag.IsZero(o.Error) { // not required
			return nil
		}

		if err := o.Error.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("categoryFiltersDeleteCategoryFiltersInternalServerError" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("categoryFiltersDeleteCategoryFiltersInternalServerError" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CategoryFiltersDeleteCategoryFiltersInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CategoryFiltersDeleteCategoryFiltersInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res CategoryFiltersDeleteCategoryFiltersInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CategoryFiltersDeleteCategoryFiltersInternalServerErrorBodyError category filters delete category filters internal server error body error
swagger:model CategoryFiltersDeleteCategoryFiltersInternalServerErrorBodyError
*/
type CategoryFiltersDeleteCategoryFiltersInternalServerErrorBodyError struct {

	// code
	// Example: INTERNAL
	Code string `json:"code,omitempty"`

	// message
	// Example: Internal Server Error
	Message string `json:"message,omitempty"`

	// status
	// Example: 500
	Status string `json:"status,omitempty"`
}

// Validate validates this category filters delete category filters internal server error body error
func (o *CategoryFiltersDeleteCategoryFiltersInternalServerErrorBodyError) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this category filters delete category filters internal server error body error based on context it is used
func (o *CategoryFiltersDeleteCategoryFiltersInternalServerErrorBodyError) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CategoryFiltersDeleteCategoryFiltersInternalServerErrorBodyError) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CategoryFiltersDeleteCategoryFiltersInternalServerErrorBodyError) UnmarshalBinary(b []byte) error {
	var res CategoryFiltersDeleteCategoryFiltersInternalServerErrorBodyError
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
