// Code generated by go-swagger; DO NOT EDIT.

package named_list_items

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NamedListItemsDeleteNamedListItemsReader is a Reader for the NamedListItemsDeleteNamedListItems structure.
type NamedListItemsDeleteNamedListItemsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *NamedListItemsDeleteNamedListItemsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewNamedListItemsDeleteNamedListItemsNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewNamedListItemsDeleteNamedListItemsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewNamedListItemsDeleteNamedListItemsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewNamedListItemsDeleteNamedListItemsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /named_lists/{id}/items] named_list_itemsDeleteNamedListItems", response, response.Code())
	}
}

// NewNamedListItemsDeleteNamedListItemsNoContent creates a NamedListItemsDeleteNamedListItemsNoContent with default headers values
func NewNamedListItemsDeleteNamedListItemsNoContent() *NamedListItemsDeleteNamedListItemsNoContent {
	return &NamedListItemsDeleteNamedListItemsNoContent{}
}

/*
NamedListItemsDeleteNamedListItemsNoContent describes a response with status code 204, with default header values.

No Content
*/
type NamedListItemsDeleteNamedListItemsNoContent struct {
}

// IsSuccess returns true when this named list items delete named list items no content response has a 2xx status code
func (o *NamedListItemsDeleteNamedListItemsNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this named list items delete named list items no content response has a 3xx status code
func (o *NamedListItemsDeleteNamedListItemsNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this named list items delete named list items no content response has a 4xx status code
func (o *NamedListItemsDeleteNamedListItemsNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this named list items delete named list items no content response has a 5xx status code
func (o *NamedListItemsDeleteNamedListItemsNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this named list items delete named list items no content response a status code equal to that given
func (o *NamedListItemsDeleteNamedListItemsNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the named list items delete named list items no content response
func (o *NamedListItemsDeleteNamedListItemsNoContent) Code() int {
	return 204
}

func (o *NamedListItemsDeleteNamedListItemsNoContent) Error() string {
	return fmt.Sprintf("[DELETE /named_lists/{id}/items][%d] namedListItemsDeleteNamedListItemsNoContent ", 204)
}

func (o *NamedListItemsDeleteNamedListItemsNoContent) String() string {
	return fmt.Sprintf("[DELETE /named_lists/{id}/items][%d] namedListItemsDeleteNamedListItemsNoContent ", 204)
}

func (o *NamedListItemsDeleteNamedListItemsNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewNamedListItemsDeleteNamedListItemsBadRequest creates a NamedListItemsDeleteNamedListItemsBadRequest with default headers values
func NewNamedListItemsDeleteNamedListItemsBadRequest() *NamedListItemsDeleteNamedListItemsBadRequest {
	return &NamedListItemsDeleteNamedListItemsBadRequest{}
}

/*
	NamedListItemsDeleteNamedListItemsBadRequest describes a response with status code 400, with default header values.

- 'id' value must be greater than or equal to zero
- 'items' value must contain either valid domain names or IPv4 or IPv6 or network addresses.
- 'items' value must contain existing values for a specified named list
*/
type NamedListItemsDeleteNamedListItemsBadRequest struct {
	Payload *NamedListItemsDeleteNamedListItemsBadRequestBody
}

// IsSuccess returns true when this named list items delete named list items bad request response has a 2xx status code
func (o *NamedListItemsDeleteNamedListItemsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this named list items delete named list items bad request response has a 3xx status code
func (o *NamedListItemsDeleteNamedListItemsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this named list items delete named list items bad request response has a 4xx status code
func (o *NamedListItemsDeleteNamedListItemsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this named list items delete named list items bad request response has a 5xx status code
func (o *NamedListItemsDeleteNamedListItemsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this named list items delete named list items bad request response a status code equal to that given
func (o *NamedListItemsDeleteNamedListItemsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the named list items delete named list items bad request response
func (o *NamedListItemsDeleteNamedListItemsBadRequest) Code() int {
	return 400
}

func (o *NamedListItemsDeleteNamedListItemsBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /named_lists/{id}/items][%d] namedListItemsDeleteNamedListItemsBadRequest  %+v", 400, o.Payload)
}

func (o *NamedListItemsDeleteNamedListItemsBadRequest) String() string {
	return fmt.Sprintf("[DELETE /named_lists/{id}/items][%d] namedListItemsDeleteNamedListItemsBadRequest  %+v", 400, o.Payload)
}

func (o *NamedListItemsDeleteNamedListItemsBadRequest) GetPayload() *NamedListItemsDeleteNamedListItemsBadRequestBody {
	return o.Payload
}

func (o *NamedListItemsDeleteNamedListItemsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(NamedListItemsDeleteNamedListItemsBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNamedListItemsDeleteNamedListItemsNotFound creates a NamedListItemsDeleteNamedListItemsNotFound with default headers values
func NewNamedListItemsDeleteNamedListItemsNotFound() *NamedListItemsDeleteNamedListItemsNotFound {
	return &NamedListItemsDeleteNamedListItemsNotFound{}
}

/*
	NamedListItemsDeleteNamedListItemsNotFound describes a response with status code 404, with default header values.

- 'id' value must contain existing custom list identifier
*/
type NamedListItemsDeleteNamedListItemsNotFound struct {
	Payload *NamedListItemsDeleteNamedListItemsNotFoundBody
}

// IsSuccess returns true when this named list items delete named list items not found response has a 2xx status code
func (o *NamedListItemsDeleteNamedListItemsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this named list items delete named list items not found response has a 3xx status code
func (o *NamedListItemsDeleteNamedListItemsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this named list items delete named list items not found response has a 4xx status code
func (o *NamedListItemsDeleteNamedListItemsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this named list items delete named list items not found response has a 5xx status code
func (o *NamedListItemsDeleteNamedListItemsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this named list items delete named list items not found response a status code equal to that given
func (o *NamedListItemsDeleteNamedListItemsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the named list items delete named list items not found response
func (o *NamedListItemsDeleteNamedListItemsNotFound) Code() int {
	return 404
}

func (o *NamedListItemsDeleteNamedListItemsNotFound) Error() string {
	return fmt.Sprintf("[DELETE /named_lists/{id}/items][%d] namedListItemsDeleteNamedListItemsNotFound  %+v", 404, o.Payload)
}

func (o *NamedListItemsDeleteNamedListItemsNotFound) String() string {
	return fmt.Sprintf("[DELETE /named_lists/{id}/items][%d] namedListItemsDeleteNamedListItemsNotFound  %+v", 404, o.Payload)
}

func (o *NamedListItemsDeleteNamedListItemsNotFound) GetPayload() *NamedListItemsDeleteNamedListItemsNotFoundBody {
	return o.Payload
}

func (o *NamedListItemsDeleteNamedListItemsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(NamedListItemsDeleteNamedListItemsNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNamedListItemsDeleteNamedListItemsInternalServerError creates a NamedListItemsDeleteNamedListItemsInternalServerError with default headers values
func NewNamedListItemsDeleteNamedListItemsInternalServerError() *NamedListItemsDeleteNamedListItemsInternalServerError {
	return &NamedListItemsDeleteNamedListItemsInternalServerError{}
}

/*
	NamedListItemsDeleteNamedListItemsInternalServerError describes a response with status code 500, with default header values.

- Internal server error occurred
*/
type NamedListItemsDeleteNamedListItemsInternalServerError struct {
	Payload *NamedListItemsDeleteNamedListItemsInternalServerErrorBody
}

// IsSuccess returns true when this named list items delete named list items internal server error response has a 2xx status code
func (o *NamedListItemsDeleteNamedListItemsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this named list items delete named list items internal server error response has a 3xx status code
func (o *NamedListItemsDeleteNamedListItemsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this named list items delete named list items internal server error response has a 4xx status code
func (o *NamedListItemsDeleteNamedListItemsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this named list items delete named list items internal server error response has a 5xx status code
func (o *NamedListItemsDeleteNamedListItemsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this named list items delete named list items internal server error response a status code equal to that given
func (o *NamedListItemsDeleteNamedListItemsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the named list items delete named list items internal server error response
func (o *NamedListItemsDeleteNamedListItemsInternalServerError) Code() int {
	return 500
}

func (o *NamedListItemsDeleteNamedListItemsInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /named_lists/{id}/items][%d] namedListItemsDeleteNamedListItemsInternalServerError  %+v", 500, o.Payload)
}

func (o *NamedListItemsDeleteNamedListItemsInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /named_lists/{id}/items][%d] namedListItemsDeleteNamedListItemsInternalServerError  %+v", 500, o.Payload)
}

func (o *NamedListItemsDeleteNamedListItemsInternalServerError) GetPayload() *NamedListItemsDeleteNamedListItemsInternalServerErrorBody {
	return o.Payload
}

func (o *NamedListItemsDeleteNamedListItemsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(NamedListItemsDeleteNamedListItemsInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
NamedListItemsDeleteNamedListItemsBadRequestBody named list items delete named list items bad request body
swagger:model NamedListItemsDeleteNamedListItemsBadRequestBody
*/
type NamedListItemsDeleteNamedListItemsBadRequestBody struct {

	// error
	Error *NamedListItemsDeleteNamedListItemsBadRequestBodyError `json:"error,omitempty"`
}

// Validate validates this named list items delete named list items bad request body
func (o *NamedListItemsDeleteNamedListItemsBadRequestBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateError(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *NamedListItemsDeleteNamedListItemsBadRequestBody) validateError(formats strfmt.Registry) error {
	if swag.IsZero(o.Error) { // not required
		return nil
	}

	if o.Error != nil {
		if err := o.Error.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("namedListItemsDeleteNamedListItemsBadRequest" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("namedListItemsDeleteNamedListItemsBadRequest" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this named list items delete named list items bad request body based on the context it is used
func (o *NamedListItemsDeleteNamedListItemsBadRequestBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateError(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *NamedListItemsDeleteNamedListItemsBadRequestBody) contextValidateError(ctx context.Context, formats strfmt.Registry) error {

	if o.Error != nil {

		if swag.IsZero(o.Error) { // not required
			return nil
		}

		if err := o.Error.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("namedListItemsDeleteNamedListItemsBadRequest" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("namedListItemsDeleteNamedListItemsBadRequest" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *NamedListItemsDeleteNamedListItemsBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *NamedListItemsDeleteNamedListItemsBadRequestBody) UnmarshalBinary(b []byte) error {
	var res NamedListItemsDeleteNamedListItemsBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
NamedListItemsDeleteNamedListItemsBadRequestBodyError named list items delete named list items bad request body error
swagger:model NamedListItemsDeleteNamedListItemsBadRequestBodyError
*/
type NamedListItemsDeleteNamedListItemsBadRequestBodyError struct {

	// code
	// Example: INVALID_ARGUMENT
	Code string `json:"code,omitempty"`

	// message
	// Example: One or more items are no assigned to the Named List
	Message string `json:"message,omitempty"`

	// status
	// Example: 400
	Status string `json:"status,omitempty"`
}

// Validate validates this named list items delete named list items bad request body error
func (o *NamedListItemsDeleteNamedListItemsBadRequestBodyError) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this named list items delete named list items bad request body error based on context it is used
func (o *NamedListItemsDeleteNamedListItemsBadRequestBodyError) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *NamedListItemsDeleteNamedListItemsBadRequestBodyError) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *NamedListItemsDeleteNamedListItemsBadRequestBodyError) UnmarshalBinary(b []byte) error {
	var res NamedListItemsDeleteNamedListItemsBadRequestBodyError
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
NamedListItemsDeleteNamedListItemsInternalServerErrorBody named list items delete named list items internal server error body
swagger:model NamedListItemsDeleteNamedListItemsInternalServerErrorBody
*/
type NamedListItemsDeleteNamedListItemsInternalServerErrorBody struct {

	// error
	Error *NamedListItemsDeleteNamedListItemsInternalServerErrorBodyError `json:"error,omitempty"`
}

// Validate validates this named list items delete named list items internal server error body
func (o *NamedListItemsDeleteNamedListItemsInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateError(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *NamedListItemsDeleteNamedListItemsInternalServerErrorBody) validateError(formats strfmt.Registry) error {
	if swag.IsZero(o.Error) { // not required
		return nil
	}

	if o.Error != nil {
		if err := o.Error.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("namedListItemsDeleteNamedListItemsInternalServerError" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("namedListItemsDeleteNamedListItemsInternalServerError" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this named list items delete named list items internal server error body based on the context it is used
func (o *NamedListItemsDeleteNamedListItemsInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateError(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *NamedListItemsDeleteNamedListItemsInternalServerErrorBody) contextValidateError(ctx context.Context, formats strfmt.Registry) error {

	if o.Error != nil {

		if swag.IsZero(o.Error) { // not required
			return nil
		}

		if err := o.Error.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("namedListItemsDeleteNamedListItemsInternalServerError" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("namedListItemsDeleteNamedListItemsInternalServerError" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *NamedListItemsDeleteNamedListItemsInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *NamedListItemsDeleteNamedListItemsInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res NamedListItemsDeleteNamedListItemsInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
NamedListItemsDeleteNamedListItemsInternalServerErrorBodyError named list items delete named list items internal server error body error
swagger:model NamedListItemsDeleteNamedListItemsInternalServerErrorBodyError
*/
type NamedListItemsDeleteNamedListItemsInternalServerErrorBodyError struct {

	// code
	// Example: INTERNAL
	Code string `json:"code,omitempty"`

	// message
	// Example: Internal Server Error
	Message string `json:"message,omitempty"`

	// status
	// Example: 500
	Status string `json:"status,omitempty"`
}

// Validate validates this named list items delete named list items internal server error body error
func (o *NamedListItemsDeleteNamedListItemsInternalServerErrorBodyError) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this named list items delete named list items internal server error body error based on context it is used
func (o *NamedListItemsDeleteNamedListItemsInternalServerErrorBodyError) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *NamedListItemsDeleteNamedListItemsInternalServerErrorBodyError) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *NamedListItemsDeleteNamedListItemsInternalServerErrorBodyError) UnmarshalBinary(b []byte) error {
	var res NamedListItemsDeleteNamedListItemsInternalServerErrorBodyError
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
NamedListItemsDeleteNamedListItemsNotFoundBody named list items delete named list items not found body
swagger:model NamedListItemsDeleteNamedListItemsNotFoundBody
*/
type NamedListItemsDeleteNamedListItemsNotFoundBody struct {

	// error
	Error *NamedListItemsDeleteNamedListItemsNotFoundBodyError `json:"error,omitempty"`
}

// Validate validates this named list items delete named list items not found body
func (o *NamedListItemsDeleteNamedListItemsNotFoundBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateError(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *NamedListItemsDeleteNamedListItemsNotFoundBody) validateError(formats strfmt.Registry) error {
	if swag.IsZero(o.Error) { // not required
		return nil
	}

	if o.Error != nil {
		if err := o.Error.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("namedListItemsDeleteNamedListItemsNotFound" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("namedListItemsDeleteNamedListItemsNotFound" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this named list items delete named list items not found body based on the context it is used
func (o *NamedListItemsDeleteNamedListItemsNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateError(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *NamedListItemsDeleteNamedListItemsNotFoundBody) contextValidateError(ctx context.Context, formats strfmt.Registry) error {

	if o.Error != nil {

		if swag.IsZero(o.Error) { // not required
			return nil
		}

		if err := o.Error.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("namedListItemsDeleteNamedListItemsNotFound" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("namedListItemsDeleteNamedListItemsNotFound" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *NamedListItemsDeleteNamedListItemsNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *NamedListItemsDeleteNamedListItemsNotFoundBody) UnmarshalBinary(b []byte) error {
	var res NamedListItemsDeleteNamedListItemsNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
NamedListItemsDeleteNamedListItemsNotFoundBodyError named list items delete named list items not found body error
swagger:model NamedListItemsDeleteNamedListItemsNotFoundBodyError
*/
type NamedListItemsDeleteNamedListItemsNotFoundBodyError struct {

	// code
	// Example: NOT_FOUND
	Code string `json:"code,omitempty"`

	// message
	// Example: Named List does not exist
	Message string `json:"message,omitempty"`

	// status
	// Example: 404
	Status string `json:"status,omitempty"`
}

// Validate validates this named list items delete named list items not found body error
func (o *NamedListItemsDeleteNamedListItemsNotFoundBodyError) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this named list items delete named list items not found body error based on context it is used
func (o *NamedListItemsDeleteNamedListItemsNotFoundBodyError) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *NamedListItemsDeleteNamedListItemsNotFoundBodyError) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *NamedListItemsDeleteNamedListItemsNotFoundBodyError) UnmarshalBinary(b []byte) error {
	var res NamedListItemsDeleteNamedListItemsNotFoundBodyError
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
