// Code generated by go-swagger; DO NOT EDIT.

package dfp

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/infobloxopen/b1ddi-go-client/models"
)

// DfpCreateOrUpdateDfpReader is a Reader for the DfpCreateOrUpdateDfp structure.
type DfpCreateOrUpdateDfpReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DfpCreateOrUpdateDfpReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewDfpCreateOrUpdateDfpCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDfpCreateOrUpdateDfpBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDfpCreateOrUpdateDfpNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDfpCreateOrUpdateDfpInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /dfps/{id}] dfpCreateOrUpdateDfp", response, response.Code())
	}
}

// NewDfpCreateOrUpdateDfpCreated creates a DfpCreateOrUpdateDfpCreated with default headers values
func NewDfpCreateOrUpdateDfpCreated() *DfpCreateOrUpdateDfpCreated {
	return &DfpCreateOrUpdateDfpCreated{}
}

/*
DfpCreateOrUpdateDfpCreated describes a response with status code 201, with default header values.

PUT operation response
*/
type DfpCreateOrUpdateDfpCreated struct {
	Payload *models.AtcdfpDfpCreateOrUpdateResponse
}

// IsSuccess returns true when this dfp create or update dfp created response has a 2xx status code
func (o *DfpCreateOrUpdateDfpCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this dfp create or update dfp created response has a 3xx status code
func (o *DfpCreateOrUpdateDfpCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this dfp create or update dfp created response has a 4xx status code
func (o *DfpCreateOrUpdateDfpCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this dfp create or update dfp created response has a 5xx status code
func (o *DfpCreateOrUpdateDfpCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this dfp create or update dfp created response a status code equal to that given
func (o *DfpCreateOrUpdateDfpCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the dfp create or update dfp created response
func (o *DfpCreateOrUpdateDfpCreated) Code() int {
	return 201
}

func (o *DfpCreateOrUpdateDfpCreated) Error() string {
	return fmt.Sprintf("[PUT /dfps/{id}][%d] dfpCreateOrUpdateDfpCreated  %+v", 201, o.Payload)
}

func (o *DfpCreateOrUpdateDfpCreated) String() string {
	return fmt.Sprintf("[PUT /dfps/{id}][%d] dfpCreateOrUpdateDfpCreated  %+v", 201, o.Payload)
}

func (o *DfpCreateOrUpdateDfpCreated) GetPayload() *models.AtcdfpDfpCreateOrUpdateResponse {
	return o.Payload
}

func (o *DfpCreateOrUpdateDfpCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AtcdfpDfpCreateOrUpdateResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDfpCreateOrUpdateDfpBadRequest creates a DfpCreateOrUpdateDfpBadRequest with default headers values
func NewDfpCreateOrUpdateDfpBadRequest() *DfpCreateOrUpdateDfpBadRequest {
	return &DfpCreateOrUpdateDfpBadRequest{}
}

/*
	DfpCreateOrUpdateDfpBadRequest describes a response with status code 400, with default header values.

- 'id' value must be greater than or equal to zero
- 'resolvers' value must contain values that are valid IPv4 or IPv6 addresses
- 'resolvers' value must contain unique elements
- 'default_resolvers' value must contain values that are valid IPv4 or IPv6 addresses
- 'default_resolvers' value must contain unique elements
*/
type DfpCreateOrUpdateDfpBadRequest struct {
	Payload *DfpCreateOrUpdateDfpBadRequestBody
}

// IsSuccess returns true when this dfp create or update dfp bad request response has a 2xx status code
func (o *DfpCreateOrUpdateDfpBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this dfp create or update dfp bad request response has a 3xx status code
func (o *DfpCreateOrUpdateDfpBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this dfp create or update dfp bad request response has a 4xx status code
func (o *DfpCreateOrUpdateDfpBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this dfp create or update dfp bad request response has a 5xx status code
func (o *DfpCreateOrUpdateDfpBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this dfp create or update dfp bad request response a status code equal to that given
func (o *DfpCreateOrUpdateDfpBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the dfp create or update dfp bad request response
func (o *DfpCreateOrUpdateDfpBadRequest) Code() int {
	return 400
}

func (o *DfpCreateOrUpdateDfpBadRequest) Error() string {
	return fmt.Sprintf("[PUT /dfps/{id}][%d] dfpCreateOrUpdateDfpBadRequest  %+v", 400, o.Payload)
}

func (o *DfpCreateOrUpdateDfpBadRequest) String() string {
	return fmt.Sprintf("[PUT /dfps/{id}][%d] dfpCreateOrUpdateDfpBadRequest  %+v", 400, o.Payload)
}

func (o *DfpCreateOrUpdateDfpBadRequest) GetPayload() *DfpCreateOrUpdateDfpBadRequestBody {
	return o.Payload
}

func (o *DfpCreateOrUpdateDfpBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(DfpCreateOrUpdateDfpBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDfpCreateOrUpdateDfpNotFound creates a DfpCreateOrUpdateDfpNotFound with default headers values
func NewDfpCreateOrUpdateDfpNotFound() *DfpCreateOrUpdateDfpNotFound {
	return &DfpCreateOrUpdateDfpNotFound{}
}

/*
	DfpCreateOrUpdateDfpNotFound describes a response with status code 404, with default header values.

- 'id' value must contain existing DFP identifier
*/
type DfpCreateOrUpdateDfpNotFound struct {
	Payload *DfpCreateOrUpdateDfpNotFoundBody
}

// IsSuccess returns true when this dfp create or update dfp not found response has a 2xx status code
func (o *DfpCreateOrUpdateDfpNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this dfp create or update dfp not found response has a 3xx status code
func (o *DfpCreateOrUpdateDfpNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this dfp create or update dfp not found response has a 4xx status code
func (o *DfpCreateOrUpdateDfpNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this dfp create or update dfp not found response has a 5xx status code
func (o *DfpCreateOrUpdateDfpNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this dfp create or update dfp not found response a status code equal to that given
func (o *DfpCreateOrUpdateDfpNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the dfp create or update dfp not found response
func (o *DfpCreateOrUpdateDfpNotFound) Code() int {
	return 404
}

func (o *DfpCreateOrUpdateDfpNotFound) Error() string {
	return fmt.Sprintf("[PUT /dfps/{id}][%d] dfpCreateOrUpdateDfpNotFound  %+v", 404, o.Payload)
}

func (o *DfpCreateOrUpdateDfpNotFound) String() string {
	return fmt.Sprintf("[PUT /dfps/{id}][%d] dfpCreateOrUpdateDfpNotFound  %+v", 404, o.Payload)
}

func (o *DfpCreateOrUpdateDfpNotFound) GetPayload() *DfpCreateOrUpdateDfpNotFoundBody {
	return o.Payload
}

func (o *DfpCreateOrUpdateDfpNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(DfpCreateOrUpdateDfpNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDfpCreateOrUpdateDfpInternalServerError creates a DfpCreateOrUpdateDfpInternalServerError with default headers values
func NewDfpCreateOrUpdateDfpInternalServerError() *DfpCreateOrUpdateDfpInternalServerError {
	return &DfpCreateOrUpdateDfpInternalServerError{}
}

/*
	DfpCreateOrUpdateDfpInternalServerError describes a response with status code 500, with default header values.

- Internal server error occurred
*/
type DfpCreateOrUpdateDfpInternalServerError struct {
	Payload *DfpCreateOrUpdateDfpInternalServerErrorBody
}

// IsSuccess returns true when this dfp create or update dfp internal server error response has a 2xx status code
func (o *DfpCreateOrUpdateDfpInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this dfp create or update dfp internal server error response has a 3xx status code
func (o *DfpCreateOrUpdateDfpInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this dfp create or update dfp internal server error response has a 4xx status code
func (o *DfpCreateOrUpdateDfpInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this dfp create or update dfp internal server error response has a 5xx status code
func (o *DfpCreateOrUpdateDfpInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this dfp create or update dfp internal server error response a status code equal to that given
func (o *DfpCreateOrUpdateDfpInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the dfp create or update dfp internal server error response
func (o *DfpCreateOrUpdateDfpInternalServerError) Code() int {
	return 500
}

func (o *DfpCreateOrUpdateDfpInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /dfps/{id}][%d] dfpCreateOrUpdateDfpInternalServerError  %+v", 500, o.Payload)
}

func (o *DfpCreateOrUpdateDfpInternalServerError) String() string {
	return fmt.Sprintf("[PUT /dfps/{id}][%d] dfpCreateOrUpdateDfpInternalServerError  %+v", 500, o.Payload)
}

func (o *DfpCreateOrUpdateDfpInternalServerError) GetPayload() *DfpCreateOrUpdateDfpInternalServerErrorBody {
	return o.Payload
}

func (o *DfpCreateOrUpdateDfpInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(DfpCreateOrUpdateDfpInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
DfpCreateOrUpdateDfpBadRequestBody dfp create or update dfp bad request body
swagger:model DfpCreateOrUpdateDfpBadRequestBody
*/
type DfpCreateOrUpdateDfpBadRequestBody struct {

	// error
	Error *DfpCreateOrUpdateDfpBadRequestBodyError `json:"error,omitempty"`
}

// Validate validates this dfp create or update dfp bad request body
func (o *DfpCreateOrUpdateDfpBadRequestBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateError(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DfpCreateOrUpdateDfpBadRequestBody) validateError(formats strfmt.Registry) error {
	if swag.IsZero(o.Error) { // not required
		return nil
	}

	if o.Error != nil {
		if err := o.Error.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("dfpCreateOrUpdateDfpBadRequest" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("dfpCreateOrUpdateDfpBadRequest" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this dfp create or update dfp bad request body based on the context it is used
func (o *DfpCreateOrUpdateDfpBadRequestBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateError(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DfpCreateOrUpdateDfpBadRequestBody) contextValidateError(ctx context.Context, formats strfmt.Registry) error {

	if o.Error != nil {

		if swag.IsZero(o.Error) { // not required
			return nil
		}

		if err := o.Error.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("dfpCreateOrUpdateDfpBadRequest" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("dfpCreateOrUpdateDfpBadRequest" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *DfpCreateOrUpdateDfpBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DfpCreateOrUpdateDfpBadRequestBody) UnmarshalBinary(b []byte) error {
	var res DfpCreateOrUpdateDfpBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
DfpCreateOrUpdateDfpBadRequestBodyError dfp create or update dfp bad request body error
swagger:model DfpCreateOrUpdateDfpBadRequestBodyError
*/
type DfpCreateOrUpdateDfpBadRequestBodyError struct {

	// code
	// Example: INVALID_ARGUMENT
	Code string `json:"code,omitempty"`

	// message
	// Example: invalid 'by': invalid DfpCreateOrUpdatePayload.Id: value must be greater than or equal to 0
	Message string `json:"message,omitempty"`

	// status
	// Example: 400
	Status string `json:"status,omitempty"`
}

// Validate validates this dfp create or update dfp bad request body error
func (o *DfpCreateOrUpdateDfpBadRequestBodyError) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this dfp create or update dfp bad request body error based on context it is used
func (o *DfpCreateOrUpdateDfpBadRequestBodyError) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DfpCreateOrUpdateDfpBadRequestBodyError) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DfpCreateOrUpdateDfpBadRequestBodyError) UnmarshalBinary(b []byte) error {
	var res DfpCreateOrUpdateDfpBadRequestBodyError
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
DfpCreateOrUpdateDfpInternalServerErrorBody dfp create or update dfp internal server error body
swagger:model DfpCreateOrUpdateDfpInternalServerErrorBody
*/
type DfpCreateOrUpdateDfpInternalServerErrorBody struct {

	// error
	Error *DfpCreateOrUpdateDfpInternalServerErrorBodyError `json:"error,omitempty"`
}

// Validate validates this dfp create or update dfp internal server error body
func (o *DfpCreateOrUpdateDfpInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateError(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DfpCreateOrUpdateDfpInternalServerErrorBody) validateError(formats strfmt.Registry) error {
	if swag.IsZero(o.Error) { // not required
		return nil
	}

	if o.Error != nil {
		if err := o.Error.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("dfpCreateOrUpdateDfpInternalServerError" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("dfpCreateOrUpdateDfpInternalServerError" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this dfp create or update dfp internal server error body based on the context it is used
func (o *DfpCreateOrUpdateDfpInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateError(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DfpCreateOrUpdateDfpInternalServerErrorBody) contextValidateError(ctx context.Context, formats strfmt.Registry) error {

	if o.Error != nil {

		if swag.IsZero(o.Error) { // not required
			return nil
		}

		if err := o.Error.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("dfpCreateOrUpdateDfpInternalServerError" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("dfpCreateOrUpdateDfpInternalServerError" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *DfpCreateOrUpdateDfpInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DfpCreateOrUpdateDfpInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res DfpCreateOrUpdateDfpInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
DfpCreateOrUpdateDfpInternalServerErrorBodyError dfp create or update dfp internal server error body error
swagger:model DfpCreateOrUpdateDfpInternalServerErrorBodyError
*/
type DfpCreateOrUpdateDfpInternalServerErrorBodyError struct {

	// code
	// Example: INTERNAL
	Code string `json:"code,omitempty"`

	// message
	// Example: Internal Server Error
	Message string `json:"message,omitempty"`

	// status
	// Example: 500
	Status string `json:"status,omitempty"`
}

// Validate validates this dfp create or update dfp internal server error body error
func (o *DfpCreateOrUpdateDfpInternalServerErrorBodyError) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this dfp create or update dfp internal server error body error based on context it is used
func (o *DfpCreateOrUpdateDfpInternalServerErrorBodyError) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DfpCreateOrUpdateDfpInternalServerErrorBodyError) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DfpCreateOrUpdateDfpInternalServerErrorBodyError) UnmarshalBinary(b []byte) error {
	var res DfpCreateOrUpdateDfpInternalServerErrorBodyError
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
DfpCreateOrUpdateDfpNotFoundBody dfp create or update dfp not found body
swagger:model DfpCreateOrUpdateDfpNotFoundBody
*/
type DfpCreateOrUpdateDfpNotFoundBody struct {

	// error
	Error *DfpCreateOrUpdateDfpNotFoundBodyError `json:"error,omitempty"`
}

// Validate validates this dfp create or update dfp not found body
func (o *DfpCreateOrUpdateDfpNotFoundBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateError(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DfpCreateOrUpdateDfpNotFoundBody) validateError(formats strfmt.Registry) error {
	if swag.IsZero(o.Error) { // not required
		return nil
	}

	if o.Error != nil {
		if err := o.Error.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("dfpCreateOrUpdateDfpNotFound" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("dfpCreateOrUpdateDfpNotFound" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this dfp create or update dfp not found body based on the context it is used
func (o *DfpCreateOrUpdateDfpNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateError(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DfpCreateOrUpdateDfpNotFoundBody) contextValidateError(ctx context.Context, formats strfmt.Registry) error {

	if o.Error != nil {

		if swag.IsZero(o.Error) { // not required
			return nil
		}

		if err := o.Error.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("dfpCreateOrUpdateDfpNotFound" + "." + "error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("dfpCreateOrUpdateDfpNotFound" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *DfpCreateOrUpdateDfpNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DfpCreateOrUpdateDfpNotFoundBody) UnmarshalBinary(b []byte) error {
	var res DfpCreateOrUpdateDfpNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
DfpCreateOrUpdateDfpNotFoundBodyError dfp create or update dfp not found body error
swagger:model DfpCreateOrUpdateDfpNotFoundBodyError
*/
type DfpCreateOrUpdateDfpNotFoundBodyError struct {

	// code
	// Example: NOT_FOUND
	Code string `json:"code,omitempty"`

	// message
	// Example: Dfp does not exist
	Message string `json:"message,omitempty"`

	// status
	// Example: 404
	Status string `json:"status,omitempty"`
}

// Validate validates this dfp create or update dfp not found body error
func (o *DfpCreateOrUpdateDfpNotFoundBodyError) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this dfp create or update dfp not found body error based on context it is used
func (o *DfpCreateOrUpdateDfpNotFoundBodyError) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DfpCreateOrUpdateDfpNotFoundBodyError) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DfpCreateOrUpdateDfpNotFoundBodyError) UnmarshalBinary(b []byte) error {
	var res DfpCreateOrUpdateDfpNotFoundBodyError
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
